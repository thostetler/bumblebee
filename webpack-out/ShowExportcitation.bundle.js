/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/components/api_feedback.js":
/*!*******************************************!*\
  !*** ./src/js/components/api_feedback.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/mixins/hardened */ \"./src/js/mixins/hardened.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, Hardened) {\n  var ApiFeedback = function ApiFeedback(options) {\n    _.extend(this, _.defaults(options || {}, {\n      code: 200,\n      msg: undefined\n    }));\n\n    this.setCode(this.code);\n  };\n\n  ApiFeedback.CODES = {\n    INVALID_PASSWORD: 498,\n    ACCOUNT_NOT_FOUND: 495,\n    // Account not found during signin\n    ALREADY_LOGGED_IN: 493,\n    // Already signed during signup\n    REQUIRES_LOGIN: 491,\n    TOO_MANY_CHARACTERS: 486,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    INTERNAL_SERVER_ERROR: 500,\n    BAD_GATEWAY: 502,\n    SERVER_ERROR: 503,\n    TOO_MANY_FAILURES: 580,\n    ALL_FINE: 200,\n    KEEP_WAITING: 190,\n    TESTING: 0,\n    // Internal events\n    MAKE_SPACE: -1,\n    UNMAKE_SPACE: -1.1,\n    SEARCH_CYCLE_STARTED: -2,\n    SEARCH_CYCLE_FAILED_TO_START: -3,\n    SEARCH_CYCLE_PROGRESS: -4,\n    SEARCH_CYCLE_STOP_MONITORING: -5,\n    SEARCH_CYCLE_FINISHED: -6,\n    QUERY_ASSISTANT: -7,\n    ALERT: -8,\n    CANNOT_ROUTE: -9,\n    API_REQUEST_ERROR: -10,\n    BIBCODE_DATA_REQUESTED: -11\n  };\n  var _codes = {};\n\n  _.each(_.pairs(ApiFeedback.CODES), function (p) {\n    _codes[p[1]] = p[0];\n  });\n\n  _.extend(ApiFeedback.prototype, {\n    hardenedInterface: {\n      code: 'integer value of the code',\n      msg: 'string message',\n      toJSON: 'for cloning',\n      getApiRequest: 'to get the original request',\n      getSenderKey: 'retrieve the senders key'\n    },\n    initialize: function initialize() {},\n    toJSON: function toJSON() {\n      return {\n        code: this.code,\n        msg: this.msg\n      };\n    },\n    setCode: function setCode(c) {\n      if (!_codes[c]) {\n        throw new Error('This code is not in the list ApiCodes - please extend js/components/api_feedback first:', this.code);\n      }\n\n      this.code = c;\n    },\n    setApiRequest: function setApiRequest(apiRequest) {\n      this.req = apiRequest;\n    },\n    getApiRequest: function getApiRequest() {\n      return this.req;\n    },\n    setMsg: function setMsg(msg) {\n      this.msg = msg;\n    },\n    getSenderKey: function getSenderKey() {\n      return this.senderKey;\n    },\n    setSenderKey: function setSenderKey(key) {\n      this.senderKey = key;\n    }\n  }, Hardened);\n\n  ApiFeedback.extend = Backbone.Model.extend;\n  return ApiFeedback;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_feedback.js?");

/***/ }),

/***/ "./src/js/components/api_query.js":
/*!****************************************!*\
  !*** ./src/js/components/api_query.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n A facade: api query exposing only the set of functions that we allow. This is\n the module that you want to load in the application (do not load the concrete\n implementaions, such as solr_params !)\n\n Put in your config:\n map: {\n 'your/module': {\n 'api_query_impl': 'js/components/specific_impl_of_the_api_query'\n }\n },\n\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/solr_params */ \"./src/js/components/solr_params.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _, ApiQueryImplementation, Facade) {\n  var hardenedInterface = {\n    add: 'add values',\n    set: 'set (replace existing)',\n    get: 'get values',\n    has: 'has a key',\n    hasVal: 'more specific `has` using _.isEmpty',\n    url: 'url string of the params',\n    load: 'loads query as a string',\n    clear: 'clears all values',\n    unset: 'removes a key',\n    toJSON: 'values back as JSON object',\n    clone: 'make a copy',\n    isLocked: true,\n    lock: true,\n    unlock: true,\n    pairs: 'get all values as pairs',\n    keys: 'as keys',\n    values: 'only values',\n    hasChanged: 'whether this object has modification (since its creation)',\n    previousAttributes: 'get all changed attributes',\n    previous: 'previous values for a given attribute'\n  };\n\n  var ApiQuery = function ApiQuery(data, options) {\n    // Facade pattern, we want to expose only limited API\n    // despite the fact that the underlying instance has\n    // all power of the Backbone.Model\n    if (data instanceof ApiQueryImplementation) {\n      this.innerQuery = new Facade(hardenedInterface, data);\n    } else {\n      this.innerQuery = new Facade(hardenedInterface, new ApiQueryImplementation(data, options));\n    }\n  };\n\n  var toInsert = {};\n\n  _.each(_.keys(hardenedInterface), function (element, index, list) {\n    toInsert[element] = function () {\n      return this.innerQuery[element].apply(this.innerQuery, arguments);\n    };\n  });\n\n  _.extend(ApiQuery.prototype, toInsert, {\n    clone: function clone() {\n      var clone = this.innerQuery.clone.apply(this.innerQuery, arguments);\n      return new ApiQuery(clone);\n    },\n    load: function load() {\n      var clone = this.innerQuery.load.apply(this.innerQuery, arguments);\n      return new ApiQuery(clone);\n    }\n  });\n\n  return ApiQuery;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_query.js?");

/***/ }),

/***/ "./src/js/components/api_request.js":
/*!******************************************!*\
  !*** ./src/js/components/api_request.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/28/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\"), __webpack_require__(/*! js/components/default_request */ \"./src/js/components/default_request.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, Facade, ApiRequestImpl) {\n  var hardenedInterface = {\n    // add makes no sense with request\n    get: 'get a key',\n    set: 'set (replace existing)',\n    url: 'url string defining this request',\n    has: 'has a key',\n    load: 'loads request as a string',\n    clear: 'clears all values',\n    unset: 'removes a key',\n    toJSON: 'values back as JSON object',\n    clone: 'make a copy',\n    isLocked: true,\n    lock: true,\n    unlock: true,\n    pairs: 'get all values as pairs',\n    keys: 'as keys',\n    values: 'only values',\n    hasChanged: 'whether this object has modification (since its creation)',\n    previousAttributes: 'get all changed attributes',\n    previous: 'previous values for a given attribute'\n  };\n\n  var ApiRequest = function ApiRequest(data, options) {\n    // Facade pattern, we want to expose only limited API\n    // despite the fact that the underlying instance has\n    // all power of the Backbone.Model\n    if (data instanceof ApiRequestImpl) {\n      this.innerRequest = new Facade(hardenedInterface, data);\n    } else {\n      this.innerRequest = new Facade(hardenedInterface, new ApiRequestImpl(data, options));\n    }\n  };\n\n  var toInsert = {};\n\n  _.each(_.keys(hardenedInterface), function (element, index, list) {\n    toInsert[element] = function () {\n      return this.innerRequest[element].apply(this.innerRequest, arguments);\n    };\n  });\n\n  _.extend(ApiRequest.prototype, toInsert, {\n    clone: function clone() {\n      var clone = this.innerRequest.clone.apply(this.innerRequest, arguments);\n      return new ApiRequest(clone);\n    },\n    load: function load() {\n      var clone = this.innerRequest.load.apply(this.innerRequest, arguments);\n      return new ApiRequest(clone);\n    }\n  });\n\n  return ApiRequest;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_request.js?");

/***/ }),

/***/ "./src/js/components/api_targets.js":
/*!******************************************!*\
  !*** ./src/js/components/api_targets.js ***!
  \******************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 1/20/15\n *\n * contains api targets\n * and any related limits\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var config = {\n    BOOTSTRAP: '/accounts/bootstrap',\n    SEARCH: 'search/query',\n    QTREE: 'search/qtree',\n    BIGQUERY: 'search/bigquery',\n    EXPORT: 'export/',\n    SERVICE_AUTHOR_NETWORK: 'vis/author-network',\n    SERVICE_PAPER_NETWORK: 'vis/paper-network',\n    SERVICE_WORDCLOUD: 'vis/word-cloud',\n    SERVICE_METRICS: 'metrics',\n    SERVICE_OBJECTS: 'objects',\n    SERVICE_OBJECTS_QUERY: 'objects/query',\n    SERVICE_CITATION_HELPER: 'citation_helper',\n    SERVICE_AUTHOR_AFFILIATION_EXPORT: 'authoraff',\n    MYADS_STORAGE: 'vault',\n    MYADS_NOTIFICATIONS: 'vault/_notifications',\n    AUTHOR_AFFILIATION_SEARCH: 'author-affiliation/search',\n    AUTHOR_AFFILIATION_EXPORT: 'author-affiliation/export',\n    RESOLVER: 'resolver',\n    CSRF: 'accounts/csrf',\n    USER: 'accounts/user',\n    USER_DATA: 'vault/user-data',\n    SITE_CONFIGURATION: 'vault/configuration',\n    TOKEN: 'accounts/user/token',\n    LOGIN: 'accounts/user/login',\n    LOGOUT: 'accounts/user/logout',\n    VERIFY: 'accounts/verify',\n    RESEND_VERIFY: \"accounts/user/{email}/verify\",\n    RESET_PASSWORD: 'accounts/user/reset-password',\n    CHANGE_PASSWORD: 'accounts/user/change-password',\n    CHANGE_EMAIL: 'accounts/user/change-email',\n    INFO: 'accounts/info',\n    PROTECTED: 'accounts/protected',\n    STATUS: 'accounts/status',\n    RECOMMENDER: 'recommender',\n    GRAPHICS: 'graphics',\n    FEEDBACK: 'feedback',\n    // library import from classic\n    LIBRARY_IMPORT_CLASSIC_AUTH: 'harbour/auth/classic',\n    LIBRARY_IMPORT_CLASSIC_MIRRORS: 'harbour/mirrors',\n    LIBRARY_IMPORT_CLASSIC_TO_BBB: 'biblib/classic',\n    // library import from 2.0\n    LIBRARY_IMPORT_ADS2_AUTH: 'harbour/auth/twopointoh',\n    LIBRARY_IMPORT_ADS2_TO_BBB: 'biblib/twopointoh',\n    LIBRARY_IMPORT_ZOTERO: 'harbour/export/twopointoh/zotero',\n    LIBRARY_IMPORT_MENDELEY: 'harbour/export/twopointoh/mendeley',\n    // returns credentials from both classic and 2.0 if they exist\n    LIBRARY_IMPORT_CREDENTIALS: 'harbour/user',\n    // store ADS information connected with ORCID here\n    ORCID_PREFERENCES: 'orcid/preferences',\n    ORCID_NAME: 'orcid/orcid-name',\n    // library endpoints\n    // can get info about all libraries, or list of bibcodes associated w/specific lib (libraries/id)\n    // post to /libraries/ to create a library\n    LIBRARIES: 'biblib/libraries',\n    LIBRARY_TRANSFER: 'biblib/transfer',\n    // can post, put, and delete changes to individual libs using this endpoint\n    DOCUMENTS: 'biblib/documents',\n    PERMISSIONS: 'biblib/permissions',\n    REFERENCE: 'reference/text',\n\n    /*\n     * this is used by the mixin 'user_change_rows' to set max allowed/default requested\n     */\n    _limits: {\n      // use the same name from discovery.config.js\n      ExportWidget: {\n        default: 500,\n        limit: 3000\n      },\n      Metrics: {\n        default: 7000,\n        limit: 7000\n      },\n      AuthorNetwork: {\n        default: 400,\n        limit: 1000\n      },\n      PaperNetwork: {\n        default: 400,\n        limit: 1000\n      },\n      ConceptCloud: {\n        default: 150,\n        limit: 150\n      },\n      BubbleChart: {\n        // default == limit\n        default: 1500\n      }\n    }\n  }; // add credential info\n  // doesn't require cross domain cookies\n\n  config._doesntNeedCredentials = [config.SEARCH, config.QTREE, config.BIGQUERY, config.EXPORT, config.SERVICE_AUTHOR_NETWORK, config.SERVICE_PAPER_NETWORK, config.SERVICE_WORDCLOUD, config.SERVICE_METRICS, config.RECOMMENDER, config.GRAPHICS, config.FEEDBACK];\n  return config;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_targets.js?");

/***/ }),

/***/ "./src/js/components/default_request.js":
/*!**********************************************!*\
  !*** ./src/js/components/default_request.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Created by rchyla on 3/28/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/multi_params */ \"./src/js/components/multi_params.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, ApiQuery, MultiParams) {\n  var basicCheck = function basicCheck(s) {\n    if (_.isString(s)) {\n      return true;\n    }\n\n    if (_.isArray(s)) {\n      var l = s.length;\n\n      for (var i = 0; i < l; i++) {\n        var x = s[i];\n\n        if (!(_.isString(x) || _.isNumber(x))) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  var allowedAttrs = {\n    query: function query(v) {\n      if (_.isUndefined(v)) {\n        return true;\n      }\n\n      return v instanceof ApiQuery;\n    },\n    target: basicCheck,\n    sender: basicCheck,\n    options: basicCheck\n  };\n  var checker = {\n    target: function target(s) {\n      if (s && s.substring(0, 1) !== '/') {\n        return '/' + s;\n      }\n    }\n  };\n  var Request = MultiParams.extend({\n    /**\n     * Internal method: we allow only certain keys\n     *\n     * @param attributes\n     * @param options\n     * @returns {boolean}\n     * @private\n     */\n    _validate: function _validate(attributes, options) {\n      _.forOwn(attributes, function (val, attr) {\n        var tempVal = attributes[attr];\n\n        if (!(attr in allowedAttrs)) {\n          throw new Error('Invalid attr: ' + attr);\n        }\n\n        if (!allowedAttrs[attr].call(allowedAttrs, tempVal)) {\n          throw new Error('Invalid value:key ' + attr + tempVal);\n        }\n      });\n\n      return true;\n    },\n\n    /**\n     * Modified version of the multi-valued set(); we do not insist\n     * on having the values in array\n     *\n     * @param key\n     * @param val\n     * @param options\n     * @returns {Request}\n     */\n    set: function set(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    // for requests, we use all components: path, query, hash\n    _checkParsed: function _checkParsed(attrs) {\n      if (_.isObject(attrs)) {\n        var ret = {};\n\n        if ('#query' in attrs && !_.isEmpty(attrs['#query'])) {\n          ret.query = new ApiQuery(attrs['#query']);\n        }\n\n        if ('#path' in attrs) {\n          ret.target = attrs['#path'][0];\n        }\n\n        if ('#hash' in attrs) {\n          _.extend(ret, _.each(attrs['#hash'], function (val, key, obj) {\n            if (val.length == 1) {\n              obj[key] = val[0];\n            }\n          }));\n        }\n\n        return ret;\n      }\n\n      return attrs;\n    },\n\n    /*\n     * Return the url string encoding all parameters that made\n     * this request. The parameters will be sorted alphabetically\n     * by their keys and URL encoded so that they can be used\n     * in requests.\n     */\n    url: function url(whatToSort) {\n      if (!whatToSort) {\n        whatToSort = this.attributes;\n      }\n\n      var target = whatToSort.target;\n      var url = target ? _.isArray(target) ? target.join('/') : target : '';\n\n      if ('query' in whatToSort) {\n        url += '?' + whatToSort.query.url();\n      }\n\n      if ('sender' in whatToSort) {\n        url += '#' + MultiParams.prototype.url.call(this, {\n          sender: whatToSort.sender\n        });\n      }\n\n      return url;\n    },\n\n    /**\n     * Re-constructs the query from the url string, returns the json attributes;\n     * cannot be used it the instance is locked\n     *\n     * @param query (String)\n     * @returns {Model}\n     */\n    load: function load(query) {\n      return MultiParams.prototype.load.call(this, query.indexOf('?') > -1 ? query : query + '?');\n    }\n  });\n  return Request;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/default_request.js?");

/***/ }),

/***/ "./src/js/components/facade.js":
/*!*************************************!*\
  !*** ./src/js/components/facade.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/16/14. inspiration: http://jsfiddle.net/pajtai/GD5qR/35/\n */\n\n/*\n * // Interface\n *  var remoteInterface = {\n *    on: 'turn on'\n *  };\n *  // Implementation\n *  var htmlRemote = {\n *    on: function() { console.log(\"remote on\"); return this; }\n *  };\n *  // Protecting the implementation\n *  var htmlInterface = new Facade(remoteInterface, htmlRemote);\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Facade) {\n  // The Facade encapsulates objectIn according to the description\n  // The exposed facade is guaranteed to have exactly the functions described in description.\n  var Facade = function Facade(description, objectIn) {\n    var facade; // TODO: add enforce of \"new\"\n\n    facade = {};\n    this.mixIn(description, objectIn, facade); // TODO: check that \"mixIn\" is not taken\n\n    facade.mixIn = this.mixIn;\n    return facade;\n  };\n\n  Facade.prototype.mixIn = function (description, objectIn, facade) {\n    var property;\n    var propertyValue;\n    facade = facade || this;\n\n    for (property in description) {\n      propertyValue = description[property];\n\n      if (property in objectIn) {\n        var p = objectIn[property];\n\n        if (typeof propertyValue === 'function') {\n          // redefining the method\n          facade[property] = _.bind(propertyValue, objectIn);\n        } else if (typeof p === 'function') {\n          // exposing the method\n          facade[property] = _.bind(p, objectIn);\n        } else if (_.isUndefined(p)) {// pass\n        } else if (_.isString(p) || _.isNumber(p) || _.isBoolean(p) || _.isDate(p) || _.isNull(p) || _.isRegExp(p)) {\n          // build getter method\n          facade['get' + property.substring(0, 1).toUpperCase() + property.substring(1)] = _.bind(function () {\n            return this.ctx[this.name];\n          }, {\n            ctx: objectIn,\n            name: property\n          });\n          facade[property] = p; // copy the value (it is immutable anyways)\n        } else if (p.hasOwnProperty('__facade__') && p.__facade__) {\n          // exposing internal facade\n          facade[property] = p;\n        } else if (_.isObject(p) && 'getHardenedInstance' in p) {\n          // builds a facade\n          facade[property] = p.getHardenedInstance();\n        } else {\n          throw new Error(\"Sorry, you can't wrap '\" + property + \"': \" + p);\n        }\n      } else if (typeof propertyValue === 'function') {\n        facade[property] = _.bind(propertyValue, objectIn);\n      } else {\n        throw new Error('Unknown key: ' + property + '(' + propertyValue + ')');\n      }\n    }\n\n    if (objectIn) {\n      // .name is not supported in IE\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n      facade.__facade__ = Boolean(objectIn.constructor ? objectIn.constructor.name ? objectIn.constructor.name : true : true);\n    } else {\n      facade.__facade__ = true;\n    } // TODO:rca - shall we use?\n    // if (Object.freeze)\n    //  facade = Object.freeze(facade);\n\n\n    return facade;\n  };\n\n  return Facade;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/facade.js?");

/***/ }),

/***/ "./src/js/components/json_response.js":
/*!********************************************!*\
  !*** ./src/js/components/json_response.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * A simple wrapper around the API response for ADS\n * This class is extended/enhanced by other implementations\n * (e.g. solr_response)\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, ApiQuery) {\n  var JSONResponse = function JSONResponse(attributes, options) {\n    var defaults;\n    var attrs = attributes || {};\n    options || (options = {});\n    this.rid = _.uniqueId('r');\n    this.readOnly = options.hasOwnProperty('readOnly') ? options.readOnly : true;\n    this._url = options.hasOwnProperty('url') ? options.url : null;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n\n    if (defaults = _.result(this, 'defaults')) {\n      attrs = _.defaults({}, attrs, defaults);\n    }\n\n    this.attributes = attrs;\n    this.initialize.apply(this, arguments);\n  };\n\n  _.extend(JSONResponse.prototype, {\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function initialize() {},\n    getApiQuery: function getApiQuery() {\n      return this.apiQuery;\n    },\n    setApiQuery: function setApiQuery(q) {\n      if (!q) {\n        return;\n      }\n\n      if (!(q instanceof ApiQuery)) {\n        throw new Error('Only ApiQuery instances accepted');\n      }\n\n      this.apiQuery = q;\n    },\n    // Return a copy of the model's `attributes` object.\n    toJSON: function toJSON(options) {\n      return this._clone(this.attributes);\n    },\n    // url string that identifies this object\n    url: function url() {\n      if (this._url) {\n        return this._url;\n      }\n\n      return this.rid; // default is just to return response id\n    },\n    set: function set(key, val, options) {\n      if (this.readOnly) {\n        throw Error(\"You can't change read-only response object\");\n      }\n\n      var parts = this._split(key);\n\n      if (parts.length == 1) {\n        this.attributes[parts[0]] = val;\n      } else {\n        var pointer = this.get(key);\n        pointer = val;\n      }\n    },\n    _split: function _split(key) {\n      var parts = [];\n      var i = 0;\n      var l = key.length;\n      var start = 0;\n      var quotes = [];\n\n      while (i < l) {\n        if (key[i] == quotes[quotes.length - 1]) {\n          quotes.pop();\n        } else if (key[i] == '\"' || key[i] == \"'\") {\n          quotes.push(key[i]);\n        } else if (key[i] == '.' && quotes.length == 0) {\n          parts.push(key.substring(start, i));\n          start = i + 1;\n        } else if (key[i] == '[' && quotes.length == 0) {\n          parts.push(key.substring(start, i));\n          parts.push(key.substring(i, key.indexOf(']', i + 1) + 1));\n          start = i = key.indexOf(']', i + 1) + 1;\n        }\n\n        i += 1;\n      }\n\n      if (start < l) {\n        parts.push(key.substring(start));\n      } // console.log(key, parts);\n\n\n      return parts;\n    },\n    has: function has(key) {\n      return this.get(key, true);\n    },\n    get: function get(key, justCheck, defaultValue) {\n      // if key empty, return everything\n      if (!key) {\n        return this._clone(this.attributes);\n      }\n\n      var parts = this._split(key);\n\n      var found = [];\n      var pointer = this.attributes;\n\n      while (parts.length > 0) {\n        var k = parts.shift();\n\n        if (pointer.hasOwnProperty(k)) {\n          pointer = pointer[k];\n          found.push(k);\n        } else if (k.indexOf('[') > -1) {\n          // foo['something'] or foo[0]\n          var m = k.trim().substring(1, k.length - 1);\n\n          if ((m.indexOf('\"') > -1 || m.indexOf(\"'\") > -1) && pointer.hasOwnProperty(m.substring(1, m.length - 1))) {\n            // object property access\n            pointer = pointer[m.substring(1, m.length - 1)];\n            found.push(m);\n          } else if (_.isArray(pointer)) {\n            var ix = null;\n\n            try {\n              ix = parseInt(m);\n\n              if (_.isNaN(ix) || pointer.length <= ix || ix < 0) {\n                if (justCheck) {\n                  return false;\n                }\n\n                if (typeof defaultValue !== 'undefined') {\n                  return defaultValue;\n                }\n\n                throw new Error();\n              }\n\n              pointer = pointer[ix];\n              found.push(m);\n            } catch (e) {\n              if (justCheck) {\n                return false;\n              }\n\n              if (typeof defaultValue !== 'undefined') {\n                return defaultValue;\n              }\n\n              throw new Error(\"Can't find: \" + key + (found.length > 0 ? ' (worked up to: ' + found.join('.') + ')' : ''));\n            }\n          } else {\n            if (justCheck) {\n              return false;\n            }\n\n            if (typeof defaultValue !== 'undefined') {\n              return defaultValue;\n            }\n\n            throw new Error(\"Can't find: \" + key + (found.length > 0 ? ' (worked up to: ' + found.join('.') + ')' : ''));\n          }\n        } else {\n          if (justCheck) {\n            return false;\n          }\n\n          if (typeof defaultValue !== 'undefined') {\n            return defaultValue;\n          }\n\n          throw new Error(\"Can't find: \" + key + (found.length > 0 ? ' (worked up to: ' + found.join('.') + ')' : ''));\n        }\n      }\n\n      if (justCheck) {\n        return true;\n      }\n\n      return this._clone(pointer);\n    },\n    clone: function clone() {\n      return new this.constructor(this.attributes);\n    },\n    // creates a copy of the requested elements\n    _clone: function _clone(elem) {\n      if (!this.readOnly || !_.isObject(elem)) {\n        return elem;\n      }\n\n      if (_.cloneDeep) {\n        // lodash\n        return _.cloneDeep(elem);\n      }\n\n      return JSON.parse(JSON.stringify(elem));\n    },\n    isLocked: function isLocked() {\n      return this.readOnly;\n    },\n    lock: function lock() {\n      return this.readOnly = true;\n    },\n    unlock: function unlock() {\n      return this.readOnly = false;\n    }\n  }); // use the bb extend function for classes hierarchy\n\n\n  JSONResponse.extend = Backbone.Model.extend;\n  return JSONResponse;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/**\n * Created by rchyla on 3/3/14.\n */\n\n//# sourceURL=webpack://bumblebee/./src/js/components/json_response.js?");

/***/ }),

/***/ "./src/js/components/multi_params.js":
/*!*******************************************!*\
  !*** ./src/js/components/multi_params.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n multi_params is a generic class to store any parameters;\n it is backed by BB.Model and has all the functionality\n the values are always stored as an array of values; so\n even if you try to set strings, you will always have\n list of strings\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! jquery */ \"./src/libs/jquery.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _, $) {\n  var Model = Backbone.Model.extend({\n    locked: false,\n    _checkLock: function _checkLock() {\n      if (this.locked === true) {\n        throw Error('Object locked for modifications');\n      }\n    },\n    isLocked: function isLocked() {\n      return this.locked;\n    },\n    lock: function lock() {\n      this.locked = true;\n    },\n    unlock: function unlock() {\n      this.locked = false;\n    },\n    clone: function clone() {\n      if (this.isLocked()) {\n        var c = new this.constructor(this.attributes);\n        c.lock();\n        return c;\n      }\n\n      return new this.constructor(this.attributes);\n    },\n    hasVal: function hasVal(key) {\n      return !_.isEmpty(this.get(key));\n    },\n    // we allow only strings and numbers; instead of sending\n    // signal we throw a direct error\n    _validate: function _validate(attributes, options) {\n      // check we have only numbers and/or finite numbers\n      for (var attr in attributes) {\n        if (!_.isString(attr)) {\n          throw new Error('Keys must be strings, not: ' + attr);\n        } // remove empty strings\n\n\n        var tempVal = attributes[attr];\n        tempVal = _.without(_.flatten(tempVal), '', false, null, undefined, NaN);\n\n        if (!_.isArray(tempVal)) {\n          throw new Error('Values were not converted to an Array');\n        }\n\n        if (_.isEmpty(tempVal) && options.unset !== true) {\n          throw new Error('Empty values not allowed');\n        }\n\n        if (!_.every(tempVal, function (v) {\n          return _.isString(v) || _.isNumber(v) && !_.isNaN(v);\n        })) {\n          throw new Error('Invalid value (not a string or number): ' + tempVal);\n        }\n\n        attributes[attr] = tempVal;\n      }\n\n      return true;\n    },\n    // Every value is going to be multi-valued by default\n    // in this way we can treat all objects in the same way\n    set: function set(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      for (var attr in attrs) {\n        var tempVal = attrs[attr]; // convert to array if necessary\n\n        if (!_.isArray(tempVal)) {\n          attrs[attr] = _.flatten([tempVal]);\n        }\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    unset: function unset() {\n      this._checkLock();\n\n      Backbone.Model.prototype.unset.apply(this, arguments);\n    },\n    // adds values to existing (like set, but keeps the old vals)\n    add: function add(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      for (var attr in attrs) {\n        var tempVal = attrs[attr]; // convert to array if necessary\n\n        if (!_.isArray(tempVal)) {\n          tempVal = _.flatten([tempVal]);\n        }\n\n        if (this.has(attr)) {\n          tempVal = _.clone(this.get(attr)).concat(tempVal);\n        }\n\n        attrs[attr] = tempVal;\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    // synchronization is disabled\n    sync: function sync() {\n      throw Error('MultiParams cannot be saved to server');\n    },\n\n    /*\n     * Return the url string encoding all parameters that made\n     * this query. The parameters will be sorted alphabetically\n     * by their keys and URL encoded so that they can be used\n     * in requests.\n     */\n    url: function url(whatToSort) {\n      if (!whatToSort) {\n        whatToSort = this.attributes;\n      } // sort keys alphabetically\n\n\n      var sorted = _.pairs(whatToSort).sort(function (a, b) {\n        return a[0] > b[0] ? 1 : a[0] < b[0] ? -1 : 0;\n      }); // June1:rca - I need to preserve order of values (becuaes of the query modifications/updates) the logic\n      // just requires us to be careful and we need order to be preserved when the query is cloned\n      // also sort values\n      // var s = {};\n      // sorted.map(function(item) { s[item[0]] = (_.isArray(item[1]) ? item[1].sort() : item[1]) });\n      // we have to double encode certain elements\n      // sorted = _.map(sorted, function(pair) { return [pair[0], _.map(pair[1], function(v) {return (v.indexOf && v.indexOf('=') > -1) ? encodeURIComponent(v) : v })]});\n      // use traditional encoding\n      // use %20 instead of + (url encoding instead of form encoding)\n\n\n      var encoded = $.param(_.object(sorted), true);\n      encoded = encoded.replace(/\\+/g, '%20'); // Replace funky unicode quotes with normal ones\n\n      encoded = encoded.replace(/%E2%80%9[ECD]/g, '%22');\n      return encoded;\n    },\n\n    /**\n     * Parses string (urlparams) and returns it as an object\n     * @param resp\n     * @param options\n     * @returns {*}\n     */\n    parse: function parse(resp, options) {\n      if (_.isString(resp)) {\n        var attrs = {};\n        resp = decodeURI(resp);\n\n        if (resp.indexOf('?') > -1) {\n          attrs['#path'] = [resp.slice(0, resp.indexOf('?'))];\n          resp = resp.slice(resp.indexOf('?') + 1);\n        }\n\n        if (resp.indexOf('#') > -1) {\n          attrs['#hash'] = this._parse(resp.slice(resp.indexOf('#') + 1));\n          resp = resp.slice(0, resp.indexOf('#'));\n        }\n\n        attrs['#query'] = this._parse(resp);\n        return this._checkParsed(attrs);\n      }\n\n      return this._checkParsed(resp); // else return resp object\n    },\n    _parse: function _parse(resp) {\n      var attrs = {};\n      var hash;\n\n      if (!resp.trim()) {\n        return attrs;\n      }\n\n      var hashes = resp.slice(resp.indexOf('?') + 1).split('&'); // resp = decodeURIComponent(resp);\n\n      var key;\n      var value;\n\n      for (var i = 0; i < hashes.length; i++) {\n        hash = hashes[i].split('=');\n        key = decodeURIComponent(hash[0].split('+').join(' ')); // optimized: .replace(/\\+/g, \" \")\n\n        var vall = hash[1];\n\n        if (hash.length > 2) {\n          hash.shift();\n          vall = hash.join('=');\n        } // replace literal '%' with code and '+' become literal spaces\n\n\n        value = decodeURIComponent(vall.replace(/%(?!\\d|[ABCDEF]+)/gi, '%25').split('+').join(' '));\n\n        if (attrs[key] !== undefined) {\n          attrs[key].push(value);\n        } else {\n          attrs[key] = [value];\n        }\n      }\n\n      return attrs;\n    },\n    // default behaviour is just to keep the query parameters\n    // after the string was parsed, you can override it to suit other needs\n    _checkParsed: function _checkParsed(attrs) {\n      if (_.isObject(attrs)) {\n        if ('#query' in attrs) {\n          return attrs['#query'];\n        }\n      }\n\n      return attrs;\n    },\n\n    /**\n     * Re-constructs the query from the url string, returns the json attributes;\n     * cannot be used it the instance is locked\n     *\n     * @param query (String)\n     * @returns {Model}\n     */\n    load: function load(query) {\n      this._checkLock();\n\n      var vals = this.parse(query);\n      this.clear();\n      this.set(vals);\n      return this;\n    }\n  });\n  return Model;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/multi_params.js?");

/***/ }),

/***/ "./src/js/components/pubsub_events.js":
/*!********************************************!*\
  !*** ./src/js/components/pubsub_events.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/30/14.\n */\n\n/**\n * Catalogue of PubSub events; we assume this:\n *\n *  - FC = the component lives in the 'Forbidden City'\n *         inside Application, typically this is a PubSub or Api, Mediator\n *         or any component with elevated access\n *\n *  - OC = Outer City: the suburbs of the application; these are typically\n *         UI components (behind the wall), untrusted citizens of the\n *         BumbleBee state\n *\n *  WARNING: do not use spaces; events with spaces are considered to be\n *        multiple events! (e.g. '[PubSub] New-Query' will be two events)\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var PubSubEvents = {\n    /**\n     * Usually called by OC's as a first step in the query processing.\n     * It means: 'user did something', we need to start reacting. The OC\n     * will build a new ApiQuery and send it together with this event\n     */\n    START_SEARCH: '[PubSub]-New-Query',\n\n    /**\n     * Called by FC's (usually: Mediator) - this is a signal to *all* OC's\n     * they should receive ApiQuery object, compare it against their\n     * own query; find diff and create a new ApiRequest (asking for a data)\n     * and send that back\n     */\n    INVITING_REQUEST: '[PubSub]-Inviting-Request',\n\n    /**\n     * Will be called by OC's, this is response to ApiQuery input.\n     */\n    DELIVERING_REQUEST: '[PubSub]-New-Request',\n\n    /**\n     * Will be called by OC's, this is one-time forget action (outside of the\n     * the search cycle); use this for any query that needs to be executed\n     * and not be tracked by search cycle\n     */\n    EXECUTE_REQUEST: '[PubSub]-Execute-Request',\n\n    /**\n     * Called from the router, the QID will be passed; the query needs to be\n     * loaded and executed\n     */\n    EXECUTE_STORED_QUERY: '[PubSub]-Execute-Stored-Query',\n\n    /**\n     * Published by FC's - typically Mediator - when a response has been retrieved\n     * for a given ApiRequest.\n     *\n     * OC's should subscribe to this event when they want to receive data\n     * from the treasury (api)\n     *\n     *  - input: ApiRequest\n     *  - output: ApiResponse\n     */\n    DELIVERING_RESPONSE: '[PubSub]-New-Response',\n\n    /**\n     * The walls of the FC are being closed; and no new requests will be served\n     */\n    CLOSING_GATES: '[PubSub]-Closing',\n\n    /**\n     * PubSub will not receive any requests any more\n     */\n    CLOSED_FOR_BUSINESS: '[PubSub]-Closed',\n\n    /**\n     * ForbiddenCity is about to receive requests\n     */\n    OPENING_GATES: '[PubSub]-Opening',\n\n    /**\n     * Called after PubSub became ready - it is fully operational\n     */\n    OPEN_FOR_BUSINESS: '[PubSub]-Ready',\n\n    /**\n     *  Set of error warnings issues by PubSub - or by some other FC's - to\n     *  deal with congestion or other problems\n     */\n    SMALL_FIRE: '[PubSub]-Problem',\n    BIG_FIRE: '[PubSub]-Big-Problem',\n    CITY_BURNING: '[PubSub]-Disaster',\n\n    /**\n     * A message containing feedback from the FC; traveling towards OC\n     * The feedback will be instance of ApiFeedback\n     */\n    FEEDBACK: '[FC]-FeedBack',\n\n    /**\n     * A message from the router requesting showing citizens of the\n     * city\n     */\n    DISPLAY_DOCUMENTS: '[Router]-Display-Documents',\n    DISPLAY_DOCUMENTS_DETAILS: '[Router]-Display-Documents-Details',\n\n    /**\n     * Used by OC to request parsed query tree - to check a query\n     * for example\n     */\n    GET_QTREE: '[FC]-GetQTree',\n    NAVIGATE: '[Router]-Navigate-With-Trigger',\n\n    /*\n     * so navigator can notify interested widgets about a change\n     * from search page to user page, for instance-- navigator cannot\n     * to this since it listens to many events including widget-show events\n     * */\n    PAGE_CHANGE: '[Navigator]Page-Changed',\n\n    /* for custom widget-to-widget events */\n    CUSTOM_EVENT: '[PubSub]-Custom-Event',\n    ARIA_ANNOUNCEMENT: '[PubSub]-Aria-Announcement',\n\n    /* anything to do with changing the state of the user, including session events */\n    USER_ANNOUNCEMENT: '[PubSub]-User-Announcement',\n\n    /**\n     * A message/action that should be displayed to the user (on prominent)\n     * place\n     */\n    ALERT: '[Alert]-Message',\n    ORCID_ANNOUNCEMENT: '[PubSub]-Orcid-Announcement',\n\n    /**\n     * Happens during the main cycle of the application birth\n     *  LOADED = when all components were successfuly loaded\n     *  BOOTSTRAPPED = + when all dynamic config was loaded\n     *  STARTING = + right before the router and history objects start()\n     *  STARTED = app is alive and handling requests\n     */\n    APP_LOADED: '[App]-Application-Loaded',\n    APP_BOOTSTRAPPED: '[App]-Application-Bootstrapped',\n    APP_STARTING: '[App]-Application-Starting',\n    APP_STARTED: '[App]-Application-Started',\n    APP_EXIT: '[App]-Exit',\n\n    /**\n     * Is triggered when user selects/deselects records\n     */\n    PAPER_SELECTION: '[User]-Paper-Selection',\n    // instead of toggling, adds all papers\n    BULK_PAPER_SELECTION: '[User]-Bulk-Paper-Selection',\n\n    /*\n     * is triggered by app storage itself when list of selected papers changes\n     * */\n    STORAGE_PAPER_UPDATE: '[User]-Paper-Update',\n    LIBRARY_CHANGE: '[PubSub]-Library-Change'\n  };\n  return PubSubEvents;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/pubsub_events.js?");

/***/ }),

/***/ "./src/js/components/pubsub_key.js":
/*!*****************************************!*\
  !*** ./src/js/components/pubsub_key.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/14/14.\n */\n\n/*\n * A simple, yet important, class - every subscriber\n * to the PubSub must contain one key. This class\n * should be instantiated in a safe manner. ie.\n *\n * PubSubKey.newInstance({creator: this});\n *\n * But beware that as long as the subscriber is alive\n * reference to the creator will be saved inside\n * the key! So choose carefully whether you use this\n * functionality\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_) {\n  var PubSubKey = function PubSubKey(options) {\n    _.extend(this, options);\n  };\n\n  _.extend(PubSubKey, {\n    /*\n     * Creates a new Instances of the PubSubKey\n     * with a storage that cannot be changed.\n     * To double sign the key, you can pass\n     * an object that identifies creator of the\n     * key and test identity, eg.\n     *\n     * var creator = {};\n     * var k = PubSubKey(creator);\n     * k.getCreator() === k;\n     *\n     */\n    newInstance: function newInstance(options) {\n      var priv = {\n        id: _.has(options, 'id') ? options.id : _.uniqueId(':psk'),\n        creator: _.has(options, 'creator') ? options.creator : null\n      };\n      return new PubSubKey({\n        getId: function getId() {\n          return priv.id;\n        },\n        getCreator: function getCreator() {\n          return priv.creator;\n        }\n      });\n    }\n  });\n\n  return PubSubKey;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/pubsub_key.js?");

/***/ }),

/***/ "./src/js/components/solr_params.js":
/*!******************************************!*\
  !*** ./src/js/components/solr_params.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\nSubclass of the multi-param with a functionality specific for\nSOLR queries. Do not use this class directly inside your app!\nInstead, import 'api_query' and configure it properly\n\n * <p>For a list of possible parameters, please consult the links below.</p>\n *\n * @see http://wiki.apache.org/solr/CoreQueryParameters\n * @see http://wiki.apache.org/solr/CommonQueryParameters\n * @see http://wiki.apache.org/solr/SimpleFacetParameters\n * @see http://wiki.apache.org/solr/HighlightingParameters\n * @see http://wiki.apache.org/solr/MoreLikeThis\n * @see http://wiki.apache.org/solr/SpellCheckComponent\n * @see http://wiki.apache.org/solr/StatsComponent\n * @see http://wiki.apache.org/solr/TermsComponent\n * @see http://wiki.apache.org/solr/TermVectorComponent\n * @see http://wiki.apache.org/solr/LocalParams\n *\n * @param properties A map of fields to set. Refer to the list of public fields.\n * @class ParameterStore\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! js/components/multi_params */ \"./src/js/components/multi_params.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! jquery */ \"./src/libs/jquery.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (MultiParams, Backbone, _, $) {\n  var SolrParams = MultiParams.extend({\n    fieldsToConcatenate: [],\n    defaultOperator: ' ',\n    fieldProcessors: {\n      '*': function _(vals, self) {\n        return [vals.join(self.defaultOperator)];\n      }\n    },\n    initialize: function initialize(attributes, options) {\n      if (options) {\n        _.extend(this, _.pick(options, ['fieldsToConcatenate', 'defaultOperator', 'fieldProcessors']));\n      }\n    },\n    url: function url(resp, options) {\n      // first massage the fields, but do not touch the original values\n      // lodash has a parameter isDeep that can be set to true, but\n      // for compatibility reasons with underscore, lets' not use it\n      // the values should always be only one level deep\n      var values = _.clone(this.attributes);\n\n      var l = this.fieldsToConcatenate.length;\n      var k = '';\n\n      for (var i = 0; i < l; i++) {\n        k = this.fieldsToConcatenate[i];\n\n        if (this.has(k)) {\n          if (this.fieldProcessors[k]) {\n            values[k] = this.fieldProcessors[k](this.get(k), this);\n          } else {\n            values[k] = this.fieldProcessors['*'](this.get(k), this);\n          }\n        }\n      } // then call the default implementation of the url handling\n\n\n      return MultiParams.prototype.url.call(this, values);\n    }\n  });\n  return SolrParams;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/solr_params.js?");

/***/ }),

/***/ "./src/js/mixins/dependon.js":
/*!***********************************!*\
  !*** ./src/js/mixins/dependon.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/13/14.\n */\n\n/*\n * This module contains a set of utilities that can be added to classes\n * to give them certain functionality\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/pubsub_events */ \"./src/js/components/pubsub_events.js\"), __webpack_require__(/*! js/components/pubsub_key */ \"./src/js/components/pubsub_key.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, PubSubEvents, PubSubKey) {\n  var Mixin = {\n    /*\n     * BeeHive is the object that allows modules to get access to objects\n     * of the application (but we make sure these objects are protected\n     * and only application can set/change them). This mixin gives objects\n     * functions to query 'BeeHive'\n     */\n    BeeHive: {\n      // called by parents (app) to give modules access\n      setBeeHive: function setBeeHive(brundibar) {\n        if (_.isEmpty(brundibar)) throw new Error('Huh? Empty Beehive? Trying to be funny?');\n        this.__beehive = brundibar;\n      },\n      getBeeHive: function getBeeHive() {\n        if (!this.hasBeeHive()) throw new Error('The BeeHive is inactivate (or dead :<})');\n        return this.__beehive;\n      },\n      hasBeeHive: function hasBeeHive() {\n        if (this.__beehive && (this.__beehive.active || this.__beehive.__facade__ && this.__beehive.getActive())) {\n          return true;\n        }\n\n        return false;\n      },\n\n      /**\n       * Method which returns a masked instance of PubSub (unless the PubSub\n       * is already a hardened instance; which carries its own key)\n       *\n       * You can call pubsub.publish() without having to supply the pubsub key\n       * (which is what most controllers want to do; there are only some\n       * exceptions to this rule; ie. query-mediator). If you need to get\n       * access to the full PubSub (and you have it inside BeeHive) then do\n       * this.getBeeHive().getService('PubSub')\n       */\n      getPubSub: function getPubSub() {\n        if (!this.hasBeeHive()) throw new Error('The BeeHive is inactive (or dead >:})');\n        if (!this.__ctx) this.__ctx = {};\n        if (this.__ctx.pubsub) return this.__ctx.pubsub;\n\n        var pubsub = this.__beehive.getService('PubSub');\n\n        if (pubsub && pubsub.__facade__) return pubsub; // build a unique key for this instance\n\n        this.__ctx.pubsub = {\n          _key: pubsub.getPubSubKey(),\n          _exec: function _exec(name, args) {\n            args = _.toArray(args);\n            if (args[0] instanceof PubSubKey) throw Error('You have given us a PubSub key, this.publish() method does not need it.');\n            args.unshift(this._key);\n            pubsub[name].apply(pubsub, args);\n          },\n          publish: function publish() {\n            this._exec('publish', arguments);\n          },\n          subscribe: function subscribe() {\n            this._exec('subscribe', arguments);\n          },\n          subscribeOnce: function subscribeOnce() {\n            this._exec('subscribeOnce', arguments);\n          },\n          unsubscribe: function unsubscribe() {\n            this._exec('unsubscribe', arguments);\n          },\n          getCurrentPubSubKey: function getCurrentPubSubKey() {\n            return this._key;\n          }\n        };\n\n        _.extend(this.__ctx.pubsub, PubSubEvents);\n\n        return this.__ctx.pubsub;\n      },\n      hasPubSub: function hasPubSub() {\n        if (this.hasBeeHive()) return _.isObject(this.__beehive.getService('PubSub'));\n        return false;\n      }\n    },\n    App: {\n      setApp: function setApp(app) {\n        if (_.isUndefined(app)) throw new Error('App object cannot be empty');\n        this.__app = app;\n      },\n      getApp: function getApp() {\n        return this.__app;\n      },\n      hasApp: function hasApp() {\n        return !_.isEmpty(this.__app);\n      }\n    }\n  };\n  return Mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/dependon.js?");

/***/ }),

/***/ "./src/js/mixins/hardened.js":
/*!***********************************!*\
  !*** ./src/js/mixins/hardened.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/18/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Facade) {\n  var Mixin = {\n    /*\n     * Creates a hardened instance of itself, it uses\n     * interface description from 'hardenedInterface'\n     * Implementations need to populate 'hardenedInterface'\n     * with list of properties and methods that should be exposed\n     * through the Facade\n     */\n    _getHardenedInstance: function _getHardenedInstance(iface, objectIn) {\n      if (!('hardenedInterface' in this) && !iface) {\n        throw Error('Error: this.hardenedInterface is not defined');\n      }\n\n      return new Facade(iface || ('hardenedInterface' in this ? this.hardenedInterface : {}), objectIn);\n    },\n    getHardenedInstance: function getHardenedInstance(iface) {\n      return this._getHardenedInstance(iface, this);\n    }\n  };\n  return Mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/hardened.js?");

/***/ }),

/***/ "./src/js/mixins/widget_mixin_method.js":
/*!**********************************************!*\
  !*** ./src/js/mixins/widget_mixin_method.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! js/mixins/widget_utility */ \"./src/js/mixins/widget_utility.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Utils) {\n  var mixin = function mixin(from, methods) {\n    var to = this.prototype; // we add those methods which exists on `from` but not on `to` to the latter\n\n    _.extend(from, to); // … and we do the same for events\n\n\n    _.extend(from.events, to.events);\n\n    _.each(Array.prototype.slice.call(arguments, 1), function (m) {\n      Utils.extendMethod(to, from, m);\n    });\n  };\n\n  return mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_mixin_method.js?");

/***/ }),

/***/ "./src/js/mixins/widget_state_manager.js":
/*!***********************************************!*\
  !*** ./src/js/mixins/widget_state_manager.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/api_feedback */ \"./src/js/components/api_feedback.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, ApiFeedback) {\n  /**\n   * Abstract error pubsub-like manager.  Allows for hooks to be applied that\n   * match API feedback codes\n   *\n   * @constructor\n   */\n  var ErrorHandlerManager = function ErrorHandlerManager() {\n    this.handlers = {};\n    /**\n     * Attach a new handler to an API feedback code\n     *\n     * @param {Number} code - feedback code\n     * @param {function} cb - callback function\n     */\n\n    this.on = function (code, cb) {\n      this.handlers[code].push(cb);\n    };\n    /**\n     * Remove handler by passing in the callback function\n     *\n     * @param {function} cb - callback function\n     */\n\n\n    this.off = function (cb) {\n      _.forEach(this.handlers, function (v, k) {\n        var idx = v.indexOf(cb);\n\n        if (idx > -1) {\n          v.splice(idx, 1);\n        }\n      });\n    };\n    /**\n     * Fire off the callbacks for a particular code\n     *\n     * @param {Number} code - feedback code\n     * @param {Array} args - arguments to pass to the callback\n     * @param {object} ctx - callback's `this` property\n     */\n\n\n    this.fire = function (code, args, ctx) {\n      _.forEach(this.handlers[code], function (cb) {\n        cb.apply(ctx, args);\n      });\n    };\n\n    _.reduce(ApiFeedback.CODES, function (res, code) {\n      res[code] = [];\n      return res;\n    }, this.handlers);\n  };\n  /*\n    Widget state manager mixin\n     This mixin will allow widgets to call lifecycle updates which can then have\n    handlers attached.  The mixin can also serve as a way for page managers to\n    react to widget status updates, since certain widgets should be\n    handled differently depending on their type and importance.\n     The typical way this is used is to call `activateWidget` during the activate\n    call on the widget itself.  Then call the various state updates when the widget\n    is performing actions.\n     The default states are: ready, loading, idle, errored\n     Widgets can attach handlers to the various status updates (i.e. onReady, onLoading, etc.)\n     note: during the activation, the widget's pubsubkey is captured and is used\n    to identify the appropriate feedback.  This way the handlers aren't called for\n    events the widget doesn't care about.\n   */\n\n\n  var WidgetStateManagerMixin = {\n    STATES: {\n      LOADING: 'loading',\n      ERRORED: 'errored',\n      IDLE: 'idle',\n      READY: 'ready'\n    },\n\n    /**\n     * Creates a new instance of the handlerManager and subscribes to the\n     * api feedback calls.  It also sets the first state update.\n     */\n    activateWidget: function activateWidget() {\n      this.__widgetHandlerManager = new ErrorHandlerManager();\n      var pubsub = this.getPubSub();\n      pubsub.subscribe(pubsub.FEEDBACK, _.bind(this.__handleFeedback, this));\n      this.updateState('ready');\n    },\n\n    /**\n     * Upon new feedback from the API, this function will grab the current\n     * pubSubKey Id for this widget and compare it to the one listed on the\n     * feedback object.  If they match, then the handlers are fired off for that\n     * code.\n     *\n     * @param {ApiFeedback} feedback\n     * @param {PubSubKey} pubSubKey\n     * @private\n     */\n    __handleFeedback: function __handleFeedback(feedback, pubSubKey) {\n      var id = this.getPubSub().getCurrentPubSubKey().getId();\n\n      if (id === pubSubKey.getId()) {\n        this.__widgetHandlerManager.fire(feedback.code, arguments, this);\n      }\n    },\n\n    /**\n     * Attaches a new handler onto an API code\n     *\n     * @param {Number} code - feedback code\n     * @param {function} handler - handler function\n     */\n    attachHandler: function attachHandler(code, handler) {\n      try {\n        this.__widgetHandlerManager.on(code, handler);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n\n    /**\n     * Attaches a general handler to all api feedback codes\n     *\n     * Includes the positive error codes and api request failures\n     *\n     * @param {function} handler - handler function\n     */\n    attachGeneralHandler: function attachGeneralHandler(handler) {\n      _.forEach(ApiFeedback.CODES, _.bind(function (code) {\n        if (code > 0 || code === ApiFeedback.CODES.API_REQUEST_ERROR) {\n          this.attachHandler(code, handler);\n        }\n      }, this));\n    },\n\n    /**\n     * Detaches a particular handler from all codes\n     *\n     * @param cb\n     */\n    detachHandler: function detachHandler(cb) {\n      this.__widgetHandlerManager.off(cb);\n    },\n\n    /**\n     * Called when the state changes to 'ready'\n     */\n    onReady: _.noop,\n\n    /**\n     * Called when the state changes to 'loading'\n     */\n    onLoading: _.noop,\n\n    /**\n     * Called when the state changes to 'idle'\n     */\n    onIdle: _.noop,\n\n    /**\n     * Called when the state changes to 'errored'\n     */\n    onErrored: _.noop,\n\n    /**\n     * Called on all state changes\n     */\n    onStateChange: _.noop,\n\n    /**\n     * Called by widgets to update their own state.  This will update the current\n     * state and also call any handlers.\n     *\n     * @param {string} state - the state to update to\n     */\n    updateState: function updateState(state) {\n      if (!state || !_.isString(state) || state === this.__state) {\n        // do nothing\n        return;\n      }\n\n      var prev = this.__state;\n      this.__state = state;\n\n      this.__fireStateHandler();\n\n      this.onStateChange.call(this, state, prev);\n    },\n\n    /**\n     * Get the current state value\n     */\n    getState: function getState() {\n      return this.__state;\n    },\n\n    /**\n     * This method looks at the current state and if a matching handler is\n     * provided, it will call it accordingly.\n     *\n     * @private\n     */\n    __fireStateHandler: function __fireStateHandler() {\n      var handlers = {};\n      handlers.ready = this.onReady;\n      handlers.loading = this.onLoading;\n      handlers.idle = this.onIdle;\n      handlers.errored = this.onErrored;\n      handlers[this.__state] && handlers[this.__state].call(this, this);\n    }\n  };\n  return WidgetStateManagerMixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_state_manager.js?");

/***/ }),

/***/ "./src/js/mixins/widget_utility.js":
/*!*****************************************!*\
  !*** ./src/js/mixins/widget_utility.js ***!
  \*****************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var Utils = {}; // Helper method to extend an already existing method\n\n  Utils.extendMethod = function (to, from, methodName) {\n    // if the method is defined on from ...\n    if (!_.isUndefined(from[methodName])) {\n      var old = to[methodName]; // ... we create a new function on to\n\n      to[methodName] = function () {\n        // wherein we first call the method which exists on `to`\n        var oldReturn = old.apply(this, arguments); // and then call the method on `from`\n\n        from[methodName].apply(this, arguments); // and then return the expected result,\n        // i.e. what the method on `to` returns\n\n        return oldReturn;\n      };\n    }\n  };\n\n  return Utils;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_utility.js?");

/***/ }),

/***/ "./src/js/widgets/base/base_widget.js":
/*!********************************************!*\
  !*** ./src/js/widgets/base/base_widget.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! marionette */ \"./src/libs/backbone.marionette.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/api_request */ \"./src/js/components/api_request.js\"), __webpack_require__(/*! js/mixins/widget_mixin_method */ \"./src/js/mixins/widget_mixin_method.js\"), __webpack_require__(/*! js/components/api_targets */ \"./src/js/components/api_targets.js\"), __webpack_require__(/*! js/mixins/dependon */ \"./src/js/mixins/dependon.js\"), __webpack_require__(/*! js/mixins/widget_state_manager */ \"./src/js/mixins/widget_state_manager.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, Marionette, ApiQuery, ApiRequest, WidgetMixin, ApiTargets, Dependon, WidgetStateManagerMixin) {\n  /**\n   * Default PubSub based widget; the main functionality is inside\n   *\n   *  dispa tchRequest()\n   *    - publishes ApiRequest object into PubSub (to initiate search)\n   *\n   *  processResponse()\n   *    - receives ApiResponse object as a direct reply for the previous\n   *      request\n   *\n   * You will want to override 'processResponse' method and possibly\n   * some of the other methods like this;\n   *\n   * var newWidgetClass = BaseWidget.extend({\n   *   composeRequest : function(){},\n   *   processRequest : function(){}\n   * });\n   *\n   * var newInstance = new newWidgetClass();\n   *\n   *\n   * If you need to provide your own views, do initalization etc., override\n   * initialize\n   *\n   * * var newWidgetClass = BaseWidget.extend({\n   *   initialize: function() {\n   *      // do something\n   *      BaseWidget.prototype.initialize.apply(this, arguments);\n   *   }\n   * });\n   *\n   *\n   * Some other options include:\n   *\n   *  defaultQueryArguments: this is a list of parameters added to each query\n   *\n   */\n  var BaseWidget = Marionette.Controller.extend({\n    initialize: function initialize(options) {\n      options = options || {}; // these methods are called by PubSub as handlers so we bind them to 'this' object\n      // and they will carry their own context 'this'\n\n      _.bindAll(this, 'dispatchRequest', 'processResponse');\n\n      this._currentQuery = new ApiQuery();\n      this.defaultQueryArguments = this.defaultQueryArguments || {};\n\n      if (options.defaultQueryArguments) {\n        this.defaultQueryArguments = _.extend(this.defaultQueryArguments, options.defaultQueryArguments);\n      }\n\n      if (options.view) {\n        this.view = options.view;\n        this.collection = options.view.collection;\n      } // our way of listening to views/models\n\n\n      if (this.view) Marionette.bindEntityEvents(this, this.view, Marionette.getOption(this, 'viewEvents'));\n      if (this.model) Marionette.bindEntityEvents(this, this.model, Marionette.getOption(this, 'modelEvents'));\n    },\n\n    /**\n     * Called by Bumblebee application when a widget is about to be registered\n     * it receives a BeeHive object, that contais methods/attributes that a\n     * widget needs to communicate with the app\n     *\n     * This is the place where you want to subscribe to events\n     *\n     * @param beehive\n     */\n    activate: function activate(beehive) {\n      this.setBeeHive(beehive);\n      var pubsub = beehive.getService('PubSub'); // custom dispatchRequest function goes here\n\n      pubsub.subscribe(pubsub.INVITING_REQUEST, _.bind(this.dispatchRequest, this)); // custom handleResponse function goes here\n\n      pubsub.subscribe(pubsub.DELIVERING_RESPONSE, _.bind(this.processResponse, this));\n    },\n\n    /**\n     * You should use this method when you want to initiaze global search action\n     * (ie. send a query to the pubsub)\n     *\n     * @param apiQuery\n     */\n    dispatchNewQuery: function dispatchNewQuery(apiQuery) {\n      // remove the arguments that are useful only to this widget\n      _.each(this.defaultQueryArguments, function (v, k) {\n        apiQuery.unset(k);\n      });\n\n      var pubsub = this.getPubSub();\n      pubsub.publish(pubsub.NAVIGATE, 'search-page', {\n        q: apiQuery\n      });\n    },\n\n    /**\n     * Default callback to be called by PubSub on 'INVITING_REQUEST'\n     */\n    dispatchRequest: function dispatchRequest(apiQuery) {\n      this._dispatchRequest(apiQuery);\n    },\n    _dispatchRequest: function _dispatchRequest(apiQuery) {\n      var q = this.customizeQuery(apiQuery);\n\n      if (q) {\n        var req = this.composeRequest(q);\n\n        if (req) {\n          var pubsub = this.getPubSub();\n          pubsub.publish(pubsub.DELIVERING_REQUEST, req);\n        }\n      }\n    },\n\n    /**\n     * Default action to modify ApiQuery (called from inside dispatchRequest)\n     *\n     * @param apiQuery\n     */\n    customizeQuery: function customizeQuery(apiQuery) {\n      var q = apiQuery.clone();\n      q.unlock();\n\n      if (this.defaultQueryArguments) {\n        q = this.composeQuery(this.defaultQueryArguments, q);\n      }\n\n      return q;\n    },\n\n    /**\n     * Default callback to be called by PubSub on 'DELIVERING_RESPONSE'\n     * @param apiResponse\n     */\n    processResponse: function processResponse(apiResponse) {\n      // in your widget, you should always set the current query like this\n      var q = apiResponse.getApiQuery();\n      this.setCurrentQuery(q);\n      throw new Error('you need to customize this function');\n    },\n\n    /**\n     * This function should return a request IFF we want to get some\n     * data - it is called from inside 'dispatchRequest' event handler\n     *\n     * @param object with params to add\n     * @returns {ApiRequest}\n     */\n    composeRequest: function composeRequest(apiQuery) {\n      return new ApiRequest({\n        target: ApiTargets.SEARCH,\n        query: apiQuery\n      });\n    },\n\n    /**\n     * Will save a clone of the apiQuery into the widget (for future use and\n     * reference)\n     *\n     * @param apiQuery\n     */\n    setCurrentQuery: function setCurrentQuery(apiQuery) {\n      this._currentQuery = apiQuery;\n    },\n\n    /**\n     * Returns the current ApiQuery\n     * if a query hasn't been set, it will check if there is one in storage,\n     * if not, it will return an empty query\n     *\n     * @returns {ApiQuery|*}\n     */\n    getCurrentQuery: function getCurrentQuery() {\n      var currQuery = new ApiQuery({});\n      var beehive;\n\n      try {\n        if (this._currentQuery instanceof ApiQuery) {\n          currQuery = this._currentQuery;\n        } else if (_.isFunction(this.getBeeHive)) {\n          beehive = this.getBeeHive();\n\n          if (beehive.hasObject('AppStorage')) {\n            var q = beehive.getObject('AppStorage').getCurrentQuery();\n\n            if (q instanceof ApiQuery) {\n              currQuery = q;\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e.message);\n      } finally {\n        return currQuery;\n      }\n    },\n\n    /**\n     * All purpose function for making a new query. It returns an apiQuery ready for\n     * newQuery event or for insertion into  apiRequest.\n     *\n     * @param queryParams\n     * @param apiQuery\n     * @returns {*}\n     */\n    composeQuery: function composeQuery(queryParams, apiQuery) {\n      var query;\n\n      if (!apiQuery) {\n        query = this.getCurrentQuery();\n        query = query.clone();\n      } else {\n        query = apiQuery;\n      }\n\n      if (queryParams) {\n        _.each(queryParams, function (v, k) {\n          if (!query.has(k)) query.set(k, v);\n        });\n      }\n\n      return query;\n    },\n    onDestroy: function onDestroy() {\n      this.view.destroy();\n    },\n\n    /**\n     * Convention inside Backbone and Marionette is to return 'this'\n     * - since 'this' usually refers to a 'View', we'll return the\n     * view's el here\n     * doesn't render unless it has to\n     *\n     * @returns {view.el}\n     */\n    getEl: function getEl() {\n      if (this.view.el && this.view.$el.children().length) {\n        return this.view.el;\n      }\n\n      return this.view.render().el;\n    },\n\n    /*\n     *\n     * convenience function for tests, always re-renders\n     *\n     * */\n    render: function render() {\n      return this.view.render();\n    },\n\n    /**\n     * Extracts identifier from a query object\n     *\n     * @param {ApiQuery} apiQuery\n     */\n    parseIdentifierFromQuery: function parseIdentifierFromQuery(apiQuery) {\n      if (!apiQuery.hasVal('q')) {\n        throw 'no query';\n      }\n\n      var q = apiQuery.get('q')[0];\n\n      try {\n        if (/^(?:identifier|bibcode):(.*)$/.test(q)) {\n          return q.split(':')[1];\n        }\n      } catch (e) {\n        throw 'unable to parse bibcode';\n      }\n\n      throw 'query must be in the format of identifer:foo or bibcode:foo';\n    }\n  }, {\n    mixin: WidgetMixin\n  });\n\n  _.extend(BaseWidget.prototype, Dependon.BeeHive, WidgetStateManagerMixin);\n\n  return BaseWidget;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/base/base_widget.js?");

/***/ }),

/***/ "./src/js/widgets/config.js":
/*!**********************************!*\
  !*** ./src/js/widgets/config.js ***!
  \**********************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  return {\n    export: {\n      formats: [{\n        value: 'bibtex',\n        label: 'BibTeX',\n        help: 'BibTeX format',\n        ext: 'bib'\n      }, {\n        value: 'ads',\n        label: 'ADS',\n        help: 'ADS format',\n        ext: 'txt'\n      }, {\n        value: 'bibtexabs',\n        label: 'BibTeX ABS',\n        help: 'BibTeX with abstracts',\n        ext: 'bib'\n      }, {\n        value: 'endnote',\n        label: 'EndNote',\n        help: 'EndNote format',\n        ext: 'enw'\n      }, {\n        value: 'procite',\n        label: 'ProCite',\n        help: 'ProCite format',\n        ext: 'txt'\n      }, {\n        value: 'ris',\n        label: 'RIS',\n        help: 'Research Information Systems (RIS) format',\n        ext: 'txt'\n      }, {\n        value: 'refworks',\n        label: 'RefWorks',\n        help: 'RefWorks format',\n        ext: 'txt'\n      }, {\n        value: 'rss',\n        label: 'RSS',\n        help: 'RSS format',\n        ext: 'rss'\n      }, {\n        value: 'medlars',\n        label: 'MEDLARS',\n        help: 'Medical Literature Analysis and Retrieval System (MEDLARS) format',\n        ext: 'txt'\n      }, {\n        value: 'dcxml',\n        label: 'DC-XML',\n        help: 'Dublin Core XML format',\n        ext: 'xml'\n      }, {\n        value: 'jatsxml',\n        label: 'JATSXML',\n        help: 'JATS Journal Publishing XML',\n        ext: 'xml'\n      }, {\n        value: 'refxml',\n        label: 'REF-XML',\n        help: 'ADS link data in XML format',\n        ext: 'xml'\n      }, {\n        value: 'refabsxml',\n        label: 'REFABS-XML',\n        help: 'ADS records in XML format',\n        ext: 'xml'\n      }, {\n        value: 'aastex',\n        label: 'AASTeX',\n        help: 'LaTeX format for AAS journals',\n        ext: 'txt'\n      }, {\n        value: 'ieee',\n        label: 'IEEE',\n        help: 'IEEE format',\n        ext: 'txt'\n      }, {\n        value: 'icarus',\n        label: 'Icarus',\n        help: 'LaTeX format for use in Icarus',\n        ext: 'txt'\n      }, {\n        value: 'mnras',\n        label: 'MNRAS',\n        help: 'LaTeX format for use in MNRAS',\n        ext: 'txt'\n      }, {\n        value: 'soph',\n        label: 'Solar Physics',\n        help: 'LaTeX format for use in Solar Physics',\n        ext: 'txt'\n      }, {\n        value: 'votable',\n        label: 'VOTable',\n        help: 'VOTable XML format',\n        ext: 'xml'\n      }, {\n        value: 'custom',\n        label: 'Custom Format',\n        help: 'Enter Your Own Custom Format',\n        ext: 'txt'\n      }]\n    }\n  };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/config.js?");

/***/ }),

/***/ "./src/js/widgets/export/actions/index.js":
/*!************************************************!*\
  !*** ./src/js/widgets/export/actions/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Main collection point for all the actions\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! jquery */ \"./src/libs/jquery.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/api_targets */ \"./src/js/components/api_targets.js\"), __webpack_require__(/*! filesaver */ \"./src/libs/file-saver.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, $, ApiQuery, ApiTargets) {\n  // set of action names\n  var actions = {\n    SET_TAB: 'SET_TAB',\n    SET_QUERY: 'SET_QUERY',\n    SET_FORMAT: 'SET_FORMAT',\n    SET_FORMATS: 'SET_FORMATS',\n    SET_CUSTOM_FORMAT: 'SET_CUSTOM_FORMAT',\n    SET_PROGRESS: 'SET_PROGRESS',\n    SET_COUNT: 'SET_COUNT',\n    SET_IGNORE: 'SET_IGNORE',\n    SET_HAS_ERROR: 'SET_HAS_ERROR',\n    SET_ERROR_MSG: 'SET_ERROR_MSG',\n    SET_MAX_COUNT: 'SET_MAX_COUNT',\n    SET_TOTAL_RECS: 'SET_TOTAL_RECS',\n    SET_SHOW_CLOSER: 'SET_SHOW_CLOSER',\n    SET_PAGE: 'SET_PAGE',\n    SET_SORT: 'SET_SORT',\n    SET_BATCH_SIZE: 'SET_BATCH_SIZE',\n    TAKE_SNAPSHOT: 'TAKE_SNAPSHOT',\n    RESET: 'RESET',\n    HARD_RESET: 'HARD_RESET',\n    REQUEST_IDS: 'REQUEST_IDS',\n    RECEIVE_IDS: 'RECEIVE_IDS',\n    REQUEST_EXPORT: 'REQUEST_EXPORT',\n    RECEIVE_EXPORT: 'RECEIVE_EXPORT',\n    REQUEST_FAILED: 'REQUEST_FAILED',\n    REQUEST_CANCELLED: 'REQUEST_CANCELLED',\n    SET_ORIGIN: 'SET_ORIGIN',\n    SET_CUSTOM_FORMATS: 'SET_CUSTOM_FORMATS',\n    SET_BIBTEX_KEY_FORMAT: 'SET_BIBTEX_KEY_FORMAT',\n    SET_BIBTEX_MAX_AUTHORS: 'SET_BIBTEX_MAX_AUTHORS',\n    SET_BIBTEX_ABS_KEY_FORMAT: 'SET_BIBTEX_ABS_KEY_FORMAT',\n    SET_BIBTEX_ABS_MAX_AUTHORS: 'SET_BIBTEX_ABS_MAX_AUTHORS',\n    SET_BIBTEX_AUTHOR_CUTOFF: 'SET_BIBTEX_AUTHOR_CUTOFF',\n    SET_BIBTEX_ABS_AUTHOR_CUTOFF: 'SET_BIBTEX_ABS_AUTHOR_CUTOFF',\n    SET_BIBTEX_JOURNAL_FORMAT: 'SET_BIBTEX_JOURNAL_FORMAT'\n  };\n\n  actions.setTab = function (tab) {\n    return {\n      type: actions.SET_TAB,\n      tab: tab\n    };\n  };\n\n  actions.setFormat = function (format) {\n    return {\n      type: actions.SET_FORMAT,\n      format: format\n    };\n  };\n\n  actions.setFormats = function (formats) {\n    return {\n      type: actions.SET_FORMATS,\n      formats: formats\n    };\n  };\n\n  actions.setCustomFormat = function (format) {\n    return {\n      type: actions.SET_CUSTOM_FORMAT,\n      format: format\n    };\n  };\n\n  actions.setProgress = function (progress) {\n    return {\n      type: actions.SET_PROGRESS,\n      progress: progress\n    };\n  };\n\n  actions.setTotalRecs = function (totalRecs) {\n    return {\n      type: actions.SET_TOTAL_RECS,\n      totalRecs: totalRecs\n    };\n  };\n\n  actions.setShowCloser = function (showCloser) {\n    return {\n      type: actions.SET_SHOW_CLOSER,\n      showCloser: showCloser\n    };\n  };\n\n  actions.requestIds = function () {\n    return {\n      type: actions.REQUEST_IDS\n    };\n  };\n\n  actions.receiveIds = function (ids) {\n    return {\n      type: actions.RECEIVE_IDS,\n      ids: ids\n    };\n  };\n\n  actions.requestExport = function () {\n    return {\n      type: actions.REQUEST_EXPORT\n    };\n  };\n\n  actions.receiveExport = function (exports) {\n    return {\n      type: actions.RECEIVE_EXPORT,\n      exports: exports\n    };\n  };\n\n  actions.setBatchSize = function (batchSize) {\n    return {\n      type: actions.SET_BATCH_SIZE,\n      batchSize: batchSize\n    };\n  };\n\n  actions.setQuery = function (query) {\n    return {\n      type: actions.SET_QUERY,\n      query: query\n    };\n  };\n\n  actions.setCount = function (count) {\n    return {\n      type: actions.SET_COUNT,\n      count: count\n    };\n  };\n\n  actions.setMaxCount = function (maxCount) {\n    return {\n      type: actions.SET_MAX_COUNT,\n      maxCount: maxCount\n    };\n  };\n\n  actions.cancelRequest = function () {\n    return {\n      type: actions.REQUEST_CANCELLED\n    };\n  };\n\n  actions.setIgnore = function (ignore) {\n    return {\n      type: actions.SET_IGNORE,\n      ignore: ignore\n    };\n  };\n\n  actions.setHasError = function (hasError) {\n    return {\n      type: actions.SET_HAS_ERROR,\n      hasError: hasError\n    };\n  };\n\n  actions.setErrorMsg = function (errorMsg) {\n    return {\n      type: actions.SET_ERROR_MSG,\n      errorMsg: errorMsg\n    };\n  };\n\n  actions.setPage = function (page) {\n    return {\n      type: actions.SET_PAGE,\n      page: page\n    };\n  };\n\n  actions.setSort = function (sort) {\n    return {\n      type: actions.SET_SORT,\n      sort: sort\n    };\n  };\n\n  actions.reset = function () {\n    return {\n      type: actions.RESET\n    };\n  };\n\n  actions.hardReset = function () {\n    return {\n      type: actions.HARD_RESET\n    };\n  };\n\n  actions.setOrigin = function (origin) {\n    return {\n      type: actions.SET_ORIGIN,\n      origin: origin\n    };\n  };\n\n  actions.setCustomFormats = function (customFormats) {\n    return {\n      type: actions.SET_CUSTOM_FORMATS,\n      customFormats: customFormats\n    };\n  };\n\n  actions.setBibtexMaxAuthors = function (maxAuthors) {\n    return {\n      type: actions.SET_BIBTEX_MAX_AUTHORS,\n      maxAuthors: maxAuthors\n    };\n  };\n\n  actions.setBibtexKeyFormat = function (keyFormat) {\n    return {\n      type: actions.SET_BIBTEX_KEY_FORMAT,\n      keyFormat: keyFormat\n    };\n  };\n\n  actions.setBibtexABSMaxAuthors = function (maxAuthors) {\n    return {\n      type: actions.SET_BIBTEX_ABS_MAX_AUTHORS,\n      maxAuthors: maxAuthors\n    };\n  };\n\n  actions.setBibtexABSKeyFormat = function (keyFormat) {\n    return {\n      type: actions.SET_BIBTEX_ABS_KEY_FORMAT,\n      keyFormat: keyFormat\n    };\n  };\n\n  actions.setBibtexAuthorCutoff = function (payload) {\n    return {\n      type: actions.SET_BIBTEX_AUTHOR_CUTOFF,\n      payload: payload\n    };\n  };\n\n  actions.setBibtexABSAuthorCutoff = function (payload) {\n    return {\n      type: actions.SET_BIBTEX_ABS_AUTHOR_CUTOFF,\n      payload: payload\n    };\n  };\n\n  actions.setBibtexJournalFormat = function (payload) {\n    return {\n      type: actions.SET_BIBTEX_JOURNAL_FORMAT,\n      payload: payload\n    };\n  };\n  /**\n   * On request failure, we want to display a message to the user here\n   *\n   * @param args\n   */\n\n\n  actions.requestFailed = function () {\n    return function (dispatch) {\n      var setHasError = actions.setHasError;\n      dispatch(setHasError(true));\n      dispatch({\n        type: 'REQUEST_FAILED'\n      });\n    };\n  };\n  /**\n   * Update the selected format\n   *\n   * @param {string} format - the selected format\n   */\n\n\n  actions.findAndSetFormat = function (format) {\n    return function (dispatch, getState) {\n      var _getState = getState(),\n          formats = _getState.formats;\n\n      var found = _.find(formats, {\n        value: format\n      });\n\n      dispatch(actions.setFormat(found || formats[0]));\n    };\n  };\n  /**\n   * Fetch ids using a query\n   *\n   * @returns {$.Promise} the request promise\n   */\n\n\n  actions.fetchUsingQuery = function () {\n    return function (dispatch, getState, widget) {\n      var _getState2 = getState(),\n          exports = _getState2.exports,\n          main = _getState2.main;\n\n      var composeRequest = widget.composeRequest;\n      var requestIds = actions.requestIds,\n          receiveIds = actions.receiveIds,\n          requestFailed = actions.requestFailed,\n          setTotalRecs = actions.setTotalRecs,\n          setHasError = actions.setHasError,\n          setSort = actions.setSort; // create a new query from the serialized params\n\n      var query = new ApiQuery(main.query);\n      query.set({\n        // use a specific count, if it's less than the default batchSize\n        rows: exports.count < exports.batchSize ? exports.count : exports.batchSize,\n        fl: 'bibcode',\n        // start at the maxCount - batchSize, to get a particular window\n        start: exports.maxCount - exports.batchSize\n      });\n      dispatch(setHasError(false)); // start requesting ids\n\n      dispatch(requestIds());\n      var req = composeRequest(query); // execute the actual request\n\n      var prom = widget._executeApiRequest(req);\n\n      prom.then(function (res) {\n        // pull out only the bibcodes\n        var ids = _.map(res.get('response.docs'), 'bibcode');\n\n        var sort = res.get('responseHeader.params.sort', false, 'date desc'); // update the ids on the state\n\n        dispatch(receiveIds(ids)); // get the sort from the query\n\n        dispatch(setSort(sort)); // set the total recs to based on the number of ids found\n\n        dispatch(setTotalRecs(res.get('response.numFound')));\n      }); // on failure, dispatch our handler\n\n      prom.fail(function () {\n        return dispatch(requestFailed.apply(void 0, arguments));\n      });\n      return prom;\n    };\n  };\n  /**\n   * Fetch using ids, this will set up a request and fetch a request using\n   * identifiers and some other information.\n   */\n\n\n  actions.fetchUsingIds = function (isLibrary) {\n    return function (dispatch, getState, widget) {\n      var requestExport = actions.requestExport,\n          receiveExport = actions.receiveExport,\n          requestFailed = actions.requestFailed,\n          setIgnore = actions.setIgnore,\n          setHasError = actions.setHasError;\n      var composeRequest = widget.composeRequest;\n\n      var _getState3 = getState(),\n          format = _getState3.format,\n          exports = _getState3.exports;\n\n      dispatch(setHasError(false)); // starting an export\n\n      dispatch(requestExport()); // get the current count, which the user selected\n\n      var count = exports.count < exports.batchSize ? exports.count : exports.batchSize;\n      var start = exports.maxCount - exports.batchSize; // only grab the first n records\n\n      var ids = isLibrary ? exports.ids.slice(start, start + count) : _.take(exports.ids, count); // setting up a new query using our current ids\n\n      var q = new ApiQuery();\n      q.set('bibcode', ids);\n      q.set('sort', exports.sort);\n\n      if (format.value === 'custom' && exports.customFormatString.length > 0) {\n        q.set('format', exports.customFormatString);\n      } else if (format.value === 'custom' && exports.customFormatString.length <= 0) {\n        // send back an empty response\n        return $.Deferred().resolve().promise().then(function () {\n          dispatch(receiveExport(''));\n        });\n      } else if (format.value === 'bibtex') {\n        if (exports.bibtexKeyFormat) {\n          q.set('keyformat', exports.bibtexKeyFormat);\n        } // set maxauthor, convert it to number first\n\n\n        q.set('maxauthor', +exports.bibtexMaxAuthors);\n        q.set('authorcutoff', +exports.bibtexAuthorCutoff);\n        q.set('journalformat', exports.bibtexJournalFormat);\n      } else if (format.value === 'bibtexabs') {\n        if (exports.bibtexABSKeyFormat) {\n          q.set('keyformat', exports.bibtexABSKeyFormat);\n        } // set maxauthor, convert it to number first\n\n\n        q.set('maxauthor', +exports.bibtexABSMaxAuthors);\n        q.set('authorcutoff', +exports.bibtexABSAuthorCutoff);\n        q.set('journalformat', exports.bibtexJournalFormat);\n      } else if (format.value === 'aastex') {\n        q.set('journalformat', exports.bibtexJournalFormat);\n      }\n\n      var req = composeRequest(q);\n      req.set({\n        target: ApiTargets.EXPORT + format.value,\n        options: {\n          type: 'POST',\n          contentType: 'application/json'\n        }\n      }); // send off the request\n\n      return widget._executeApiRequest(req).done(function (res) {\n        // if we are ignoring, then don't bother with the response\n        if (!exports.ignore) {\n          dispatch(receiveExport(res.get('export')));\n        } // stop ignoring\n\n\n        dispatch(setIgnore(false));\n      }) // on failure, send off to our handler\n      .fail(function () {\n        return dispatch(requestFailed.apply(void 0, arguments));\n      });\n    };\n  };\n  /**\n   * Get the next batch of records\n   */\n\n\n  actions.getNextBatch = function () {\n    return function (dispatch, getState) {\n      var setMaxCount = actions.setMaxCount,\n          setBatchSize = actions.setBatchSize,\n          setCount = actions.setCount,\n          fetchUsingQuery = actions.fetchUsingQuery,\n          fetchUsingIds = actions.fetchUsingIds;\n\n      var _getState4 = getState(),\n          exports = _getState4.exports; // get the total, based on the max count and our batchsize\n\n\n      var max = exports.maxCount + exports.batchSize; // if that total is greater than the amount of records, we have to adjust it\n\n      if (max > exports.totalRecs) {\n        // reset the batch size to be the total records minus our max\n        var batch = exports.totalRecs - exports.maxCount; // count is the current lower value (i.e. <count> of <maxCount>)\n        // the next batch will be smaller than (maxCount - count)\n\n        var count = exports.count < batch ? exports.count : batch; // max is the current upper value + the batch value, should be same as totalRecs\n\n        max = exports.maxCount + batch;\n        dispatch(setBatchSize(batch));\n        dispatch(setCount(count));\n      }\n\n      dispatch(setMaxCount(max)); // check if we are in a library (been given all of our ids)\n\n      if (exports.ids.length === exports.totalRecs) {\n        dispatch(fetchUsingIds(true));\n      } else {\n        dispatch(fetchUsingQuery()).done(function () {\n          return dispatch(fetchUsingIds());\n        });\n      }\n    };\n  };\n  /**\n   * Take a snapshot of the current state of the application\n   *\n   * We can use this in conjunction with reset, to reset back to an earlier state\n   *\n   * @param {object} snapshot - the current state\n   */\n\n\n  actions.takeSnapshot = function () {\n    return function (dispatch, getState) {\n      var snapshot = _.omit(getState().exports, 'snapshot');\n\n      dispatch({\n        type: actions.TAKE_SNAPSHOT,\n        snapshot: snapshot\n      });\n    };\n  };\n  /**\n   * Close the component using the widget method\n   * also resets the widget so it's not in a weird state\n   */\n\n\n  actions.closeComponent = function () {\n    return function (dispatch, getState, widget) {\n      dispatch(actions.hardReset());\n      widget.closeWidget();\n    };\n  };\n  /**\n   * Download the export string as a text file\n   */\n\n\n  actions.downloadFile = function () {\n    return function (dispatch, getState) {\n      var state = getState();\n      var blob = new Blob([state.exports.output], {\n        type: 'text/plain;charset=utf-8'\n      }); // save Blob to file, passing true to not automatically add BOM\n\n      saveAs(blob, \"export-\".concat(state.format.value, \".\").concat(state.format.ext), true);\n    };\n  };\n\n  return actions;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/export/actions/index.js?");

/***/ }),

/***/ "./src/js/widgets/export/components/ClipboardBtn.jsx.js":
/*!**************************************************************!*\
  !*** ./src/js/widgets/export/components/ClipboardBtn.jsx.js ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! clipboard */ \"./src/libs/clipboard.js\"), __webpack_require__(/*! react */ \"./src/libs/react.js\"), __webpack_require__(/*! prop-types */ \"./src/libs/prop-types.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Clipboard, React, ReactPropTypes) {\n  var ClipboardBtn = /*#__PURE__*/function (_React$Component) {\n    _inherits(ClipboardBtn, _React$Component);\n\n    function ClipboardBtn() {\n      _classCallCheck(this, ClipboardBtn);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ClipboardBtn).apply(this, arguments));\n    }\n\n    _createClass(ClipboardBtn, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.clipboard.destroy();\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.clipboard = new Clipboard(this.element);\n        this.clipboard.on('success', this.props.onCopy);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n\n        var _this$props = this.props,\n            disabled = _this$props.disabled,\n            target = _this$props.target;\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-default\",\n          disabled: disabled,\n          ref: function ref(e) {\n            return _this.element = e;\n          },\n          \"data-clipboard-target\": target\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-copy fa-fw\",\n          \"aria-hidden\": \"true\"\n        }), \"Copy to Clipboard\");\n      }\n    }]);\n\n    return ClipboardBtn;\n  }(React.Component);\n\n  ClipboardBtn.propTypes = {\n    disabled: ReactPropTypes.bool.isRequired,\n    target: ReactPropTypes.string.isRequired,\n    onCopy: ReactPropTypes.func.isRequired\n  };\n  return ClipboardBtn;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/export/components/ClipboardBtn.jsx.js?");

/***/ }),

/***/ "./src/js/widgets/export/components/Closer.jsx.js":
/*!********************************************************!*\
  !*** ./src/js/widgets/export/components/Closer.jsx.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! react */ \"./src/libs/react.js\"), __webpack_require__(/*! prop-types */ \"./src/libs/prop-types.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (React, ReactPropTypes) {\n  var Closer = function Closer(_ref) {\n    var onClick = _ref.onClick;\n\n    var handleClick = function handleClick(e) {\n      e.preventDefault();\n      e.stopPropagation && e.stopPropagation();\n      onClick();\n    };\n\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: \"javascript:void(0)\",\n      className: \"pull-right\",\n      onClick: function onClick(e) {\n        return handleClick(e);\n      },\n      \"aria-label\": \"close\"\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times fa-2x\",\n      \"aria-hidden\": \"true\"\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, \"close\"));\n  };\n\n  Closer.propTypes = {\n    onClick: ReactPropTypes.func.isRequired\n  };\n  return Closer;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/export/components/Closer.jsx.js?");

/***/ }),

/***/ "./src/js/widgets/export/components/Export.jsx.js":
/*!********************************************************!*\
  !*** ./src/js/widgets/export/components/Export.jsx.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! react */ \"./src/libs/react.js\"), __webpack_require__(/*! prop-types */ \"./src/libs/prop-types.js\"), __webpack_require__(/*! js/widgets/export/components/ClipboardBtn.jsx */ \"./src/js/widgets/export/components/ClipboardBtn.jsx.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (React, ReactPropTypes, ClipboardBtn) {\n  var Export = function Export(_ref) {\n    var output = _ref.output,\n        isFetching = _ref.isFetching,\n        progress = _ref.progress,\n        onDownloadFile = _ref.onDownloadFile,\n        onCopy = _ref.onCopy;\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12 btn-group\"\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-default\",\n      disabled: isFetching || _.isEmpty(output),\n      onClick: onDownloadFile\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-download fa-fw\",\n      \"aria-hidden\": \"true\"\n    }), \"Download to File\"), /*#__PURE__*/React.createElement(ClipboardBtn, {\n      disabled: isFetching || _.isEmpty(output),\n      onCopy: onCopy,\n      target: \".export-textarea\"\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\"\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"export-textarea form-control\",\n      readOnly: \"true\",\n      value: output,\n      disabled: isFetching,\n      \"aria-label\": \"export content\"\n    }))), isFetching && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress export-progress\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuenow\": progress,\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      style: {\n        width: \"\".concat(progress, \"%\")\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, progress, \"% Complete\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\"\n    }, \"Loading...\")));\n  };\n\n  Export.propTypes = {\n    output: ReactPropTypes.string.isRequired,\n    isFetching: ReactPropTypes.bool.isRequired,\n    progress: ReactPropTypes.number,\n    onDownloadFile: ReactPropTypes.func.isRequired,\n    onCopy: ReactPropTypes.func.isRequired\n  };\n  return Export;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/export/components/Export.jsx.js?");

/***/ }),

/***/ "./src/js/widgets/export/components/Setup.jsx.js":
/*!*******************************************************!*\
  !*** ./src/js/widgets/export/components/Setup.jsx.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! react */ \"./src/libs/react.js\"), __webpack_require__(/*! prop-types */ \"./src/libs/prop-types.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (React, ReactPropTypes) {\n  var Setup = function Setup(_ref) {\n    var onApply = _ref.onApply,\n        setFormat = _ref.setFormat,\n        disabled = _ref.disabled,\n        onCancel = _ref.onCancel,\n        batchSize = _ref.batchSize,\n        hasMore = _ref.hasMore,\n        onReset = _ref.onReset,\n        format = _ref.format,\n        formats = _ref.formats,\n        count = _ref.count,\n        setCount = _ref.setCount,\n        maxCount = _ref.maxCount,\n        onGetNext = _ref.onGetNext,\n        totalRecs = _ref.totalRecs,\n        showSlider = _ref.showSlider,\n        showReset = _ref.showReset,\n        remaining = _ref.remaining,\n        autoSubmit = _ref.autoSubmit,\n        customFormat = _ref.customFormat,\n        onCustomFormatChange = _ref.onCustomFormatChange,\n        customFormats = _ref.customFormats,\n        customFormatSelected = _ref.customFormatSelected,\n        onCustomFormatSelectionChange = _ref.onCustomFormatSelectionChange,\n        customFormatDirectEntry = _ref.customFormatDirectEntry,\n        onCustomFormatClick = _ref.onCustomFormatClick;\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-10\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ex-dropdown\"\n    }, \"Select Export Format\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      autoFocus: \"true\",\n      id: \"ex-dropdown\",\n      value: format.id,\n      onChange: function onChange(e) {\n        return setFormat(e.target.value);\n      },\n      disabled: disabled\n    }, formats.map(function (f) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: f.id,\n        value: f.id,\n        title: f.help\n      }, f.label);\n    }))), disabled && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-2\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"export-loading-icon fa fa-spinner fa-spin fa-2x\",\n      \"aria-hidden\": \"true\"\n    }))), format.value === 'custom' && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-10\"\n    }, !customFormatDirectEntry && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ex-custom-input\"\n    }, \"Select a Custom Format\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      title: \"Get Help With ADS Custom Format Syntax\",\n      target: \"_blank\",\n      rel: \"noreferrer noopener\",\n      href: \"/help/actions/export\"\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-info-circle fa-invert\",\n      \"aria-hidden\": \"true\"\n    }))), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      title: \"manage custom formats\",\n      href: \"/#user/settings/application\"\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-cog fa-invert\",\n      \"aria-hidden\": \"true\"\n    })))), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: customFormat,\n      onChange: function onChange(e) {\n        return onCustomFormatChange(e.target.value);\n      }\n    }, customFormats.map(function (f) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: f.code,\n        key: f.id\n      }, f.name);\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link\",\n      role: \"button\",\n      onClick: onCustomFormatClick\n    }, \"Or enter your own\")), customFormatDirectEntry && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ex-custom-input\"\n    }, \"Enter Custom Format\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      title: \"Get Help With ADS Custom Format Syntax\",\n      target: \"_blank\",\n      rel: \"noreferrer noopener\",\n      href: \"/help/actions/export\"\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-info-circle fa-invert\",\n      \"aria-hidden\": \"true\"\n    })))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: customFormat,\n      onChange: function onChange(e) {\n        return onCustomFormatChange(e.target.value);\n      }\n    }), customFormats.length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link\",\n      role: \"button\",\n      onClick: onCustomFormatClick\n    }, \"Or select from your saved custom formats\")))), showSlider && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-10\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ex-range\"\n    }, \"Limit to \", /*#__PURE__*/React.createElement(\"strong\", null, count), ' ', count > 1 ? 'records' : 'record'), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      id: \"ex-range\",\n      min: \"1\",\n      max: totalRecs < batchSize ? totalRecs : batchSize,\n      step: \"1\",\n      value: count,\n      disabled: disabled,\n      onChange: function onChange(e) {\n        return setCount(e.target.value);\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12 btn-toolbar\"\n    }, (!autoSubmit || format.value === 'custom') && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: onApply,\n      disabled: disabled\n    }, \"Apply\"), !disabled && showReset && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-info\",\n      onClick: onReset\n    }, \"Reset\"), !disabled && hasMore && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link\",\n      onClick: onGetNext\n    }, \"Get Next \", remaining, \" Record(s)\"), disabled && (!autoSubmit || format.value === 'custom') && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: onCancel\n    }, \"Cancel\"))));\n  };\n\n  Setup.propTypes = {\n    setFormat: ReactPropTypes.func.isRequired,\n    format: ReactPropTypes.shape({\n      id: ReactPropTypes.string,\n      value: ReactPropTypes.string,\n      label: ReactPropTypes.string\n    }).isRequired,\n    onApply: ReactPropTypes.func.isRequired,\n    onCancel: ReactPropTypes.func.isRequired,\n    formats: ReactPropTypes.arrayOf(ReactPropTypes.shape({\n      id: ReactPropTypes.string,\n      value: ReactPropTypes.string,\n      label: ReactPropTypes.string\n    })).isRequired,\n    disabled: ReactPropTypes.bool.isRequired,\n    count: ReactPropTypes.string.isRequired,\n    setCount: ReactPropTypes.func.isRequired,\n    maxCount: ReactPropTypes.number.isRequired,\n    onGetNext: ReactPropTypes.func.isRequired,\n    totalRecs: ReactPropTypes.number.isRequired,\n    onReset: ReactPropTypes.func.isRequired,\n    showSlider: ReactPropTypes.bool.isRequired,\n    showReset: ReactPropTypes.bool.isRequired,\n    autoSubmit: ReactPropTypes.bool.isRequired\n  };\n  return Setup;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/export/components/Setup.jsx.js?");

/***/ }),

/***/ "./src/js/widgets/export/containers/App.jsx.js":
/*!*****************************************************!*\
  !*** ./src/js/widgets/export/containers/App.jsx.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! react */ \"./src/libs/react.js\"), __webpack_require__(/*! react-redux */ \"./src/libs/react-redux.js\"), __webpack_require__(/*! prop-types */ \"./src/libs/prop-types.js\"), __webpack_require__(/*! js/widgets/export/actions/index */ \"./src/js/widgets/export/actions/index.js\"), __webpack_require__(/*! js/widgets/export/components/Closer.jsx */ \"./src/js/widgets/export/components/Closer.jsx.js\"), __webpack_require__(/*! js/widgets/export/components/Setup.jsx */ \"./src/js/widgets/export/components/Setup.jsx.js\"), __webpack_require__(/*! js/widgets/export/components/Export.jsx */ \"./src/js/widgets/export/components/Export.jsx.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, React, ReactRedux, ReactPropTypes, actions, Closer, Setup, Export) {\n  var closeComponent = actions.closeComponent,\n      setFormat = actions.setFormat,\n      getNextBatch = actions.getNextBatch,\n      fetchUsingQuery = actions.fetchUsingQuery,\n      fetchUsingIds = actions.fetchUsingIds,\n      setCount = actions.setCount,\n      cancelRequest = actions.cancelRequest,\n      reset = actions.reset,\n      downloadFile = actions.downloadFile,\n      getCustomFormats = actions.getCustomFormats;\n\n  var App = /*#__PURE__*/function (_React$Component) {\n    _inherits(App, _React$Component);\n\n    function App(props) {\n      var _this;\n\n      _classCallCheck(this, App);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n      _.bindAll(_assertThisInitialized(_this), ['handleCloseClick', 'handleApplyClick', 'handleFormatChange', 'handleCountChange', 'handleCancelClick', 'handleGetNextClick', 'handleResetClick', 'handleDownloadFileClick', 'onCopyText', 'onCustomFormatClick']);\n\n      var dispatch = props.dispatch;\n      /**\n       * The count update is debounced, to make sure that lots of changes don't\n       * send many requests.\n       */\n\n      _this.updateCount = _.debounce(function (val) {\n        dispatch(setCount(parseInt(val)));\n      }, 500);\n      _this.onCustomFormatChange = _.debounce(function (val) {\n        dispatch({\n          type: 'SET_CUSTOM_FORMAT',\n          format: val\n        });\n      }, 500);\n      _this.state = {\n        count: '0',\n        showAlert: false,\n        customFormatDirectEntry: true\n      };\n      return _this;\n    }\n    /**\n     * On file download click, dispatch the download file action\n     */\n\n\n    _createClass(App, [{\n      key: \"handleDownloadFileClick\",\n      value: function handleDownloadFileClick() {\n        this.props.dispatch(downloadFile());\n      }\n      /**\n       * On copy button click, show a message which dissappears after 5 seconds\n       */\n\n    }, {\n      key: \"onCopyText\",\n      value: function onCopyText() {\n        var _this2 = this;\n\n        this.setState({\n          showAlert: true,\n          alertMsg: 'Text Copied!'\n        });\n\n        _.delay(function () {\n          return _this2.setState({\n            showAlert: false\n          });\n        }, 5000);\n      }\n      /**\n       * On close click, close the widget\n       */\n\n    }, {\n      key: \"handleCloseClick\",\n      value: function handleCloseClick() {\n        this.props.dispatch(closeComponent());\n      }\n      /**\n       * On cancel, attempt to cancel request\n       *\n       * -- this mainly resets the form and ignores the pending request\n       */\n\n    }, {\n      key: \"handleCancelClick\",\n      value: function handleCancelClick() {\n        this.props.dispatch(cancelRequest());\n      }\n      /**\n       * When the count is updated, update the state accordingly\n       *\n       * @param {number} val - the count\n       */\n\n    }, {\n      key: \"handleCountChange\",\n      value: function handleCountChange(val) {\n        var _this3 = this;\n\n        this.setState({\n          count: val\n        }, function () {\n          return _this3.updateCount(val);\n        });\n      }\n      /**\n       * On Apply, the export process is begun\n       */\n\n    }, {\n      key: \"handleApplyClick\",\n      value: function handleApplyClick() {\n        var _this$props = this.props,\n            dispatch = _this$props.dispatch,\n            ids = _this$props.ids,\n            query = _this$props.query;\n\n        if (_.isEmpty(query) && !_.isEmpty(ids)) {\n          dispatch(fetchUsingIds());\n        } else {\n          dispatch(fetchUsingQuery()).done(function () {\n            return dispatch(fetchUsingIds());\n          });\n        }\n      }\n      /**\n       * Dispatch a form reset\n       */\n\n    }, {\n      key: \"handleResetClick\",\n      value: function handleResetClick() {\n        this.props.dispatch(reset());\n      }\n    }, {\n      key: \"onCustomFormatClick\",\n      value: function onCustomFormatClick() {\n        if (this.state.customFormatDirectEntry && this.props.customFormats.length > 0) {\n          this.onCustomFormatChange(this.props.customFormats[0].code);\n        }\n\n        this.setState({\n          customFormatDirectEntry: !this.state.customFormatDirectEntry\n        });\n      }\n      /**\n       * Update the format on the state when the user selects a new one\n       *\n       * @param {string} id - format id\n       */\n\n    }, {\n      key: \"handleFormatChange\",\n      value: function handleFormatChange(id) {\n        var _this$props2 = this.props,\n            dispatch = _this$props2.dispatch,\n            formats = _this$props2.formats,\n            autoSubmit = _this$props2.autoSubmit;\n\n        var format = _.find(formats, {\n          id: id\n        });\n\n        if (format.value === 'custom' && this.props.customFormats.length > 0) {\n          this.onCustomFormatChange(this.props.customFormats[0].code);\n        }\n\n        dispatch(setFormat(format)); // if autoSubmit, then hit apply as the format changes\n\n        autoSubmit && format.value !== 'custom' && this.handleApplyClick();\n      }\n      /**\n       * Get the next set of items\n       */\n\n    }, {\n      key: \"handleGetNextClick\",\n      value: function handleGetNextClick() {\n        var dispatch = this.props.dispatch;\n        dispatch(getNextBatch());\n      }\n    }, {\n      key: \"componentWillReceiveProps\",\n      value: function componentWillReceiveProps(next) {\n        var remaining = next.totalRecs - next.maxCount;\n        this.setState({\n          count: '' + next.count,\n          hasMore: remaining > 0,\n          remaining: remaining > next.batchSize ? next.batchSize : remaining\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props3 = this.props,\n            format = _this$props3.format,\n            formats = _this$props3.formats,\n            isFetching = _this$props3.isFetching,\n            output = _this$props3.output,\n            batchSize = _this$props3.batchSize,\n            showCloser = _this$props3.showCloser,\n            showReset = _this$props3.showReset,\n            progress = _this$props3.progress,\n            maxCount = _this$props3.maxCount,\n            hasError = _this$props3.hasError,\n            errorMsg = _this$props3.errorMsg,\n            totalRecs = _this$props3.totalRecs,\n            showSlider = _this$props3.showSlider,\n            splitCols = _this$props3.splitCols,\n            autoSubmit = _this$props3.autoSubmit,\n            customFormat = _this$props3.customFormat,\n            customFormats = _this$props3.customFormats;\n        var _this$state = this.state,\n            count = _this$state.count,\n            hasMore = _this$state.hasMore,\n            showAlert = _this$state.showAlert,\n            alertMsg = _this$state.alertMsg,\n            remaining = _this$state.remaining,\n            customFormatDirectEntry = _this$state.customFormatDirectEntry;\n        var low = maxCount - batchSize;\n        var lower = low === 0 ? 1 : low;\n        var upper = Number(count) + low;\n        var shouldShowSlider = totalRecs > 1 && showSlider;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container-fluid export-container\"\n        }, /*#__PURE__*/React.createElement(\"span\", null, showCloser && /*#__PURE__*/React.createElement(Closer, {\n          onClick: this.handleCloseClick\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"h4\"\n        }, \"Exporting record(s) \", /*#__PURE__*/React.createElement(\"strong\", null, lower), \" to\", ' ', /*#__PURE__*/React.createElement(\"strong\", null, upper), \" \", /*#__PURE__*/React.createElement(\"small\", null, \"(total: \", totalRecs, \")\"))), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n          className: splitCols ? 'col-sm-6' : 'col-sm-12'\n        }, /*#__PURE__*/React.createElement(Setup, {\n          format: format,\n          formats: formats,\n          disabled: isFetching,\n          count: count,\n          maxCount: maxCount,\n          totalRecs: totalRecs,\n          batchSize: batchSize,\n          hasMore: hasMore,\n          showSlider: shouldShowSlider,\n          showReset: showReset,\n          autoSubmit: autoSubmit,\n          remaining: remaining,\n          customFormat: customFormat,\n          customFormats: customFormats,\n          customFormatDirectEntry: customFormatDirectEntry,\n          onCustomFormatChange: this.onCustomFormatChange,\n          onReset: this.handleResetClick,\n          onApply: this.handleApplyClick,\n          onCancel: this.handleCancelClick,\n          setFormat: this.handleFormatChange,\n          onGetNext: this.handleGetNextClick,\n          setCount: this.handleCountChange,\n          onCustomFormatClick: this.onCustomFormatClick\n        }), hasError && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-10\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\"\n        }, errorMsg))), showAlert && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-10\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-info\"\n        }, alertMsg)))), /*#__PURE__*/React.createElement(\"div\", {\n          className: splitCols ? 'col-sm-6' : 'col-sm-12'\n        }, /*#__PURE__*/React.createElement(Export, {\n          output: output,\n          isFetching: isFetching,\n          progress: progress,\n          onDownloadFile: this.handleDownloadFileClick,\n          onCopy: this.onCopyText\n        }))));\n      }\n    }]);\n\n    return App;\n  }(React.Component);\n\n  App.propTypes = {\n    dispatch: ReactPropTypes.func.isRequired,\n    format: ReactPropTypes.shape({\n      id: ReactPropTypes.string,\n      value: ReactPropTypes.string,\n      label: ReactPropTypes.string\n    }).isRequired,\n    formats: ReactPropTypes.arrayOf(ReactPropTypes.shape({\n      id: ReactPropTypes.string,\n      value: ReactPropTypes.string,\n      label: ReactPropTypes.string\n    })).isRequired,\n    isFetching: ReactPropTypes.bool.isRequired,\n    output: ReactPropTypes.string.isRequired,\n    progress: ReactPropTypes.number.isRequired,\n    count: ReactPropTypes.number.isRequired,\n    maxCount: ReactPropTypes.number.isRequired,\n    hasError: ReactPropTypes.bool.isRequired,\n    errorMsg: ReactPropTypes.string.isRequired,\n    batchSize: ReactPropTypes.number.isRequired,\n    totalRecs: ReactPropTypes.number.isRequired,\n    showCloser: ReactPropTypes.bool.isRequired,\n    showSlider: ReactPropTypes.bool.isRequired,\n    splitCols: ReactPropTypes.bool.isRequired,\n    showReset: ReactPropTypes.bool.isRequired,\n    autoSubmit: ReactPropTypes.bool.isRequired\n  };\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      format: state.format,\n      formats: state.formats,\n      output: state.exports.output,\n      isFetching: state.exports.isFetching,\n      progress: state.exports.progress,\n      count: state.exports.count,\n      maxCount: state.exports.maxCount,\n      hasError: state.error.hasError,\n      errorMsg: state.error.errorMsg,\n      batchSize: state.exports.batchSize,\n      totalRecs: state.exports.totalRecs,\n      customFormat: state.exports.customFormat,\n      showCloser: state.main.showCloser,\n      showSlider: state.main.showSlider,\n      autoSubmit: state.main.autoSubmit,\n      splitCols: state.main.splitCols,\n      showReset: state.main.showReset,\n      ids: state.exports.ids,\n      query: state.main.query,\n      customFormats: state.exports.customFormats\n    };\n  };\n\n  return ReactRedux.connect(mapStateToProps)(App);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/export/containers/App.jsx.js?");

/***/ }),

/***/ "./src/js/widgets/export/reducers/index.js":
/*!*************************************************!*\
  !*** ./src/js/widgets/export/reducers/index.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Collects and combines all reducers\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/api_targets */ \"./src/js/components/api_targets.js\"), __webpack_require__(/*! js/widgets/export/actions/index */ \"./src/js/widgets/export/actions/index.js\"), __webpack_require__(/*! js/widgets/config */ \"./src/js/widgets/config.js\"), __webpack_require__(/*! redux */ \"./src/libs/redux.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, ApiTargets, actions, config, Redux) {\n  var SET_QUERY = actions.SET_QUERY,\n      SET_FORMAT = actions.SET_FORMAT,\n      SET_FORMATS = actions.SET_FORMATS,\n      SET_CUSTOM_FORMAT = actions.SET_CUSTOM_FORMAT,\n      SET_PROGRESS = actions.SET_PROGRESS,\n      SET_COUNT = actions.SET_COUNT,\n      SET_PAGE = actions.SET_PAGE,\n      SET_IGNORE = actions.SET_IGNORE,\n      SET_HAS_ERROR = actions.SET_HAS_ERROR,\n      SET_SHOW_CLOSER = actions.SET_SHOW_CLOSER,\n      SET_ERROR_MSG = actions.SET_ERROR_MSG,\n      SET_MAX_COUNT = actions.SET_MAX_COUNT,\n      SET_TOTAL_RECS = actions.SET_TOTAL_RECS,\n      SET_BATCH_SIZE = actions.SET_BATCH_SIZE,\n      REQUEST_IDS = actions.REQUEST_IDS,\n      RECEIVE_IDS = actions.RECEIVE_IDS,\n      REQUEST_EXPORT = actions.REQUEST_EXPORT,\n      RECEIVE_EXPORT = actions.RECEIVE_EXPORT,\n      REQUEST_FAILED = actions.REQUEST_FAILED,\n      REQUEST_CANCELLED = actions.REQUEST_CANCELLED,\n      TAKE_SNAPSHOT = actions.TAKE_SNAPSHOT,\n      SET_ORIGIN = actions.SET_ORIGIN,\n      SET_SORT = actions.SET_SORT,\n      RESET = actions.RESET,\n      HARD_RESET = actions.HARD_RESET,\n      SET_CUSTOM_FORMATS = actions.SET_CUSTOM_FORMATS,\n      SET_BIBTEX_MAX_AUTHORS = actions.SET_BIBTEX_MAX_AUTHORS,\n      SET_BIBTEX_KEY_FORMAT = actions.SET_BIBTEX_KEY_FORMAT,\n      SET_BIBTEX_ABS_MAX_AUTHORS = actions.SET_BIBTEX_ABS_MAX_AUTHORS,\n      SET_BIBTEX_ABS_KEY_FORMAT = actions.SET_BIBTEX_ABS_KEY_FORMAT,\n      SET_BIBTEX_AUTHOR_CUTOFF = actions.SET_BIBTEX_AUTHOR_CUTOFF,\n      SET_BIBTEX_ABS_AUTHOR_CUTOFF = actions.SET_BIBTEX_ABS_AUTHOR_CUTOFF,\n      SET_BIBTEX_JOURNAL_FORMAT = actions.SET_BIBTEX_JOURNAL_FORMAT; // format reducer\n\n  var format = function format() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      label: 'BibTeX',\n      value: 'bibtex',\n      id: '0'\n    };\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case SET_FORMAT:\n        return action.format;\n\n      default:\n        return state;\n    }\n  };\n\n  var exFormats = _.map(config.export.formats, function (f, idx) {\n    return _.extend(f, {\n      id: String(idx)\n    });\n  }); // format collection reducer\n\n\n  var formats = function formats() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exFormats;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case SET_FORMATS:\n        return action.formats;\n\n      default:\n        return state;\n    }\n  }; // error messages reducer\n\n\n  var error = function error() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      hasError: false,\n      errorMsg: 'Sorry, something happened during the request. Please try again'\n    };\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case SET_HAS_ERROR:\n        return _objectSpread({}, state, {\n          hasError: action.hasError\n        });\n\n      case SET_ERROR_MSG:\n        return _objectSpread({}, state, {\n          errorMsg: action.errorMsg\n        });\n\n      default:\n        return state;\n    }\n  }; // exports reducer (main export functionality)\n\n\n  var exports = function exports() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      isFetching: false,\n      output: '',\n      progress: 0,\n      ids: [],\n      sort: 'date desc, bibcode desc',\n      count: 0,\n      page: 0,\n      maxCount: ApiTargets._limits.ExportWidget.default,\n      batchSize: ApiTargets._limits.ExportWidget.default,\n      ignore: false,\n      totalRecs: 0,\n      customFormatString: '',\n      customFormats: [],\n      snapshot: {},\n      bibtexKeyFormat: null,\n      bibtexMaxAuthors: 0,\n      bibtexAuthorCutoff: 200,\n      bibtexABSKeyFormat: null,\n      bibtexABSMaxAuthors: 0,\n      bibtexABSAuthorCutoff: 200,\n      bibtexJournalFormat: 1\n    };\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case REQUEST_IDS:\n        return _objectSpread({}, state, {\n          isFetching: true,\n          progress: 0\n        });\n\n      case RECEIVE_IDS:\n        return _objectSpread({}, state, {\n          isFetching: false,\n          progress: 100,\n          ids: action.ids\n        });\n\n      case SET_TOTAL_RECS:\n        return _objectSpread({}, state, {\n          totalRecs: action.totalRecs\n        });\n\n      case REQUEST_EXPORT:\n        return _objectSpread({}, state, {\n          isFetching: true,\n          progress: 0\n        });\n\n      case SET_CUSTOM_FORMAT:\n        return _objectSpread({}, state, {\n          customFormatString: action.format\n        });\n\n      case SET_CUSTOM_FORMATS:\n        return _objectSpread({}, state, {\n          customFormats: action.customFormats\n        });\n\n      case SET_BIBTEX_MAX_AUTHORS:\n        return _objectSpread({}, state, {\n          bibtexMaxAuthors: action.maxAuthors\n        });\n\n      case SET_BIBTEX_KEY_FORMAT:\n        return _objectSpread({}, state, {\n          bibtexKeyFormat: action.keyFormat\n        });\n\n      case SET_BIBTEX_AUTHOR_CUTOFF:\n        return _objectSpread({}, state, {\n          bibtexAuthorCutoff: action.payload\n        });\n\n      case SET_BIBTEX_ABS_MAX_AUTHORS:\n        return _objectSpread({}, state, {\n          bibtexABSMaxAuthors: action.maxAuthors\n        });\n\n      case SET_BIBTEX_ABS_KEY_FORMAT:\n        return _objectSpread({}, state, {\n          bibtexABSKeyFormat: action.keyFormat\n        });\n\n      case SET_BIBTEX_ABS_AUTHOR_CUTOFF:\n        return _objectSpread({}, state, {\n          bibtexABSAuthorCutoff: action.payload\n        });\n\n      case SET_BIBTEX_JOURNAL_FORMAT:\n        return _objectSpread({}, state, {\n          bibtexJournalFormat: action.payload\n        });\n\n      case RECEIVE_EXPORT:\n        return _objectSpread({}, state, {\n          isFetching: false,\n          progress: 100,\n          output: action.exports,\n          ignore: false\n        });\n\n      case REQUEST_FAILED:\n        return _objectSpread({}, state, {\n          isFetching: false,\n          progress: 0\n        });\n\n      case REQUEST_CANCELLED:\n        return _objectSpread({}, state, {\n          ignore: true,\n          isFetching: false,\n          progress: 0,\n          output: ''\n        });\n\n      case SET_IGNORE:\n        return _objectSpread({}, state, {\n          ignore: action.ignore\n        });\n\n      case SET_PROGRESS:\n        return _objectSpread({}, state, {\n          progress: action.progress\n        });\n\n      case SET_BATCH_SIZE:\n        return _objectSpread({}, state, {\n          batchSize: action.batchSize\n        });\n\n      case SET_COUNT:\n        return _objectSpread({}, state, {\n          count: action.count > state.maxCount ? state.maxCount : action.count\n        });\n\n      case SET_MAX_COUNT:\n        return _objectSpread({}, state, {\n          maxCount: action.maxCount > state.totalRecs ? state.totalRecs : action.maxCount\n        });\n\n      case SET_PAGE:\n        return _objectSpread({}, state, {\n          page: action.page\n        });\n\n      case SET_SORT:\n        return _objectSpread({}, state, {\n          sort: action.sort\n        });\n\n      case TAKE_SNAPSHOT:\n        return _objectSpread({}, state, {\n          snapshot: action.snapshot\n        });\n\n      case RESET:\n        {\n          return _objectSpread({}, state.snapshot, {\n            output: '',\n            snapshot: state.snapshot\n          });\n        }\n\n      default:\n        return state;\n    }\n  }; // main state reducer\n\n\n  var main = function main() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      query: {},\n      showCloser: true,\n      showSlider: true,\n      origin: 'results-page',\n      showReset: true,\n      splitCols: true,\n      autoSubmit: false\n    };\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case SET_SHOW_CLOSER:\n        return _objectSpread({}, state, {\n          showCloser: action.showCloser\n        });\n\n      case SET_QUERY:\n        return _objectSpread({}, state, {\n          query: action.query\n        });\n\n      case SET_ORIGIN:\n        return _objectSpread({}, state, {\n          showCloser: action.origin === 'results-page',\n          showSlider: action.origin === 'results-page',\n          splitCols: action.origin === 'results-page',\n          showReset: action.origin === 'results-page',\n          autoSubmit: action.origin !== 'results-page',\n          origin: action.origin\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  var appReducer = Redux.combineReducers({\n    format: format,\n    formats: formats,\n    error: error,\n    exports: exports,\n    main: main\n  });\n\n  var rootReducer = function rootReducer(state, action) {\n    if (action.type === HARD_RESET) {\n      state = undefined;\n    }\n\n    return appReducer(state, action);\n  };\n\n  return rootReducer;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/export/reducers/index.js?");

/***/ }),

/***/ "./src/js/widgets/export/widget.jsx.js":
/*!*********************************************!*\
  !*** ./src/js/widgets/export/widget.jsx.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./src/libs/jquery.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! react */ \"./src/libs/react.js\"), __webpack_require__(/*! react-dom */ \"./src/libs/react-dom.js\"), __webpack_require__(/*! redux */ \"./src/libs/redux.js\"), __webpack_require__(/*! react-redux */ \"./src/libs/react-redux.js\"), __webpack_require__(/*! redux-thunk */ \"./src/libs/redux-thunk.js\"), __webpack_require__(/*! js/widgets/base/base_widget */ \"./src/js/widgets/base/base_widget.js\"), __webpack_require__(/*! js/widgets/export/reducers/index */ \"./src/js/widgets/export/reducers/index.js\"), __webpack_require__(/*! js/widgets/export/actions/index */ \"./src/js/widgets/export/actions/index.js\"), __webpack_require__(/*! js/widgets/export/containers/App.jsx */ \"./src/js/widgets/export/containers/App.jsx.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/api_targets */ \"./src/js/components/api_targets.js\"), __webpack_require__(/*! js/components/api_feedback */ \"./src/js/components/api_feedback.js\"), __webpack_require__(/*! js/widgets/config */ \"./src/js/widgets/config.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, React, ReactDOM, Redux, ReactRedux, ReduxThunk, BaseWidget, reducers, actions, App, ApiQuery, ApiTargets, ApiFeedback, config) {\n  var View = Backbone.View.extend({\n    /**\n     * Initialize the view\n     *\n     * @param {object} options - view options\n     */\n    initialize: function initialize(options) {\n      // provide this with all the options passed in\n      _.assign(this, options);\n    },\n\n    /**\n     * Renders the React view\n     *\n     * @returns {View}\n     */\n    render: function render() {\n      // create provider component, that passes the store to <App>\n      ReactDOM.render( /*#__PURE__*/React.createElement(ReactRedux.Provider, {\n        store: this.store\n      }, /*#__PURE__*/React.createElement(App, null)), this.el);\n      return this;\n    },\n    destroy: function destroy() {\n      // on destroy, make sure the React DOM is unmounted\n      ReactDOM.unmountComponentAtNode(this.el);\n    }\n  });\n  var Widget = BaseWidget.extend({\n    /**\n     * initialize the object\n     *\n     * @param {object} options - the widget options\n     */\n    initialize: function initialize(options) {\n      this.options = options || {}; // create thunk middleware, passing in `this` as extra argument\n\n      var middleware = Redux.applyMiddleware(ReduxThunk.default.withExtraArgument(this)); // create the redux store using reducers and applying middleware\n\n      var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n      this.store = Redux.createStore(reducers, composeEnhancers(middleware)); // create the view passing the store as the only property\n\n      this.view = new View({\n        store: this.store\n      });\n      this.defaultFormat = 'BibTeX';\n      this.customFormats = [];\n      this.bibtexKeyFormat = null;\n      this.bibtexMaxAuthors = 0;\n      this.bibtexABSKeyFormat = null;\n      this.bibtexABSMaxAuthors = 0;\n      this.bibtexAuthorCutoff = 200;\n      this.bibtexABSAuthorCutoff = 200;\n      this.bibtexJournalFormat = 1;\n    },\n\n    /**\n     * Activate the widget\n     *\n     * @param {Beehive} beehive - the application beehive object\n     */\n    activate: function activate(beehive) {\n      this.setBeeHive(beehive);\n      var pubsub = this.getPubSub();\n      var dispatch = this.store.dispatch;\n      var setQuery = actions.setQuery;\n      this.activateWidget();\n      pubsub.subscribe(pubsub.INVITING_REQUEST, function (query) {\n        return dispatch(setQuery(query.toJSON()));\n      });\n      this.attachGeneralHandler(this.onApiFeedback);\n      pubsub.subscribe(pubsub.USER_ANNOUNCEMENT, _.bind(this.getFieldsFromUserData, this));\n    },\n\n    /**\n     * Handle errors from api requests\n     *\n     * Show error messages, stop other operations, etc.\n     *\n     * @param {ApiFeedback} feedback - the feedback object\n     */\n    onApiFeedback: function onApiFeedback(feedback) {\n      this.store.dispatch(actions.requestFailed(feedback));\n    },\n    getUserData: function getUserData() {\n      try {\n        var beehive = _.isFunction(this.getBeeHive) && this.getBeeHive();\n        var user = _.isFunction(beehive.getObject) && beehive.getObject('User');\n\n        if (_.isPlainObject(user)) {\n          return _.isFunction(user.getUserData) && user.getUserData('USER_DATA');\n        }\n      } catch (e) {}\n\n      return {};\n    },\n    getFieldsFromUserData: function getFieldsFromUserData() {\n      var _this = this;\n\n      var userData = this.getUserData();\n      return _.reduce(['defaultExportFormat', 'customFormats', 'bibtexKeyFormat', 'bibtexMaxAuthors', 'bibtexABSKeyFormat', 'bibtexABSMaxAuthors', 'bibtexAuthorCutoff', 'bibtexABSAuthorCutoff', 'bibtexJournalFormat'], function (acc, prop) {\n        var value = _.has(userData, prop) ? userData[prop] : _this[prop];\n\n        if (prop === 'defaultExportFormat') {\n          var v = _.find(config.export.formats, {\n            label: value\n          });\n\n          acc[prop] = v ? v.value : config.export.formats[0];\n        } else {\n          acc[prop] = value;\n        }\n\n        _this[prop] = value;\n        return acc;\n      }, {});\n    },\n    getJournalFormatValue: function getJournalFormatValue(format) {\n      switch (format) {\n        case 'Use AASTeX macros':\n          return 1;\n\n        case 'Use Journal Abbreviations':\n          return 2;\n\n        case 'Use Full Journal Name':\n          return 3;\n\n        default:\n          return 1;\n      }\n    },\n\n    /**\n     * Called from navigator when the widget is needed to get the bibcodes to\n     * use for the export.  This will be used as an interaction point to the\n     * redux store only.\n     *\n     * @param {ApiQuery} currentQuery - the current query\n     * @param {number} numFound - the amount of records found\n     * @param {string} format - the export format\n     */\n    renderWidgetForCurrentQuery: function renderWidgetForCurrentQuery(_ref) {\n      var currentQuery = _ref.currentQuery,\n          numFound = _ref.numFound,\n          format = _ref.format;\n      var dispatch = this.store.dispatch;\n      var fetchUsingQuery = actions.fetchUsingQuery,\n          fetchUsingIds = actions.fetchUsingIds,\n          findAndSetFormat = actions.findAndSetFormat,\n          hardReset = actions.hardReset,\n          setCount = actions.setCount,\n          setQuery = actions.setQuery,\n          setTotalRecs = actions.setTotalRecs,\n          takeSnapshot = actions.takeSnapshot,\n          setOrigin = actions.setOrigin,\n          setCustomFormats = actions.setCustomFormats,\n          setBibtexKeyFormat = actions.setBibtexKeyFormat,\n          setBibtexMaxAuthors = actions.setBibtexMaxAuthors,\n          setBibtexABSKeyFormat = actions.setBibtexABSKeyFormat,\n          setBibtexABSMaxAuthors = actions.setBibtexABSMaxAuthors,\n          setBibtexAuthorCutoff = actions.setBibtexAuthorCutoff,\n          setBibtexABSAuthorCutoff = actions.setBibtexABSAuthorCutoff,\n          setBibtexJournalFormat = actions.setBibtexJournalFormat;\n\n      var _this$getFieldsFromUs = this.getFieldsFromUserData(),\n          customFormats = _this$getFieldsFromUs.customFormats,\n          defaultFormat = _this$getFieldsFromUs.defaultFormat,\n          bibtexMaxAuthors = _this$getFieldsFromUs.bibtexMaxAuthors,\n          bibtexKeyFormat = _this$getFieldsFromUs.bibtexKeyFormat,\n          bibtexABSMaxAuthors = _this$getFieldsFromUs.bibtexABSMaxAuthors,\n          bibtexABSKeyFormat = _this$getFieldsFromUs.bibtexABSKeyFormat,\n          bibtexAuthorCutoff = _this$getFieldsFromUs.bibtexAuthorCutoff,\n          bibtexABSAuthorCutoff = _this$getFieldsFromUs.bibtexABSAuthorCutoff,\n          bibtexJournalFormat = _this$getFieldsFromUs.bibtexJournalFormat;\n\n      var fmt = format === 'default' || format === 'other' ? defaultFormat : format; // perform a full reset of the store\n\n      dispatch(hardReset());\n      dispatch(setCustomFormats(customFormats));\n      dispatch(setBibtexMaxAuthors(bibtexMaxAuthors));\n      dispatch(setBibtexABSMaxAuthors(bibtexABSMaxAuthors));\n      dispatch(setBibtexKeyFormat(bibtexKeyFormat));\n      dispatch(setBibtexABSKeyFormat(bibtexABSKeyFormat));\n      dispatch(setBibtexAuthorCutoff(bibtexAuthorCutoff));\n      dispatch(setBibtexABSAuthorCutoff(bibtexABSAuthorCutoff));\n      dispatch(setBibtexJournalFormat(this.getJournalFormatValue(bibtexJournalFormat))); // set the origin of the request (abstract/results/etc.)\n\n      dispatch(setOrigin(this.componentParams && this.componentParams.origin)); // set the current query\n\n      dispatch(setQuery(currentQuery.toJSON())); // set the current format\n\n      dispatch(findAndSetFormat(format)); // set the current count\n\n      dispatch(setCount(numFound)); // set the total number of records we are exporting\n\n      dispatch(setTotalRecs(numFound)); // if a format is selected, then we can start an actual export\n\n      if (fmt !== 'other') {\n        // take a snapshot of the state\n        dispatch(takeSnapshot()); // fetch identifiers using our query\n\n        dispatch(fetchUsingQuery()) // then use the ids to fetch the export string\n        .then(function () {\n          return dispatch(fetchUsingIds()) // take another snapshot\n          .always(function () {\n            return dispatch(takeSnapshot());\n          });\n        });\n      } else {\n        // take a snapshot if no export is selected\n        dispatch(takeSnapshot());\n      }\n    },\n\n    /**\n     * Close the widget\n     */\n    closeWidget: function closeWidget() {\n      var pubsub = this.getPubSub();\n      pubsub.publish(pubsub.NAVIGATE, 'results-page');\n    },\n\n    /**\n     * Execute an api request, this will open up a new request and subscribe to\n     * the response.\n     *\n     * @param {ApiRequest} req - request object\n     * @returns {$.Promise} promise\n     * @private\n     */\n    _executeApiRequest: function _executeApiRequest(req) {\n      var $dd = $.Deferred();\n      var pubsub = this.getPubSub();\n      pubsub.subscribeOnce(pubsub.DELIVERING_RESPONSE, function (res) {\n        return $dd.resolve(res);\n      });\n      pubsub.publish(pubsub.EXECUTE_REQUEST, req);\n      return $dd.promise();\n    },\n\n    /**\n     * Handle case where export widget is opened and passed a set of identifiers\n     * This is the same as the currentQuery method, however it can skip the query\n     * request part since we already have the identifiers.\n     *\n     * @param {Array} recs - current array of records (identifiers)\n     * @param {object} data - object containing the format\n     */\n    renderWidgetForListOfBibcodes: function renderWidgetForListOfBibcodes(recs, data) {\n      var dispatch = this.store.dispatch;\n      var receiveIds = actions.receiveIds,\n          findAndSetFormat = actions.findAndSetFormat,\n          fetchUsingIds = actions.fetchUsingIds,\n          hardReset = actions.hardReset,\n          setSort = actions.setSort,\n          setCount = actions.setCount,\n          setTotalRecs = actions.setTotalRecs,\n          takeSnapshot = actions.takeSnapshot,\n          setOrigin = actions.setOrigin,\n          setCustomFormats = actions.setCustomFormats,\n          setBibtexKeyFormat = actions.setBibtexKeyFormat,\n          setBibtexMaxAuthors = actions.setBibtexMaxAuthors,\n          setBibtexABSKeyFormat = actions.setBibtexABSKeyFormat,\n          setBibtexABSMaxAuthors = actions.setBibtexABSMaxAuthors,\n          setBibtexAuthorCutoff = actions.setBibtexAuthorCutoff,\n          setBibtexABSAuthorCutoff = actions.setBibtexABSAuthorCutoff,\n          setBibtexJournalFormat = actions.setBibtexJournalFormat;\n\n      var _this$getFieldsFromUs2 = this.getFieldsFromUserData(),\n          customFormats = _this$getFieldsFromUs2.customFormats,\n          defaultExportFormat = _this$getFieldsFromUs2.defaultExportFormat,\n          bibtexMaxAuthors = _this$getFieldsFromUs2.bibtexMaxAuthors,\n          bibtexKeyFormat = _this$getFieldsFromUs2.bibtexKeyFormat,\n          bibtexABSMaxAuthors = _this$getFieldsFromUs2.bibtexABSMaxAuthors,\n          bibtexABSKeyFormat = _this$getFieldsFromUs2.bibtexABSKeyFormat,\n          bibtexAuthorCutoff = _this$getFieldsFromUs2.bibtexAuthorCutoff,\n          bibtexABSAuthorCutoff = _this$getFieldsFromUs2.bibtexABSAuthorCutoff,\n          bibtexJournalFormat = _this$getFieldsFromUs2.bibtexJournalFormat;\n\n      var format = data.format === 'default' || data.format === 'other' ? defaultExportFormat : data.format;\n      var sort = data.sort || 'date desc, bibcode desc';\n      dispatch(hardReset());\n      dispatch(setCustomFormats(customFormats));\n      dispatch(setBibtexMaxAuthors(bibtexMaxAuthors));\n      dispatch(setBibtexABSMaxAuthors(bibtexABSMaxAuthors));\n      dispatch(setBibtexKeyFormat(bibtexKeyFormat));\n      dispatch(setBibtexABSKeyFormat(bibtexABSKeyFormat));\n      dispatch(setBibtexAuthorCutoff(bibtexAuthorCutoff));\n      dispatch(setBibtexABSAuthorCutoff(bibtexABSAuthorCutoff));\n      dispatch(setBibtexJournalFormat(this.getJournalFormatValue(bibtexJournalFormat)));\n      dispatch(setSort(sort));\n      dispatch(setOrigin(this.componentParams && this.componentParams.origin));\n      dispatch(receiveIds(recs));\n      dispatch(findAndSetFormat(format.toLowerCase()));\n      dispatch(setCount(recs.length));\n      dispatch(setTotalRecs(recs.length)); // only fetch using ids if user selected a format\n\n      if (data.format !== 'other') {\n        dispatch(fetchUsingIds()).done(function () {\n          return dispatch(takeSnapshot());\n        });\n      } else {\n        // otherwise only snapshot, so we can get back to this state later\n        dispatch(takeSnapshot());\n      }\n    },\n    processResponse: _.noop\n  });\n  return Widget;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/export/widget.jsx.js?");

/***/ }),

/***/ "./src/js/wraps/paper_export.js":
/*!**************************************!*\
  !*** ./src/js/wraps/paper_export.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! js/widgets/export/widget.jsx */ \"./src/js/widgets/export/widget.jsx.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/json_response */ \"./src/js/components/json_response.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (ExportWidget, ApiQuery, JsonResponse) {\n  var Widget = ExportWidget.extend({\n    initialize: function initialize(options) {\n      // other widgets can send us data through page manager\n      this.on('page-manager-message', function (event, data) {\n        if (event === 'broadcast-payload') {\n          this.ingestBroadcastedPayload(data);\n        }\n      });\n      ExportWidget.prototype.initialize.call(this, options);\n    },\n    activate: function activate(beehive) {\n      this.setBeeHive(beehive);\n\n      _.bindAll(this, 'setCurrentQuery', 'processResponse');\n\n      var pubsub = this.getPubSub();\n      pubsub.subscribe(pubsub.DELIVERING_RESPONSE, this.processResponse);\n      ExportWidget.prototype.activate.call(this, beehive);\n    },\n    ingestBroadcastedPayload: function ingestBroadcastedPayload(bibcode) {\n      if (bibcode) {\n        this.bibcode = bibcode;\n      }\n    },\n    setSubView: function setSubView(format) {\n      if (this.bibcode && format) {\n        this.renderWidgetForListOfBibcodes([this.bibcode], {\n          format: format\n        });\n      }\n    }\n  });\n  return Widget;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/wraps/paper_export.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd define */
/******/ 	!function() {
/******/ 		__webpack_require__.amdD = function () {
/******/ 			throw new Error('define cannot be used indirect');
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/amd options */
/******/ 	!function() {
/******/ 		__webpack_require__.amdO = {};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	!function() {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = function(result, chunkIds, fn, priority) {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var chunkIds = deferred[i][0];
/******/ 				var fn = deferred[i][1];
/******/ 				var priority = deferred[i][2];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.nmd = function(module) {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"ShowExportcitation": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkbumblebee"] = self["webpackChunkbumblebee"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	!function() {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendor"], function() { return __webpack_require__("./src/js/wraps/paper_export.js"); })
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;