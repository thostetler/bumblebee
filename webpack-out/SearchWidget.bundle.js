/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/components/analytics.js":
/*!****************************************!*\
  !*** ./src/js/components/analytics.js ***!
  \****************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  /*\n   * Set of targets\n   * each has a set of hooks which coorespond to the event label passed\n   * types represents the possible event targets which can be used\n   * url is a template which will be passed the incoming data\n   */\n  var TARGETS = {\n    resolver: {\n      hooks: ['toc-link-followed', 'abstract-link-followed', 'citations-link-followed', 'associated-link-followed'],\n      types: ['abstract', 'citations', 'references', 'metrics', 'coreads', 'similar', 'graphics', 'associated', 'toc'],\n      url: function url(_ref) {\n        var bibcode = _ref.bibcode,\n            target = _ref.target;\n        return \"link_gateway/\".concat(bibcode, \"/\").concat(target);\n      }\n    }\n  };\n  /**\n   * fire off the xhr request to the url\n   *\n   * @param {string} url\n   * @param {object} data\n   */\n\n  var sendEvent = function sendEvent(url) {\n    window.fetch(url, {\n      method: 'GET'\n    }).catch(function (error) {\n      window.getSentry().captureMessage('Failed to send analytics event', {\n        extra: {\n          url: url,\n          error: error.message\n        }\n      });\n    });\n  };\n\n  var isValidEvent = function isValidEvent(_ref2) {\n    var label = _ref2.label,\n        target = _ref2.target;\n\n    if (typeof label !== 'string' || typeof target !== 'string') {\n      return false;\n    }\n\n    return TARGETS.resolver.hooks.includes(label) && TARGETS.resolver.types.includes(target);\n  };\n  /**\n   * Go through the targets and fire the event if the label passed\n   * matches one of the hooks specified.  Also the data.target must match one\n   * of the types listed on the target config\n   *\n   * @param {string} label - the event label\n   * @param {object} data - the event data\n   */\n\n\n  var adsLogger = function adsLogger(label, data) {\n    var target = data ? data.target : null;\n    var bibcode = data ? data.bibcode : null;\n\n    if (bibcode !== null && isValidEvent({\n      label: label,\n      target: target\n    })) {\n      sendEvent(data.url ? data.url : TARGETS.resolver.url({\n        bibcode: bibcode,\n        target: target\n      }));\n    }\n  };\n\n  var buffer = [];\n  var gaName = window.GoogleAnalyticsObject || 'ga';\n\n  var cleanBuffer = function cleanBuffer() {\n    if (window[gaName]) {\n      for (var i = 0; i < buffer.length; i++) {\n        window[gaName].apply(this, buffer[i]);\n      }\n\n      buffer = [];\n    }\n  };\n\n  var CACHE_TIMEOUT = 300;\n  /**\n   * Simple debouncing mechanism with caching\n   * this will store stringified version of the incoming events and provide a way to\n   * check if the event has recently been cached.  With a short rolling timer to keep the timeout short to hopefully\n   * only target duplicate calls.\n   */\n\n  var AnalyticsCacher = /*#__PURE__*/function () {\n    function AnalyticsCacher() {\n      _classCallCheck(this, AnalyticsCacher);\n\n      this.timer = null;\n      this.cache = new Set();\n    }\n\n    _createClass(AnalyticsCacher, [{\n      key: \"stringify\",\n      value: function stringify(args) {\n        return JSON.stringify(args, function (key, value) {\n          // filter out this cache-buster id added by GTM\n          if (key === 'gtm.uniqueEventId') {\n            return undefined;\n          }\n\n          return value;\n        });\n      }\n    }, {\n      key: \"add\",\n      value: function add() {\n        this._resetTimeout();\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return this.cache.add(this.stringify(args));\n      }\n    }, {\n      key: \"has\",\n      value: function has() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return this.cache.has(this.stringify(args));\n      }\n    }, {\n      key: \"_resetTimeout\",\n      value: function _resetTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(this._clear.bind(this), CACHE_TIMEOUT);\n      }\n    }, {\n      key: \"_clear\",\n      value: function _clear() {\n        this.cache.clear();\n      }\n    }]);\n\n    return AnalyticsCacher;\n  }();\n\n  var cacher = new AnalyticsCacher();\n\n  var Analytics = function Analytics(action, event, type, description) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 4 ? _len3 - 4 : 0), _key3 = 4; _key3 < _len3; _key3++) {\n      args[_key3 - 4] = arguments[_key3];\n    }\n\n    if (cacher.has(arguments)) {\n      return;\n    }\n\n    cacher.add(arguments);\n    adsLogger.apply(null, Array.prototype.slice.call(arguments, 3)); // if the action is send and the event is event, then we want to send the event to the dataLayer\n\n    if (Array.isArray(window.dataLayer) && action === 'send' && event === 'event') {\n      // some events are 'interaction' or 'error', so add that to the event name\n      window.dataLayer.push({\n        event: \"\".concat(type, \"_\").concat(description),\n        // if the next argument is an object, we'll use that as the data, ignore an extra arguments\n        value1: args[0],\n        value2: args[1],\n        value3: args[2]\n      });\n    } else if (Array.isArray(window.dataLayer) && action === 'send') {\n      window.dataLayer.push({\n        event: event,\n        value1: type,\n        value2: description,\n        value3: args[0]\n      });\n    } else if (Array.isArray(window.dataLayer) && action === 'set') {\n      window.dataLayer.push({\n        event: 'config',\n        value1: event,\n        value2: type,\n        value3: description\n      });\n    }\n  };\n  /**\n   * Get the datalayer for sending events to\n   * @returns {*|*[]}\n   */\n\n\n  Analytics.getDL = function () {\n    if (window.dataLayer && Array.isArray(window.dataLayer)) {\n      return window.dataLayer;\n    }\n\n    return [];\n  };\n  /**\n   * Push a new object to the datalayer\n   * @param {Object} data\n   */\n\n\n  Analytics.push = function (data) {\n    if (cacher.has(data)) {\n      return;\n    }\n\n    cacher.add(data);\n    Analytics.getDL().push(data);\n  };\n  /**\n   * Reset the datalayer\n   */\n\n\n  Analytics.reset = function () {\n    Analytics.getDL().push(function () {\n      this.reset();\n    });\n  };\n  /**\n   * set a value on the datalayer\n   * @param {string} property\n   * @param {unknown} value\n   */\n\n\n  Analytics.set = function (property, value) {\n    Analytics.getDL().push(function () {\n      this.set(property, value);\n    });\n  };\n  /**\n   * get a value on the datalayer\n   * @param {string} property\n   */\n\n\n  Analytics.get = function (property) {\n    var value;\n    Analytics.getDL().push(function () {\n      value = this.get(property);\n    });\n    return value;\n  };\n\n  return Analytics;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/analytics.js?");

/***/ }),

/***/ "./src/js/components/api_feedback.js":
/*!*******************************************!*\
  !*** ./src/js/components/api_feedback.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/mixins/hardened */ \"./src/js/mixins/hardened.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, Hardened) {\n  var ApiFeedback = function ApiFeedback(options) {\n    _.extend(this, _.defaults(options || {}, {\n      code: 200,\n      msg: undefined\n    }));\n\n    this.setCode(this.code);\n  };\n\n  ApiFeedback.CODES = {\n    INVALID_PASSWORD: 498,\n    ACCOUNT_NOT_FOUND: 495,\n    // Account not found during signin\n    ALREADY_LOGGED_IN: 493,\n    // Already signed during signup\n    REQUIRES_LOGIN: 491,\n    TOO_MANY_CHARACTERS: 486,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    INTERNAL_SERVER_ERROR: 500,\n    BAD_GATEWAY: 502,\n    SERVER_ERROR: 503,\n    TOO_MANY_FAILURES: 580,\n    ALL_FINE: 200,\n    KEEP_WAITING: 190,\n    TESTING: 0,\n    // Internal events\n    MAKE_SPACE: -1,\n    UNMAKE_SPACE: -1.1,\n    SEARCH_CYCLE_STARTED: -2,\n    SEARCH_CYCLE_FAILED_TO_START: -3,\n    SEARCH_CYCLE_PROGRESS: -4,\n    SEARCH_CYCLE_STOP_MONITORING: -5,\n    SEARCH_CYCLE_FINISHED: -6,\n    QUERY_ASSISTANT: -7,\n    ALERT: -8,\n    CANNOT_ROUTE: -9,\n    API_REQUEST_ERROR: -10,\n    BIBCODE_DATA_REQUESTED: -11\n  };\n  var _codes = {};\n\n  _.each(_.pairs(ApiFeedback.CODES), function (p) {\n    _codes[p[1]] = p[0];\n  });\n\n  _.extend(ApiFeedback.prototype, {\n    hardenedInterface: {\n      code: 'integer value of the code',\n      msg: 'string message',\n      toJSON: 'for cloning',\n      getApiRequest: 'to get the original request',\n      getSenderKey: 'retrieve the senders key'\n    },\n    initialize: function initialize() {},\n    toJSON: function toJSON() {\n      return {\n        code: this.code,\n        msg: this.msg\n      };\n    },\n    setCode: function setCode(c) {\n      if (!_codes[c]) {\n        throw new Error('This code is not in the list ApiCodes - please extend js/components/api_feedback first:', this.code);\n      }\n\n      this.code = c;\n    },\n    setApiRequest: function setApiRequest(apiRequest) {\n      this.req = apiRequest;\n    },\n    getApiRequest: function getApiRequest() {\n      return this.req;\n    },\n    setMsg: function setMsg(msg) {\n      this.msg = msg;\n    },\n    getSenderKey: function getSenderKey() {\n      return this.senderKey;\n    },\n    setSenderKey: function setSenderKey(key) {\n      this.senderKey = key;\n    }\n  }, Hardened);\n\n  ApiFeedback.extend = Backbone.Model.extend;\n  return ApiFeedback;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_feedback.js?");

/***/ }),

/***/ "./src/js/components/api_query.js":
/*!****************************************!*\
  !*** ./src/js/components/api_query.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n A facade: api query exposing only the set of functions that we allow. This is\n the module that you want to load in the application (do not load the concrete\n implementaions, such as solr_params !)\n\n Put in your config:\n map: {\n 'your/module': {\n 'api_query_impl': 'js/components/specific_impl_of_the_api_query'\n }\n },\n\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/solr_params */ \"./src/js/components/solr_params.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _, ApiQueryImplementation, Facade) {\n  var hardenedInterface = {\n    add: 'add values',\n    set: 'set (replace existing)',\n    get: 'get values',\n    has: 'has a key',\n    hasVal: 'more specific `has` using _.isEmpty',\n    url: 'url string of the params',\n    load: 'loads query as a string',\n    clear: 'clears all values',\n    unset: 'removes a key',\n    toJSON: 'values back as JSON object',\n    clone: 'make a copy',\n    isLocked: true,\n    lock: true,\n    unlock: true,\n    pairs: 'get all values as pairs',\n    keys: 'as keys',\n    values: 'only values',\n    hasChanged: 'whether this object has modification (since its creation)',\n    previousAttributes: 'get all changed attributes',\n    previous: 'previous values for a given attribute'\n  };\n\n  var ApiQuery = function ApiQuery(data, options) {\n    // Facade pattern, we want to expose only limited API\n    // despite the fact that the underlying instance has\n    // all power of the Backbone.Model\n    if (data instanceof ApiQueryImplementation) {\n      this.innerQuery = new Facade(hardenedInterface, data);\n    } else {\n      this.innerQuery = new Facade(hardenedInterface, new ApiQueryImplementation(data, options));\n    }\n  };\n\n  var toInsert = {};\n\n  _.each(_.keys(hardenedInterface), function (element, index, list) {\n    toInsert[element] = function () {\n      return this.innerQuery[element].apply(this.innerQuery, arguments);\n    };\n  });\n\n  _.extend(ApiQuery.prototype, toInsert, {\n    clone: function clone() {\n      var clone = this.innerQuery.clone.apply(this.innerQuery, arguments);\n      return new ApiQuery(clone);\n    },\n    load: function load() {\n      var clone = this.innerQuery.load.apply(this.innerQuery, arguments);\n      return new ApiQuery(clone);\n    }\n  });\n\n  return ApiQuery;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_query.js?");

/***/ }),

/***/ "./src/js/components/api_request.js":
/*!******************************************!*\
  !*** ./src/js/components/api_request.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/28/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\"), __webpack_require__(/*! js/components/default_request */ \"./src/js/components/default_request.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, Facade, ApiRequestImpl) {\n  var hardenedInterface = {\n    // add makes no sense with request\n    get: 'get a key',\n    set: 'set (replace existing)',\n    url: 'url string defining this request',\n    has: 'has a key',\n    load: 'loads request as a string',\n    clear: 'clears all values',\n    unset: 'removes a key',\n    toJSON: 'values back as JSON object',\n    clone: 'make a copy',\n    isLocked: true,\n    lock: true,\n    unlock: true,\n    pairs: 'get all values as pairs',\n    keys: 'as keys',\n    values: 'only values',\n    hasChanged: 'whether this object has modification (since its creation)',\n    previousAttributes: 'get all changed attributes',\n    previous: 'previous values for a given attribute'\n  };\n\n  var ApiRequest = function ApiRequest(data, options) {\n    // Facade pattern, we want to expose only limited API\n    // despite the fact that the underlying instance has\n    // all power of the Backbone.Model\n    if (data instanceof ApiRequestImpl) {\n      this.innerRequest = new Facade(hardenedInterface, data);\n    } else {\n      this.innerRequest = new Facade(hardenedInterface, new ApiRequestImpl(data, options));\n    }\n  };\n\n  var toInsert = {};\n\n  _.each(_.keys(hardenedInterface), function (element, index, list) {\n    toInsert[element] = function () {\n      return this.innerRequest[element].apply(this.innerRequest, arguments);\n    };\n  });\n\n  _.extend(ApiRequest.prototype, toInsert, {\n    clone: function clone() {\n      var clone = this.innerRequest.clone.apply(this.innerRequest, arguments);\n      return new ApiRequest(clone);\n    },\n    load: function load() {\n      var clone = this.innerRequest.load.apply(this.innerRequest, arguments);\n      return new ApiRequest(clone);\n    }\n  });\n\n  return ApiRequest;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_request.js?");

/***/ }),

/***/ "./src/js/components/api_targets.js":
/*!******************************************!*\
  !*** ./src/js/components/api_targets.js ***!
  \******************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 1/20/15\n *\n * contains api targets\n * and any related limits\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var config = {\n    BOOTSTRAP: '/accounts/bootstrap',\n    SEARCH: 'search/query',\n    QTREE: 'search/qtree',\n    BIGQUERY: 'search/bigquery',\n    EXPORT: 'export/',\n    SERVICE_AUTHOR_NETWORK: 'vis/author-network',\n    SERVICE_PAPER_NETWORK: 'vis/paper-network',\n    SERVICE_WORDCLOUD: 'vis/word-cloud',\n    SERVICE_METRICS: 'metrics',\n    SERVICE_OBJECTS: 'objects',\n    SERVICE_OBJECTS_QUERY: 'objects/query',\n    SERVICE_CITATION_HELPER: 'citation_helper',\n    SERVICE_AUTHOR_AFFILIATION_EXPORT: 'authoraff',\n    MYADS_STORAGE: 'vault',\n    MYADS_NOTIFICATIONS: 'vault/_notifications',\n    AUTHOR_AFFILIATION_SEARCH: 'author-affiliation/search',\n    AUTHOR_AFFILIATION_EXPORT: 'author-affiliation/export',\n    RESOLVER: 'resolver',\n    CSRF: 'accounts/csrf',\n    USER: 'accounts/user',\n    USER_DATA: 'vault/user-data',\n    SITE_CONFIGURATION: 'vault/configuration',\n    TOKEN: 'accounts/user/token',\n    LOGIN: 'accounts/user/login',\n    LOGOUT: 'accounts/user/logout',\n    VERIFY: 'accounts/verify',\n    RESEND_VERIFY: \"accounts/user/{email}/verify\",\n    RESET_PASSWORD: 'accounts/user/reset-password',\n    CHANGE_PASSWORD: 'accounts/user/change-password',\n    CHANGE_EMAIL: 'accounts/user/change-email',\n    INFO: 'accounts/info',\n    PROTECTED: 'accounts/protected',\n    STATUS: 'accounts/status',\n    RECOMMENDER: 'recommender',\n    GRAPHICS: 'graphics',\n    FEEDBACK: 'feedback',\n    // library import from classic\n    LIBRARY_IMPORT_CLASSIC_AUTH: 'harbour/auth/classic',\n    LIBRARY_IMPORT_CLASSIC_MIRRORS: 'harbour/mirrors',\n    LIBRARY_IMPORT_CLASSIC_TO_BBB: 'biblib/classic',\n    // library import from 2.0\n    LIBRARY_IMPORT_ADS2_AUTH: 'harbour/auth/twopointoh',\n    LIBRARY_IMPORT_ADS2_TO_BBB: 'biblib/twopointoh',\n    LIBRARY_IMPORT_ZOTERO: 'harbour/export/twopointoh/zotero',\n    LIBRARY_IMPORT_MENDELEY: 'harbour/export/twopointoh/mendeley',\n    // returns credentials from both classic and 2.0 if they exist\n    LIBRARY_IMPORT_CREDENTIALS: 'harbour/user',\n    // store ADS information connected with ORCID here\n    ORCID_PREFERENCES: 'orcid/preferences',\n    ORCID_NAME: 'orcid/orcid-name',\n    // library endpoints\n    // can get info about all libraries, or list of bibcodes associated w/specific lib (libraries/id)\n    // post to /libraries/ to create a library\n    LIBRARIES: 'biblib/libraries',\n    LIBRARY_TRANSFER: 'biblib/transfer',\n    // can post, put, and delete changes to individual libs using this endpoint\n    DOCUMENTS: 'biblib/documents',\n    PERMISSIONS: 'biblib/permissions',\n    REFERENCE: 'reference/text',\n\n    /*\n     * this is used by the mixin 'user_change_rows' to set max allowed/default requested\n     */\n    _limits: {\n      // use the same name from discovery.config.js\n      ExportWidget: {\n        default: 500,\n        limit: 3000\n      },\n      Metrics: {\n        default: 7000,\n        limit: 7000\n      },\n      AuthorNetwork: {\n        default: 400,\n        limit: 1000\n      },\n      PaperNetwork: {\n        default: 400,\n        limit: 1000\n      },\n      ConceptCloud: {\n        default: 150,\n        limit: 150\n      },\n      BubbleChart: {\n        // default == limit\n        default: 1500\n      }\n    }\n  }; // add credential info\n  // doesn't require cross domain cookies\n\n  config._doesntNeedCredentials = [config.SEARCH, config.QTREE, config.BIGQUERY, config.EXPORT, config.SERVICE_AUTHOR_NETWORK, config.SERVICE_PAPER_NETWORK, config.SERVICE_WORDCLOUD, config.SERVICE_METRICS, config.RECOMMENDER, config.GRAPHICS, config.FEEDBACK];\n  return config;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_targets.js?");

/***/ }),

/***/ "./src/js/components/default_request.js":
/*!**********************************************!*\
  !*** ./src/js/components/default_request.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Created by rchyla on 3/28/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/multi_params */ \"./src/js/components/multi_params.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, ApiQuery, MultiParams) {\n  var basicCheck = function basicCheck(s) {\n    if (_.isString(s)) {\n      return true;\n    }\n\n    if (_.isArray(s)) {\n      var l = s.length;\n\n      for (var i = 0; i < l; i++) {\n        var x = s[i];\n\n        if (!(_.isString(x) || _.isNumber(x))) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  var allowedAttrs = {\n    query: function query(v) {\n      if (_.isUndefined(v)) {\n        return true;\n      }\n\n      return v instanceof ApiQuery;\n    },\n    target: basicCheck,\n    sender: basicCheck,\n    options: basicCheck\n  };\n  var checker = {\n    target: function target(s) {\n      if (s && s.substring(0, 1) !== '/') {\n        return '/' + s;\n      }\n    }\n  };\n  var Request = MultiParams.extend({\n    /**\n     * Internal method: we allow only certain keys\n     *\n     * @param attributes\n     * @param options\n     * @returns {boolean}\n     * @private\n     */\n    _validate: function _validate(attributes, options) {\n      _.forOwn(attributes, function (val, attr) {\n        var tempVal = attributes[attr];\n\n        if (!(attr in allowedAttrs)) {\n          throw new Error('Invalid attr: ' + attr);\n        }\n\n        if (!allowedAttrs[attr].call(allowedAttrs, tempVal)) {\n          throw new Error('Invalid value:key ' + attr + tempVal);\n        }\n      });\n\n      return true;\n    },\n\n    /**\n     * Modified version of the multi-valued set(); we do not insist\n     * on having the values in array\n     *\n     * @param key\n     * @param val\n     * @param options\n     * @returns {Request}\n     */\n    set: function set(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    // for requests, we use all components: path, query, hash\n    _checkParsed: function _checkParsed(attrs) {\n      if (_.isObject(attrs)) {\n        var ret = {};\n\n        if ('#query' in attrs && !_.isEmpty(attrs['#query'])) {\n          ret.query = new ApiQuery(attrs['#query']);\n        }\n\n        if ('#path' in attrs) {\n          ret.target = attrs['#path'][0];\n        }\n\n        if ('#hash' in attrs) {\n          _.extend(ret, _.each(attrs['#hash'], function (val, key, obj) {\n            if (val.length == 1) {\n              obj[key] = val[0];\n            }\n          }));\n        }\n\n        return ret;\n      }\n\n      return attrs;\n    },\n\n    /*\n     * Return the url string encoding all parameters that made\n     * this request. The parameters will be sorted alphabetically\n     * by their keys and URL encoded so that they can be used\n     * in requests.\n     */\n    url: function url(whatToSort) {\n      if (!whatToSort) {\n        whatToSort = this.attributes;\n      }\n\n      var target = whatToSort.target;\n      var url = target ? _.isArray(target) ? target.join('/') : target : '';\n\n      if ('query' in whatToSort) {\n        url += '?' + whatToSort.query.url();\n      }\n\n      if ('sender' in whatToSort) {\n        url += '#' + MultiParams.prototype.url.call(this, {\n          sender: whatToSort.sender\n        });\n      }\n\n      return url;\n    },\n\n    /**\n     * Re-constructs the query from the url string, returns the json attributes;\n     * cannot be used it the instance is locked\n     *\n     * @param query (String)\n     * @returns {Model}\n     */\n    load: function load(query) {\n      return MultiParams.prototype.load.call(this, query.indexOf('?') > -1 ? query : query + '?');\n    }\n  });\n  return Request;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/default_request.js?");

/***/ }),

/***/ "./src/js/components/facade.js":
/*!*************************************!*\
  !*** ./src/js/components/facade.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/16/14. inspiration: http://jsfiddle.net/pajtai/GD5qR/35/\n */\n\n/*\n * // Interface\n *  var remoteInterface = {\n *    on: 'turn on'\n *  };\n *  // Implementation\n *  var htmlRemote = {\n *    on: function() { console.log(\"remote on\"); return this; }\n *  };\n *  // Protecting the implementation\n *  var htmlInterface = new Facade(remoteInterface, htmlRemote);\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Facade) {\n  // The Facade encapsulates objectIn according to the description\n  // The exposed facade is guaranteed to have exactly the functions described in description.\n  var Facade = function Facade(description, objectIn) {\n    var facade; // TODO: add enforce of \"new\"\n\n    facade = {};\n    this.mixIn(description, objectIn, facade); // TODO: check that \"mixIn\" is not taken\n\n    facade.mixIn = this.mixIn;\n    return facade;\n  };\n\n  Facade.prototype.mixIn = function (description, objectIn, facade) {\n    var property;\n    var propertyValue;\n    facade = facade || this;\n\n    for (property in description) {\n      propertyValue = description[property];\n\n      if (property in objectIn) {\n        var p = objectIn[property];\n\n        if (typeof propertyValue === 'function') {\n          // redefining the method\n          facade[property] = _.bind(propertyValue, objectIn);\n        } else if (typeof p === 'function') {\n          // exposing the method\n          facade[property] = _.bind(p, objectIn);\n        } else if (_.isUndefined(p)) {// pass\n        } else if (_.isString(p) || _.isNumber(p) || _.isBoolean(p) || _.isDate(p) || _.isNull(p) || _.isRegExp(p)) {\n          // build getter method\n          facade['get' + property.substring(0, 1).toUpperCase() + property.substring(1)] = _.bind(function () {\n            return this.ctx[this.name];\n          }, {\n            ctx: objectIn,\n            name: property\n          });\n          facade[property] = p; // copy the value (it is immutable anyways)\n        } else if (p.hasOwnProperty('__facade__') && p.__facade__) {\n          // exposing internal facade\n          facade[property] = p;\n        } else if (_.isObject(p) && 'getHardenedInstance' in p) {\n          // builds a facade\n          facade[property] = p.getHardenedInstance();\n        } else {\n          throw new Error(\"Sorry, you can't wrap '\" + property + \"': \" + p);\n        }\n      } else if (typeof propertyValue === 'function') {\n        facade[property] = _.bind(propertyValue, objectIn);\n      } else {\n        throw new Error('Unknown key: ' + property + '(' + propertyValue + ')');\n      }\n    }\n\n    if (objectIn) {\n      // .name is not supported in IE\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n      facade.__facade__ = Boolean(objectIn.constructor ? objectIn.constructor.name ? objectIn.constructor.name : true : true);\n    } else {\n      facade.__facade__ = true;\n    } // TODO:rca - shall we use?\n    // if (Object.freeze)\n    //  facade = Object.freeze(facade);\n\n\n    return facade;\n  };\n\n  return Facade;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/facade.js?");

/***/ }),

/***/ "./src/js/components/multi_params.js":
/*!*******************************************!*\
  !*** ./src/js/components/multi_params.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n multi_params is a generic class to store any parameters;\n it is backed by BB.Model and has all the functionality\n the values are always stored as an array of values; so\n even if you try to set strings, you will always have\n list of strings\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! jquery */ \"./src/libs/jquery.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _, $) {\n  var Model = Backbone.Model.extend({\n    locked: false,\n    _checkLock: function _checkLock() {\n      if (this.locked === true) {\n        throw Error('Object locked for modifications');\n      }\n    },\n    isLocked: function isLocked() {\n      return this.locked;\n    },\n    lock: function lock() {\n      this.locked = true;\n    },\n    unlock: function unlock() {\n      this.locked = false;\n    },\n    clone: function clone() {\n      if (this.isLocked()) {\n        var c = new this.constructor(this.attributes);\n        c.lock();\n        return c;\n      }\n\n      return new this.constructor(this.attributes);\n    },\n    hasVal: function hasVal(key) {\n      return !_.isEmpty(this.get(key));\n    },\n    // we allow only strings and numbers; instead of sending\n    // signal we throw a direct error\n    _validate: function _validate(attributes, options) {\n      // check we have only numbers and/or finite numbers\n      for (var attr in attributes) {\n        if (!_.isString(attr)) {\n          throw new Error('Keys must be strings, not: ' + attr);\n        } // remove empty strings\n\n\n        var tempVal = attributes[attr];\n        tempVal = _.without(_.flatten(tempVal), '', false, null, undefined, NaN);\n\n        if (!_.isArray(tempVal)) {\n          throw new Error('Values were not converted to an Array');\n        }\n\n        if (_.isEmpty(tempVal) && options.unset !== true) {\n          throw new Error('Empty values not allowed');\n        }\n\n        if (!_.every(tempVal, function (v) {\n          return _.isString(v) || _.isNumber(v) && !_.isNaN(v);\n        })) {\n          throw new Error('Invalid value (not a string or number): ' + tempVal);\n        }\n\n        attributes[attr] = tempVal;\n      }\n\n      return true;\n    },\n    // Every value is going to be multi-valued by default\n    // in this way we can treat all objects in the same way\n    set: function set(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      for (var attr in attrs) {\n        var tempVal = attrs[attr]; // convert to array if necessary\n\n        if (!_.isArray(tempVal)) {\n          attrs[attr] = _.flatten([tempVal]);\n        }\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    unset: function unset() {\n      this._checkLock();\n\n      Backbone.Model.prototype.unset.apply(this, arguments);\n    },\n    // adds values to existing (like set, but keeps the old vals)\n    add: function add(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      for (var attr in attrs) {\n        var tempVal = attrs[attr]; // convert to array if necessary\n\n        if (!_.isArray(tempVal)) {\n          tempVal = _.flatten([tempVal]);\n        }\n\n        if (this.has(attr)) {\n          tempVal = _.clone(this.get(attr)).concat(tempVal);\n        }\n\n        attrs[attr] = tempVal;\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    // synchronization is disabled\n    sync: function sync() {\n      throw Error('MultiParams cannot be saved to server');\n    },\n\n    /*\n     * Return the url string encoding all parameters that made\n     * this query. The parameters will be sorted alphabetically\n     * by their keys and URL encoded so that they can be used\n     * in requests.\n     */\n    url: function url(whatToSort) {\n      if (!whatToSort) {\n        whatToSort = this.attributes;\n      } // sort keys alphabetically\n\n\n      var sorted = _.pairs(whatToSort).sort(function (a, b) {\n        return a[0] > b[0] ? 1 : a[0] < b[0] ? -1 : 0;\n      }); // June1:rca - I need to preserve order of values (becuaes of the query modifications/updates) the logic\n      // just requires us to be careful and we need order to be preserved when the query is cloned\n      // also sort values\n      // var s = {};\n      // sorted.map(function(item) { s[item[0]] = (_.isArray(item[1]) ? item[1].sort() : item[1]) });\n      // we have to double encode certain elements\n      // sorted = _.map(sorted, function(pair) { return [pair[0], _.map(pair[1], function(v) {return (v.indexOf && v.indexOf('=') > -1) ? encodeURIComponent(v) : v })]});\n      // use traditional encoding\n      // use %20 instead of + (url encoding instead of form encoding)\n\n\n      var encoded = $.param(_.object(sorted), true);\n      encoded = encoded.replace(/\\+/g, '%20'); // Replace funky unicode quotes with normal ones\n\n      encoded = encoded.replace(/%E2%80%9[ECD]/g, '%22');\n      return encoded;\n    },\n\n    /**\n     * Parses string (urlparams) and returns it as an object\n     * @param resp\n     * @param options\n     * @returns {*}\n     */\n    parse: function parse(resp, options) {\n      if (_.isString(resp)) {\n        var attrs = {};\n        resp = decodeURI(resp);\n\n        if (resp.indexOf('?') > -1) {\n          attrs['#path'] = [resp.slice(0, resp.indexOf('?'))];\n          resp = resp.slice(resp.indexOf('?') + 1);\n        }\n\n        if (resp.indexOf('#') > -1) {\n          attrs['#hash'] = this._parse(resp.slice(resp.indexOf('#') + 1));\n          resp = resp.slice(0, resp.indexOf('#'));\n        }\n\n        attrs['#query'] = this._parse(resp);\n        return this._checkParsed(attrs);\n      }\n\n      return this._checkParsed(resp); // else return resp object\n    },\n    _parse: function _parse(resp) {\n      var attrs = {};\n      var hash;\n\n      if (!resp.trim()) {\n        return attrs;\n      }\n\n      var hashes = resp.slice(resp.indexOf('?') + 1).split('&'); // resp = decodeURIComponent(resp);\n\n      var key;\n      var value;\n\n      for (var i = 0; i < hashes.length; i++) {\n        hash = hashes[i].split('=');\n        key = decodeURIComponent(hash[0].split('+').join(' ')); // optimized: .replace(/\\+/g, \" \")\n\n        var vall = hash[1];\n\n        if (hash.length > 2) {\n          hash.shift();\n          vall = hash.join('=');\n        } // replace literal '%' with code and '+' become literal spaces\n\n\n        value = decodeURIComponent(vall.replace(/%(?!\\d|[ABCDEF]+)/gi, '%25').split('+').join(' '));\n\n        if (attrs[key] !== undefined) {\n          attrs[key].push(value);\n        } else {\n          attrs[key] = [value];\n        }\n      }\n\n      return attrs;\n    },\n    // default behaviour is just to keep the query parameters\n    // after the string was parsed, you can override it to suit other needs\n    _checkParsed: function _checkParsed(attrs) {\n      if (_.isObject(attrs)) {\n        if ('#query' in attrs) {\n          return attrs['#query'];\n        }\n      }\n\n      return attrs;\n    },\n\n    /**\n     * Re-constructs the query from the url string, returns the json attributes;\n     * cannot be used it the instance is locked\n     *\n     * @param query (String)\n     * @returns {Model}\n     */\n    load: function load(query) {\n      this._checkLock();\n\n      var vals = this.parse(query);\n      this.clear();\n      this.set(vals);\n      return this;\n    }\n  });\n  return Model;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/multi_params.js?");

/***/ }),

/***/ "./src/js/components/pubsub_events.js":
/*!********************************************!*\
  !*** ./src/js/components/pubsub_events.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/30/14.\n */\n\n/**\n * Catalogue of PubSub events; we assume this:\n *\n *  - FC = the component lives in the 'Forbidden City'\n *         inside Application, typically this is a PubSub or Api, Mediator\n *         or any component with elevated access\n *\n *  - OC = Outer City: the suburbs of the application; these are typically\n *         UI components (behind the wall), untrusted citizens of the\n *         BumbleBee state\n *\n *  WARNING: do not use spaces; events with spaces are considered to be\n *        multiple events! (e.g. '[PubSub] New-Query' will be two events)\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var PubSubEvents = {\n    /**\n     * Usually called by OC's as a first step in the query processing.\n     * It means: 'user did something', we need to start reacting. The OC\n     * will build a new ApiQuery and send it together with this event\n     */\n    START_SEARCH: '[PubSub]-New-Query',\n\n    /**\n     * Called by FC's (usually: Mediator) - this is a signal to *all* OC's\n     * they should receive ApiQuery object, compare it against their\n     * own query; find diff and create a new ApiRequest (asking for a data)\n     * and send that back\n     */\n    INVITING_REQUEST: '[PubSub]-Inviting-Request',\n\n    /**\n     * Will be called by OC's, this is response to ApiQuery input.\n     */\n    DELIVERING_REQUEST: '[PubSub]-New-Request',\n\n    /**\n     * Will be called by OC's, this is one-time forget action (outside of the\n     * the search cycle); use this for any query that needs to be executed\n     * and not be tracked by search cycle\n     */\n    EXECUTE_REQUEST: '[PubSub]-Execute-Request',\n\n    /**\n     * Called from the router, the QID will be passed; the query needs to be\n     * loaded and executed\n     */\n    EXECUTE_STORED_QUERY: '[PubSub]-Execute-Stored-Query',\n\n    /**\n     * Published by FC's - typically Mediator - when a response has been retrieved\n     * for a given ApiRequest.\n     *\n     * OC's should subscribe to this event when they want to receive data\n     * from the treasury (api)\n     *\n     *  - input: ApiRequest\n     *  - output: ApiResponse\n     */\n    DELIVERING_RESPONSE: '[PubSub]-New-Response',\n\n    /**\n     * The walls of the FC are being closed; and no new requests will be served\n     */\n    CLOSING_GATES: '[PubSub]-Closing',\n\n    /**\n     * PubSub will not receive any requests any more\n     */\n    CLOSED_FOR_BUSINESS: '[PubSub]-Closed',\n\n    /**\n     * ForbiddenCity is about to receive requests\n     */\n    OPENING_GATES: '[PubSub]-Opening',\n\n    /**\n     * Called after PubSub became ready - it is fully operational\n     */\n    OPEN_FOR_BUSINESS: '[PubSub]-Ready',\n\n    /**\n     *  Set of error warnings issues by PubSub - or by some other FC's - to\n     *  deal with congestion or other problems\n     */\n    SMALL_FIRE: '[PubSub]-Problem',\n    BIG_FIRE: '[PubSub]-Big-Problem',\n    CITY_BURNING: '[PubSub]-Disaster',\n\n    /**\n     * A message containing feedback from the FC; traveling towards OC\n     * The feedback will be instance of ApiFeedback\n     */\n    FEEDBACK: '[FC]-FeedBack',\n\n    /**\n     * A message from the router requesting showing citizens of the\n     * city\n     */\n    DISPLAY_DOCUMENTS: '[Router]-Display-Documents',\n    DISPLAY_DOCUMENTS_DETAILS: '[Router]-Display-Documents-Details',\n\n    /**\n     * Used by OC to request parsed query tree - to check a query\n     * for example\n     */\n    GET_QTREE: '[FC]-GetQTree',\n    NAVIGATE: '[Router]-Navigate-With-Trigger',\n\n    /*\n     * so navigator can notify interested widgets about a change\n     * from search page to user page, for instance-- navigator cannot\n     * to this since it listens to many events including widget-show events\n     * */\n    PAGE_CHANGE: '[Navigator]Page-Changed',\n\n    /* for custom widget-to-widget events */\n    CUSTOM_EVENT: '[PubSub]-Custom-Event',\n    ARIA_ANNOUNCEMENT: '[PubSub]-Aria-Announcement',\n\n    /* anything to do with changing the state of the user, including session events */\n    USER_ANNOUNCEMENT: '[PubSub]-User-Announcement',\n\n    /**\n     * A message/action that should be displayed to the user (on prominent)\n     * place\n     */\n    ALERT: '[Alert]-Message',\n    ORCID_ANNOUNCEMENT: '[PubSub]-Orcid-Announcement',\n\n    /**\n     * Happens during the main cycle of the application birth\n     *  LOADED = when all components were successfuly loaded\n     *  BOOTSTRAPPED = + when all dynamic config was loaded\n     *  STARTING = + right before the router and history objects start()\n     *  STARTED = app is alive and handling requests\n     */\n    APP_LOADED: '[App]-Application-Loaded',\n    APP_BOOTSTRAPPED: '[App]-Application-Bootstrapped',\n    APP_STARTING: '[App]-Application-Starting',\n    APP_STARTED: '[App]-Application-Started',\n    APP_EXIT: '[App]-Exit',\n\n    /**\n     * Is triggered when user selects/deselects records\n     */\n    PAPER_SELECTION: '[User]-Paper-Selection',\n    // instead of toggling, adds all papers\n    BULK_PAPER_SELECTION: '[User]-Bulk-Paper-Selection',\n\n    /*\n     * is triggered by app storage itself when list of selected papers changes\n     * */\n    STORAGE_PAPER_UPDATE: '[User]-Paper-Update',\n    LIBRARY_CHANGE: '[PubSub]-Library-Change'\n  };\n  return PubSubEvents;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/pubsub_events.js?");

/***/ }),

/***/ "./src/js/components/pubsub_key.js":
/*!*****************************************!*\
  !*** ./src/js/components/pubsub_key.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/14/14.\n */\n\n/*\n * A simple, yet important, class - every subscriber\n * to the PubSub must contain one key. This class\n * should be instantiated in a safe manner. ie.\n *\n * PubSubKey.newInstance({creator: this});\n *\n * But beware that as long as the subscriber is alive\n * reference to the creator will be saved inside\n * the key! So choose carefully whether you use this\n * functionality\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_) {\n  var PubSubKey = function PubSubKey(options) {\n    _.extend(this, options);\n  };\n\n  _.extend(PubSubKey, {\n    /*\n     * Creates a new Instances of the PubSubKey\n     * with a storage that cannot be changed.\n     * To double sign the key, you can pass\n     * an object that identifies creator of the\n     * key and test identity, eg.\n     *\n     * var creator = {};\n     * var k = PubSubKey(creator);\n     * k.getCreator() === k;\n     *\n     */\n    newInstance: function newInstance(options) {\n      var priv = {\n        id: _.has(options, 'id') ? options.id : _.uniqueId(':psk'),\n        creator: _.has(options, 'creator') ? options.creator : null\n      };\n      return new PubSubKey({\n        getId: function getId() {\n          return priv.id;\n        },\n        getCreator: function getCreator() {\n          return priv.creator;\n        }\n      });\n    }\n  });\n\n  return PubSubKey;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/pubsub_key.js?");

/***/ }),

/***/ "./src/js/components/query_validator.js":
/*!**********************************************!*\
  !*** ./src/js/components/query_validator.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_) {\n  /**\n   * Validator object\n   * provides value checking\n   * @param match\n   * @param opts\n   * @constructor\n   */\n  function Validator(match, opts) {\n    var matcher = new RegExp(match, opts);\n    return function test(str) {\n      return matcher.test(str) ? null : str;\n    };\n  }\n  /**\n   * QueryToken object for holding the field and value\n   * @param field\n   * @param value\n   * @param token\n   * @constructor\n   */\n\n\n  function QueryToken(field, value, token) {\n    this.field = field;\n    this.value = value;\n    this.token = token;\n  }\n  /**\n   * Parse and validate queries\n   * @constructor\n   */\n\n\n  function QueryValidator() {\n    /**\n     * Parse the query into new validator objects\n     * @param q\n     * @returns {Array}\n     */\n    var parseTokens = function parseTokens(q) {\n      var splitter = new RegExp(/:/);\n      var tokens = q.split(/\\s+\\b/);\n      var parsedTokens = [];\n\n      for (var j = 0; j < tokens.length; j++) {\n        var subTokens = tokens[j].split(splitter);\n\n        if (subTokens.length !== 2) {\n          // Unable to split or nested fields, either way continue on\n          continue;\n        }\n\n        parsedTokens.push(new QueryToken(subTokens[0], subTokens[1], tokens[j]));\n      }\n\n      return parsedTokens;\n    };\n    /**\n     * Composed function finisher, returns boolean equivalent of result\n     * @param res\n     * @returns {boolean}\n     */\n\n\n    var completeValidation = function completeValidation(res) {\n      return res !== null;\n    };\n    /**\n     * Create composed function from validators\n     * return the boolean result\n     * @param validators\n     * @param tokens\n     * @returns {Array}\n     */\n\n\n    var test = function test(validators, tokens) {\n      var tests = [];\n\n      for (var i in tokens) {\n        var res = _.compose.apply(_, validators)(tokens[i].value);\n\n        if (!res) {\n          tests.push({\n            token: tokens[i].token,\n            result: res\n          });\n        }\n      }\n\n      return tests;\n    };\n    /**\n     * Validate the query string\n     * @param apiQuery\n     * @returns {object}\n     */\n\n\n    this.validate = function (apiQuery) {\n      var output = {\n        result: true\n      }; // Validators - This should match things you DON'T want in the query\n      // any confirmed match will make query invalid\n\n      var validators = [completeValidation, new Validator(/^\"\"$/), // matches -> `foo:\"\"`\n      new Validator(/^\\(\\)$/), // matches -> `foo:()`\n      new Validator(/^\\(\\^\\)$/), // matches -> `foo:(^)`\n      new Validator(/^\\(\"\"\\)$/), // matches -> `foo:(\"^\")`\n      new Validator(/^\\(\"\\^\"\\)$/), // matches -> `foo:(\"^\")`\n      new Validator(/^\"\\^\"$/) // matches -> `foo:\"^\"`\n      ]; // Attempt to parse the query string to tokens\n\n      try {\n        var q = apiQuery.get('q').join(' ').trim();\n\n        if (!q.length) {\n          // query is empty string, continue on\n          return output;\n        }\n\n        var parsedTokens = parseTokens(q);\n      } catch (e) {\n        // parsing error, allow it to continue on\n        return output;\n      }\n\n      var tests = test(validators, parsedTokens);\n      output.result = _.every(_.pluck(tests, 'result'));\n\n      if (tests.length) {\n        output.tests = tests;\n      }\n\n      return output;\n    };\n  }\n\n  return QueryValidator;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/query_validator.js?");

/***/ }),

/***/ "./src/js/components/solr_params.js":
/*!******************************************!*\
  !*** ./src/js/components/solr_params.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\nSubclass of the multi-param with a functionality specific for\nSOLR queries. Do not use this class directly inside your app!\nInstead, import 'api_query' and configure it properly\n\n * <p>For a list of possible parameters, please consult the links below.</p>\n *\n * @see http://wiki.apache.org/solr/CoreQueryParameters\n * @see http://wiki.apache.org/solr/CommonQueryParameters\n * @see http://wiki.apache.org/solr/SimpleFacetParameters\n * @see http://wiki.apache.org/solr/HighlightingParameters\n * @see http://wiki.apache.org/solr/MoreLikeThis\n * @see http://wiki.apache.org/solr/SpellCheckComponent\n * @see http://wiki.apache.org/solr/StatsComponent\n * @see http://wiki.apache.org/solr/TermsComponent\n * @see http://wiki.apache.org/solr/TermVectorComponent\n * @see http://wiki.apache.org/solr/LocalParams\n *\n * @param properties A map of fields to set. Refer to the list of public fields.\n * @class ParameterStore\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! js/components/multi_params */ \"./src/js/components/multi_params.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! jquery */ \"./src/libs/jquery.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (MultiParams, Backbone, _, $) {\n  var SolrParams = MultiParams.extend({\n    fieldsToConcatenate: [],\n    defaultOperator: ' ',\n    fieldProcessors: {\n      '*': function _(vals, self) {\n        return [vals.join(self.defaultOperator)];\n      }\n    },\n    initialize: function initialize(attributes, options) {\n      if (options) {\n        _.extend(this, _.pick(options, ['fieldsToConcatenate', 'defaultOperator', 'fieldProcessors']));\n      }\n    },\n    url: function url(resp, options) {\n      // first massage the fields, but do not touch the original values\n      // lodash has a parameter isDeep that can be set to true, but\n      // for compatibility reasons with underscore, lets' not use it\n      // the values should always be only one level deep\n      var values = _.clone(this.attributes);\n\n      var l = this.fieldsToConcatenate.length;\n      var k = '';\n\n      for (var i = 0; i < l; i++) {\n        k = this.fieldsToConcatenate[i];\n\n        if (this.has(k)) {\n          if (this.fieldProcessors[k]) {\n            values[k] = this.fieldProcessors[k](this.get(k), this);\n          } else {\n            values[k] = this.fieldProcessors['*'](this.get(k), this);\n          }\n        }\n      } // then call the default implementation of the url handling\n\n\n      return MultiParams.prototype.url.call(this, values);\n    }\n  });\n  return SolrParams;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/solr_params.js?");

/***/ }),

/***/ "./src/js/mixins/dependon.js":
/*!***********************************!*\
  !*** ./src/js/mixins/dependon.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/13/14.\n */\n\n/*\n * This module contains a set of utilities that can be added to classes\n * to give them certain functionality\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/pubsub_events */ \"./src/js/components/pubsub_events.js\"), __webpack_require__(/*! js/components/pubsub_key */ \"./src/js/components/pubsub_key.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, PubSubEvents, PubSubKey) {\n  var Mixin = {\n    /*\n     * BeeHive is the object that allows modules to get access to objects\n     * of the application (but we make sure these objects are protected\n     * and only application can set/change them). This mixin gives objects\n     * functions to query 'BeeHive'\n     */\n    BeeHive: {\n      // called by parents (app) to give modules access\n      setBeeHive: function setBeeHive(brundibar) {\n        if (_.isEmpty(brundibar)) throw new Error('Huh? Empty Beehive? Trying to be funny?');\n        this.__beehive = brundibar;\n      },\n      getBeeHive: function getBeeHive() {\n        if (!this.hasBeeHive()) throw new Error('The BeeHive is inactivate (or dead :<})');\n        return this.__beehive;\n      },\n      hasBeeHive: function hasBeeHive() {\n        if (this.__beehive && (this.__beehive.active || this.__beehive.__facade__ && this.__beehive.getActive())) {\n          return true;\n        }\n\n        return false;\n      },\n\n      /**\n       * Method which returns a masked instance of PubSub (unless the PubSub\n       * is already a hardened instance; which carries its own key)\n       *\n       * You can call pubsub.publish() without having to supply the pubsub key\n       * (which is what most controllers want to do; there are only some\n       * exceptions to this rule; ie. query-mediator). If you need to get\n       * access to the full PubSub (and you have it inside BeeHive) then do\n       * this.getBeeHive().getService('PubSub')\n       */\n      getPubSub: function getPubSub() {\n        if (!this.hasBeeHive()) throw new Error('The BeeHive is inactive (or dead >:})');\n        if (!this.__ctx) this.__ctx = {};\n        if (this.__ctx.pubsub) return this.__ctx.pubsub;\n\n        var pubsub = this.__beehive.getService('PubSub');\n\n        if (pubsub && pubsub.__facade__) return pubsub; // build a unique key for this instance\n\n        this.__ctx.pubsub = {\n          _key: pubsub.getPubSubKey(),\n          _exec: function _exec(name, args) {\n            args = _.toArray(args);\n            if (args[0] instanceof PubSubKey) throw Error('You have given us a PubSub key, this.publish() method does not need it.');\n            args.unshift(this._key);\n            pubsub[name].apply(pubsub, args);\n          },\n          publish: function publish() {\n            this._exec('publish', arguments);\n          },\n          subscribe: function subscribe() {\n            this._exec('subscribe', arguments);\n          },\n          subscribeOnce: function subscribeOnce() {\n            this._exec('subscribeOnce', arguments);\n          },\n          unsubscribe: function unsubscribe() {\n            this._exec('unsubscribe', arguments);\n          },\n          getCurrentPubSubKey: function getCurrentPubSubKey() {\n            return this._key;\n          }\n        };\n\n        _.extend(this.__ctx.pubsub, PubSubEvents);\n\n        return this.__ctx.pubsub;\n      },\n      hasPubSub: function hasPubSub() {\n        if (this.hasBeeHive()) return _.isObject(this.__beehive.getService('PubSub'));\n        return false;\n      }\n    },\n    App: {\n      setApp: function setApp(app) {\n        if (_.isUndefined(app)) throw new Error('App object cannot be empty');\n        this.__app = app;\n      },\n      getApp: function getApp() {\n        return this.__app;\n      },\n      hasApp: function hasApp() {\n        return !_.isEmpty(this.__app);\n      }\n    }\n  };\n  return Mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/dependon.js?");

/***/ }),

/***/ "./src/js/mixins/formatter.js":
/*!************************************!*\
  !*** ./src/js/mixins/formatter.js ***!
  \************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var f = {};\n  /*\n   * takes a number or string, returns a string\n   * */\n\n  f.formatNum = function (num) {\n    var withCommas = [];\n    num += '';\n    var parts = num.split('.');\n    var extra = '';\n\n    if (parts.length === 2) {\n      num = parts[0];\n      extra = '.' + parts[1];\n    }\n\n    if (num.length < 4) {\n      return num + extra;\n    }\n\n    num = num.split('').reverse();\n\n    _.each(num, function (n, i) {\n      withCommas.unshift(n);\n\n      if ((i + 1) % 3 === 0 && i !== num.length - 1) {\n        withCommas.unshift(',');\n      }\n    });\n\n    return withCommas.join('') + extra;\n  };\n\n  return f;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/formatter.js?");

/***/ }),

/***/ "./src/js/mixins/hardened.js":
/*!***********************************!*\
  !*** ./src/js/mixins/hardened.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/18/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Facade) {\n  var Mixin = {\n    /*\n     * Creates a hardened instance of itself, it uses\n     * interface description from 'hardenedInterface'\n     * Implementations need to populate 'hardenedInterface'\n     * with list of properties and methods that should be exposed\n     * through the Facade\n     */\n    _getHardenedInstance: function _getHardenedInstance(iface, objectIn) {\n      if (!('hardenedInterface' in this) && !iface) {\n        throw Error('Error: this.hardenedInterface is not defined');\n      }\n\n      return new Facade(iface || ('hardenedInterface' in this ? this.hardenedInterface : {}), objectIn);\n    },\n    getHardenedInstance: function getHardenedInstance(iface) {\n      return this._getHardenedInstance(iface, this);\n    }\n  };\n  return Mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/hardened.js?");

/***/ }),

/***/ "./src/js/mixins/widget_mixin_method.js":
/*!**********************************************!*\
  !*** ./src/js/mixins/widget_mixin_method.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! js/mixins/widget_utility */ \"./src/js/mixins/widget_utility.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Utils) {\n  var mixin = function mixin(from, methods) {\n    var to = this.prototype; // we add those methods which exists on `from` but not on `to` to the latter\n\n    _.extend(from, to); // … and we do the same for events\n\n\n    _.extend(from.events, to.events);\n\n    _.each(Array.prototype.slice.call(arguments, 1), function (m) {\n      Utils.extendMethod(to, from, m);\n    });\n  };\n\n  return mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_mixin_method.js?");

/***/ }),

/***/ "./src/js/mixins/widget_state_manager.js":
/*!***********************************************!*\
  !*** ./src/js/mixins/widget_state_manager.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/api_feedback */ \"./src/js/components/api_feedback.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, ApiFeedback) {\n  /**\n   * Abstract error pubsub-like manager.  Allows for hooks to be applied that\n   * match API feedback codes\n   *\n   * @constructor\n   */\n  var ErrorHandlerManager = function ErrorHandlerManager() {\n    this.handlers = {};\n    /**\n     * Attach a new handler to an API feedback code\n     *\n     * @param {Number} code - feedback code\n     * @param {function} cb - callback function\n     */\n\n    this.on = function (code, cb) {\n      this.handlers[code].push(cb);\n    };\n    /**\n     * Remove handler by passing in the callback function\n     *\n     * @param {function} cb - callback function\n     */\n\n\n    this.off = function (cb) {\n      _.forEach(this.handlers, function (v, k) {\n        var idx = v.indexOf(cb);\n\n        if (idx > -1) {\n          v.splice(idx, 1);\n        }\n      });\n    };\n    /**\n     * Fire off the callbacks for a particular code\n     *\n     * @param {Number} code - feedback code\n     * @param {Array} args - arguments to pass to the callback\n     * @param {object} ctx - callback's `this` property\n     */\n\n\n    this.fire = function (code, args, ctx) {\n      _.forEach(this.handlers[code], function (cb) {\n        cb.apply(ctx, args);\n      });\n    };\n\n    _.reduce(ApiFeedback.CODES, function (res, code) {\n      res[code] = [];\n      return res;\n    }, this.handlers);\n  };\n  /*\n    Widget state manager mixin\n     This mixin will allow widgets to call lifecycle updates which can then have\n    handlers attached.  The mixin can also serve as a way for page managers to\n    react to widget status updates, since certain widgets should be\n    handled differently depending on their type and importance.\n     The typical way this is used is to call `activateWidget` during the activate\n    call on the widget itself.  Then call the various state updates when the widget\n    is performing actions.\n     The default states are: ready, loading, idle, errored\n     Widgets can attach handlers to the various status updates (i.e. onReady, onLoading, etc.)\n     note: during the activation, the widget's pubsubkey is captured and is used\n    to identify the appropriate feedback.  This way the handlers aren't called for\n    events the widget doesn't care about.\n   */\n\n\n  var WidgetStateManagerMixin = {\n    STATES: {\n      LOADING: 'loading',\n      ERRORED: 'errored',\n      IDLE: 'idle',\n      READY: 'ready'\n    },\n\n    /**\n     * Creates a new instance of the handlerManager and subscribes to the\n     * api feedback calls.  It also sets the first state update.\n     */\n    activateWidget: function activateWidget() {\n      this.__widgetHandlerManager = new ErrorHandlerManager();\n      var pubsub = this.getPubSub();\n      pubsub.subscribe(pubsub.FEEDBACK, _.bind(this.__handleFeedback, this));\n      this.updateState('ready');\n    },\n\n    /**\n     * Upon new feedback from the API, this function will grab the current\n     * pubSubKey Id for this widget and compare it to the one listed on the\n     * feedback object.  If they match, then the handlers are fired off for that\n     * code.\n     *\n     * @param {ApiFeedback} feedback\n     * @param {PubSubKey} pubSubKey\n     * @private\n     */\n    __handleFeedback: function __handleFeedback(feedback, pubSubKey) {\n      var id = this.getPubSub().getCurrentPubSubKey().getId();\n\n      if (id === pubSubKey.getId()) {\n        this.__widgetHandlerManager.fire(feedback.code, arguments, this);\n      }\n    },\n\n    /**\n     * Attaches a new handler onto an API code\n     *\n     * @param {Number} code - feedback code\n     * @param {function} handler - handler function\n     */\n    attachHandler: function attachHandler(code, handler) {\n      try {\n        this.__widgetHandlerManager.on(code, handler);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n\n    /**\n     * Attaches a general handler to all api feedback codes\n     *\n     * Includes the positive error codes and api request failures\n     *\n     * @param {function} handler - handler function\n     */\n    attachGeneralHandler: function attachGeneralHandler(handler) {\n      _.forEach(ApiFeedback.CODES, _.bind(function (code) {\n        if (code > 0 || code === ApiFeedback.CODES.API_REQUEST_ERROR) {\n          this.attachHandler(code, handler);\n        }\n      }, this));\n    },\n\n    /**\n     * Detaches a particular handler from all codes\n     *\n     * @param cb\n     */\n    detachHandler: function detachHandler(cb) {\n      this.__widgetHandlerManager.off(cb);\n    },\n\n    /**\n     * Called when the state changes to 'ready'\n     */\n    onReady: _.noop,\n\n    /**\n     * Called when the state changes to 'loading'\n     */\n    onLoading: _.noop,\n\n    /**\n     * Called when the state changes to 'idle'\n     */\n    onIdle: _.noop,\n\n    /**\n     * Called when the state changes to 'errored'\n     */\n    onErrored: _.noop,\n\n    /**\n     * Called on all state changes\n     */\n    onStateChange: _.noop,\n\n    /**\n     * Called by widgets to update their own state.  This will update the current\n     * state and also call any handlers.\n     *\n     * @param {string} state - the state to update to\n     */\n    updateState: function updateState(state) {\n      if (!state || !_.isString(state) || state === this.__state) {\n        // do nothing\n        return;\n      }\n\n      var prev = this.__state;\n      this.__state = state;\n\n      this.__fireStateHandler();\n\n      this.onStateChange.call(this, state, prev);\n    },\n\n    /**\n     * Get the current state value\n     */\n    getState: function getState() {\n      return this.__state;\n    },\n\n    /**\n     * This method looks at the current state and if a matching handler is\n     * provided, it will call it accordingly.\n     *\n     * @private\n     */\n    __fireStateHandler: function __fireStateHandler() {\n      var handlers = {};\n      handlers.ready = this.onReady;\n      handlers.loading = this.onLoading;\n      handlers.idle = this.onIdle;\n      handlers.errored = this.onErrored;\n      handlers[this.__state] && handlers[this.__state].call(this, this);\n    }\n  };\n  return WidgetStateManagerMixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_state_manager.js?");

/***/ }),

/***/ "./src/js/mixins/widget_utility.js":
/*!*****************************************!*\
  !*** ./src/js/mixins/widget_utility.js ***!
  \*****************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var Utils = {}; // Helper method to extend an already existing method\n\n  Utils.extendMethod = function (to, from, methodName) {\n    // if the method is defined on from ...\n    if (!_.isUndefined(from[methodName])) {\n      var old = to[methodName]; // ... we create a new function on to\n\n      to[methodName] = function () {\n        // wherein we first call the method which exists on `to`\n        var oldReturn = old.apply(this, arguments); // and then call the method on `from`\n\n        from[methodName].apply(this, arguments); // and then return the expected result,\n        // i.e. what the method on `to` returns\n\n        return oldReturn;\n      };\n    }\n  };\n\n  return Utils;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_utility.js?");

/***/ }),

/***/ "./src/js/widgets/base/base_widget.js":
/*!********************************************!*\
  !*** ./src/js/widgets/base/base_widget.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! marionette */ \"./src/libs/backbone.marionette.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/api_request */ \"./src/js/components/api_request.js\"), __webpack_require__(/*! js/mixins/widget_mixin_method */ \"./src/js/mixins/widget_mixin_method.js\"), __webpack_require__(/*! js/components/api_targets */ \"./src/js/components/api_targets.js\"), __webpack_require__(/*! js/mixins/dependon */ \"./src/js/mixins/dependon.js\"), __webpack_require__(/*! js/mixins/widget_state_manager */ \"./src/js/mixins/widget_state_manager.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, Marionette, ApiQuery, ApiRequest, WidgetMixin, ApiTargets, Dependon, WidgetStateManagerMixin) {\n  /**\n   * Default PubSub based widget; the main functionality is inside\n   *\n   *  dispa tchRequest()\n   *    - publishes ApiRequest object into PubSub (to initiate search)\n   *\n   *  processResponse()\n   *    - receives ApiResponse object as a direct reply for the previous\n   *      request\n   *\n   * You will want to override 'processResponse' method and possibly\n   * some of the other methods like this;\n   *\n   * var newWidgetClass = BaseWidget.extend({\n   *   composeRequest : function(){},\n   *   processRequest : function(){}\n   * });\n   *\n   * var newInstance = new newWidgetClass();\n   *\n   *\n   * If you need to provide your own views, do initalization etc., override\n   * initialize\n   *\n   * * var newWidgetClass = BaseWidget.extend({\n   *   initialize: function() {\n   *      // do something\n   *      BaseWidget.prototype.initialize.apply(this, arguments);\n   *   }\n   * });\n   *\n   *\n   * Some other options include:\n   *\n   *  defaultQueryArguments: this is a list of parameters added to each query\n   *\n   */\n  var BaseWidget = Marionette.Controller.extend({\n    initialize: function initialize(options) {\n      options = options || {}; // these methods are called by PubSub as handlers so we bind them to 'this' object\n      // and they will carry their own context 'this'\n\n      _.bindAll(this, 'dispatchRequest', 'processResponse');\n\n      this._currentQuery = new ApiQuery();\n      this.defaultQueryArguments = this.defaultQueryArguments || {};\n\n      if (options.defaultQueryArguments) {\n        this.defaultQueryArguments = _.extend(this.defaultQueryArguments, options.defaultQueryArguments);\n      }\n\n      if (options.view) {\n        this.view = options.view;\n        this.collection = options.view.collection;\n      } // our way of listening to views/models\n\n\n      if (this.view) Marionette.bindEntityEvents(this, this.view, Marionette.getOption(this, 'viewEvents'));\n      if (this.model) Marionette.bindEntityEvents(this, this.model, Marionette.getOption(this, 'modelEvents'));\n    },\n\n    /**\n     * Called by Bumblebee application when a widget is about to be registered\n     * it receives a BeeHive object, that contais methods/attributes that a\n     * widget needs to communicate with the app\n     *\n     * This is the place where you want to subscribe to events\n     *\n     * @param beehive\n     */\n    activate: function activate(beehive) {\n      this.setBeeHive(beehive);\n      var pubsub = beehive.getService('PubSub'); // custom dispatchRequest function goes here\n\n      pubsub.subscribe(pubsub.INVITING_REQUEST, _.bind(this.dispatchRequest, this)); // custom handleResponse function goes here\n\n      pubsub.subscribe(pubsub.DELIVERING_RESPONSE, _.bind(this.processResponse, this));\n    },\n\n    /**\n     * You should use this method when you want to initiaze global search action\n     * (ie. send a query to the pubsub)\n     *\n     * @param apiQuery\n     */\n    dispatchNewQuery: function dispatchNewQuery(apiQuery) {\n      // remove the arguments that are useful only to this widget\n      _.each(this.defaultQueryArguments, function (v, k) {\n        apiQuery.unset(k);\n      });\n\n      var pubsub = this.getPubSub();\n      pubsub.publish(pubsub.NAVIGATE, 'search-page', {\n        q: apiQuery\n      });\n    },\n\n    /**\n     * Default callback to be called by PubSub on 'INVITING_REQUEST'\n     */\n    dispatchRequest: function dispatchRequest(apiQuery) {\n      this._dispatchRequest(apiQuery);\n    },\n    _dispatchRequest: function _dispatchRequest(apiQuery) {\n      var q = this.customizeQuery(apiQuery);\n\n      if (q) {\n        var req = this.composeRequest(q);\n\n        if (req) {\n          var pubsub = this.getPubSub();\n          pubsub.publish(pubsub.DELIVERING_REQUEST, req);\n        }\n      }\n    },\n\n    /**\n     * Default action to modify ApiQuery (called from inside dispatchRequest)\n     *\n     * @param apiQuery\n     */\n    customizeQuery: function customizeQuery(apiQuery) {\n      var q = apiQuery.clone();\n      q.unlock();\n\n      if (this.defaultQueryArguments) {\n        q = this.composeQuery(this.defaultQueryArguments, q);\n      }\n\n      return q;\n    },\n\n    /**\n     * Default callback to be called by PubSub on 'DELIVERING_RESPONSE'\n     * @param apiResponse\n     */\n    processResponse: function processResponse(apiResponse) {\n      // in your widget, you should always set the current query like this\n      var q = apiResponse.getApiQuery();\n      this.setCurrentQuery(q);\n      throw new Error('you need to customize this function');\n    },\n\n    /**\n     * This function should return a request IFF we want to get some\n     * data - it is called from inside 'dispatchRequest' event handler\n     *\n     * @param object with params to add\n     * @returns {ApiRequest}\n     */\n    composeRequest: function composeRequest(apiQuery) {\n      return new ApiRequest({\n        target: ApiTargets.SEARCH,\n        query: apiQuery\n      });\n    },\n\n    /**\n     * Will save a clone of the apiQuery into the widget (for future use and\n     * reference)\n     *\n     * @param apiQuery\n     */\n    setCurrentQuery: function setCurrentQuery(apiQuery) {\n      this._currentQuery = apiQuery;\n    },\n\n    /**\n     * Returns the current ApiQuery\n     * if a query hasn't been set, it will check if there is one in storage,\n     * if not, it will return an empty query\n     *\n     * @returns {ApiQuery|*}\n     */\n    getCurrentQuery: function getCurrentQuery() {\n      var currQuery = new ApiQuery({});\n      var beehive;\n\n      try {\n        if (this._currentQuery instanceof ApiQuery) {\n          currQuery = this._currentQuery;\n        } else if (_.isFunction(this.getBeeHive)) {\n          beehive = this.getBeeHive();\n\n          if (beehive.hasObject('AppStorage')) {\n            var q = beehive.getObject('AppStorage').getCurrentQuery();\n\n            if (q instanceof ApiQuery) {\n              currQuery = q;\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e.message);\n      } finally {\n        return currQuery;\n      }\n    },\n\n    /**\n     * All purpose function for making a new query. It returns an apiQuery ready for\n     * newQuery event or for insertion into  apiRequest.\n     *\n     * @param queryParams\n     * @param apiQuery\n     * @returns {*}\n     */\n    composeQuery: function composeQuery(queryParams, apiQuery) {\n      var query;\n\n      if (!apiQuery) {\n        query = this.getCurrentQuery();\n        query = query.clone();\n      } else {\n        query = apiQuery;\n      }\n\n      if (queryParams) {\n        _.each(queryParams, function (v, k) {\n          if (!query.has(k)) query.set(k, v);\n        });\n      }\n\n      return query;\n    },\n    onDestroy: function onDestroy() {\n      this.view.destroy();\n    },\n\n    /**\n     * Convention inside Backbone and Marionette is to return 'this'\n     * - since 'this' usually refers to a 'View', we'll return the\n     * view's el here\n     * doesn't render unless it has to\n     *\n     * @returns {view.el}\n     */\n    getEl: function getEl() {\n      if (this.view.el && this.view.$el.children().length) {\n        return this.view.el;\n      }\n\n      return this.view.render().el;\n    },\n\n    /*\n     *\n     * convenience function for tests, always re-renders\n     *\n     * */\n    render: function render() {\n      return this.view.render();\n    },\n\n    /**\n     * Extracts identifier from a query object\n     *\n     * @param {ApiQuery} apiQuery\n     */\n    parseIdentifierFromQuery: function parseIdentifierFromQuery(apiQuery) {\n      if (!apiQuery.hasVal('q')) {\n        throw 'no query';\n      }\n\n      var q = apiQuery.get('q')[0];\n\n      try {\n        if (/^(?:identifier|bibcode):(.*)$/.test(q)) {\n          return q.split(':')[1];\n        }\n      } catch (e) {\n        throw 'unable to parse bibcode';\n      }\n\n      throw 'query must be in the format of identifer:foo or bibcode:foo';\n    }\n  }, {\n    mixin: WidgetMixin\n  });\n\n  _.extend(BaseWidget.prototype, Dependon.BeeHive, WidgetStateManagerMixin);\n\n  return BaseWidget;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/base/base_widget.js?");

/***/ }),

/***/ "./src/js/widgets/search_bar/autocomplete.js":
/*!***************************************************!*\
  !*** ./src/js/widgets/search_bar/autocomplete.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./src/libs/jquery.js\"), __webpack_require__(/*! analytics */ \"./src/js/components/analytics.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, analytics) {\n  var autocompleteSource = [{\n    value: 'author:\"\"',\n    label: 'Author',\n    match: 'author:\"'\n  }, {\n    value: 'first_author:\"\"',\n    label: 'First Author',\n    match: 'author:\"'\n  }, {\n    value: 'first_author:\"\"',\n    label: 'First Author',\n    match: 'first author'\n  }, {\n    value: 'first_author:\"\"',\n    label: 'First Author',\n    match: '^author'\n  }, {\n    value: 'first_author:\"\"',\n    label: 'First Author',\n    match: 'author:\"^'\n  }, {\n    value: 'bibstem:\"\"',\n    label: 'Publication (must use bibstem)',\n    desc: 'e.g. bibstem:ApJ',\n    match: 'bibstem:\"'\n  }, {\n    value: 'bibstem:\"\"',\n    label: 'Publication (must use bibstem)',\n    desc: 'e.g. bibstem:ApJ',\n    match: 'publication (bibstem)'\n  }, {\n    value: 'arXiv:',\n    label: 'arXiv ID',\n    match: 'arxiv:'\n  }, {\n    value: 'doi:',\n    label: 'DOI',\n    match: 'doi:'\n  }, {\n    value: 'full:\"\"',\n    label: 'Full text search',\n    desc: 'title, abstract, and body',\n    match: 'full:'\n  }, {\n    value: 'full:\"\"',\n    label: 'Full text search',\n    desc: 'itle, abstract, and body',\n    match: 'fulltext'\n  }, {\n    value: 'full:\"\"',\n    label: 'Full text search',\n    desc: 'title, abstract, and body',\n    match: 'text'\n  }, {\n    value: 'year:',\n    label: 'Year',\n    match: 'year'\n  }, {\n    value: 'year:',\n    label: 'Year Range',\n    desc: 'e.g. 1999-2005',\n    match: 'year range'\n  }, {\n    value: 'aff:\"\"',\n    label: 'Affiliation',\n    match: 'affiliation'\n  }, {\n    value: 'aff:\"\"',\n    label: 'Affiliation',\n    match: 'aff:'\n  }, {\n    value: 'abs:\"\"',\n    label: 'Search abstract + title + keywords',\n    match: 'abs:'\n  }, {\n    value: 'collection:astronomy',\n    label: 'Limit to papers in the astronomy database',\n    match: 'database:astronomy'\n  }, {\n    value: 'collection:physics',\n    label: 'Limit to papers in the physics database',\n    match: 'database:physics'\n  }, {\n    value: 'collection:astronomy',\n    label: 'Limit to papers in the astronomy database',\n    match: 'collection:astronomy'\n  }, {\n    value: 'collection:physics',\n    label: 'Limit to papers in the physics database',\n    match: 'collection:physics'\n  }, // hide this one\n  //    {value: \"abstract:\\\"\\\"\" , label : \"Abstract\", match: \"abstract:(\"},\n  {\n    value: 'title:\"\"',\n    label: 'Title',\n    match: 'title:('\n  }, {\n    value: 'orcid:',\n    label: 'ORCiD identifier',\n    match: 'orcid:'\n  }, {\n    value: 'object:',\n    label: 'SIMBAD object (e.g. object:LMC)',\n    match: 'object:'\n  }, {\n    value: 'citations()',\n    label: 'Citations',\n    desc: 'Get papers citing your search result set',\n    match: 'citations('\n  }, {\n    value: 'references()',\n    label: 'References',\n    desc: 'Get papers referenced by your search result set',\n    match: 'references('\n  }, {\n    value: 'trending()',\n    label: 'Trending',\n    desc: 'the list of documents most read by users who read recent papers on the topic being researched',\n    match: 'trending('\n  }, {\n    value: 'reviews()',\n    label: 'Review Articles',\n    desc: 'review articles citing most relevant papers',\n    match: 'reviews('\n  }, {\n    value: 'useful()',\n    label: 'Useful',\n    desc: 'documents frequently cited by the most relevant papers on the topic being researched',\n    match: 'useful('\n  }, {\n    value: 'property:refereed',\n    label: 'Limit to refereed',\n    desc: '(property:refereed)',\n    match: 'refereed'\n  }, {\n    value: 'property:refereed',\n    label: 'Limit to refereed',\n    desc: '(property:refereed)',\n    match: 'property:refereed'\n  }, {\n    value: 'property:notrefereed',\n    label: 'Limit to non-refereed',\n    desc: '(property:notrefereed)',\n    match: 'non-refereed'\n  }, {\n    value: 'property:notrefereed',\n    label: 'Limit to non-refereed',\n    desc: '(property:notrefereed)',\n    match: 'property:notrefereed'\n  }, {\n    value: 'property:notrefereed',\n    label: 'Limit to non-refereed',\n    desc: '(property:notrefereed)',\n    match: 'notrefereed'\n  }, {\n    value: 'doctype:eprint',\n    label: 'Limit to eprints',\n    desc: '(doctype:eprint)',\n    match: 'eprint'\n  }, {\n    value: 'doctype:eprint',\n    label: 'Limit to eprints',\n    desc: '(doctype:eprint)',\n    match: 'doctype:eprint'\n  }, {\n    value: 'doctype:eprint',\n    label: 'Limit to eprints',\n    desc: '(doctype:eprint)',\n    match: 'property:eprint'\n  }, {\n    value: 'property:openaccess',\n    label: 'Limit to open access',\n    desc: '(property:openaccess)',\n    match: 'open access'\n  }, {\n    value: 'property:openaccess',\n    label: 'Limit to open access',\n    desc: '(property:openaccess)',\n    match: 'property:openaccess'\n  }, {\n    value: 'property:openaccess',\n    label: 'Limit to open access',\n    desc: '(property:openaccess)',\n    match: 'openaccess'\n  }, {\n    value: 'doctype:software',\n    label: 'Limit to software',\n    desc: '(doctype:software)',\n    match: 'software'\n  }, {\n    value: 'doctype:software',\n    label: 'Limit to software',\n    desc: '(doctype:software)',\n    match: 'doctype:software'\n  }, {\n    value: 'doctype:inproceedings',\n    label: 'Limit to papers in conference proceedings',\n    desc: '(doctype:inproceedings)',\n    match: 'conference proceedings'\n  }, {\n    value: 'doctype:inproceedings',\n    label: 'Limit to papers in conference proceedings',\n    desc: '(doctype:inproceedings)',\n    match: 'doctype:inproceedings'\n  }, {\n    value: 'doctype:inproceedings',\n    label: 'Limit to papers in conference proceedings',\n    desc: '(doctype:inproceedings)',\n    match: 'property:inproceedings'\n  }];\n  /**\n   * splits out the part of the text that the autocomplete cares about\n   * @param {string} text\n   */\n\n  var findActiveAndInactive = function findActiveAndInactive(text) {\n    var parts = text.trim().split(/\\s+/).filter(function (part) {\n      return !!part;\n    });\n    return {\n      active: parts.pop(),\n      inactive: parts.length > 0 ? parts.join(' ') : ''\n    };\n  };\n  /**\n   * @param {HTMLElement} element\n   */\n\n\n  var render = function render(element) {\n    if (!element) {\n      return;\n    }\n\n    var $input = $(element); // parse the sources and generate the suggestion list\n\n    var source = function source(request, response) {\n      // stop the search if this flag has been set\n      if ($input.data('preventSearch')) {\n        $input.data('preventSearch', false);\n        $input.autocomplete('close');\n        return;\n      }\n\n      var term = request.term;\n      $input.data('originalTerm', term); // don't show if the user is just adding spaces on the end\n\n      if (/\\s+$/.test(term)) {\n        $input.autocomplete('close');\n        return;\n      } // only consider the right-most term\n\n\n      if ($input.getCursorPosition() !== $input.val().length) {\n        $input.autocomplete('close');\n        return;\n      } // use only the right-most term\n\n\n      var _findActiveAndInactiv = findActiveAndInactive(term),\n          active = _findActiveAndInactiv.active;\n\n      var suggestions = [];\n\n      try {\n        // match on the item regex, and return the label\n        var reg = new RegExp(\"^\".concat($.ui.autocomplete.escapeRegex(active)), 'i');\n        suggestions = _.uniq(_.filter(autocompleteSource, function (item) {\n          return reg.test(item.match);\n        }), false, _.property('label'));\n      } catch (e) {\n        // if there is an error, just don't show any suggestions\n        suggestions = [];\n      }\n\n      response(suggestions);\n    }; // render the preview of each selection as they are focused\n\n\n    var focus = function focus(event, ui) {\n      var $autocomplete = $input.data('ui-autocomplete');\n\n      var _findActiveAndInactiv2 = findActiveAndInactive($autocomplete.term),\n          inactive = _findActiveAndInactiv2.inactive;\n\n      var focusedSuggestion = ui.item.value;\n      var all = \"\".concat(inactive.length > 0 ? inactive + ' ' : '').concat(focusedSuggestion); // don't update the input if user is only hovering\n\n      if (event.originalEvent.originalEvent.type !== 'mouseenter') {\n        $input.val(all);\n      }\n\n      $input.data('previewSuggestion', all);\n      $input.data('didFocus', true);\n      $input.data('focusedItem', ui.item);\n      return false;\n    };\n\n    var select = function select(event, ui) {\n      var newVal = $input.data('previewSuggestion');\n      $input.val(newVal); // place cursor inside quotes or parens, or if none, just put it at the end\n\n      $input.selectRange(/[\")]$/.test(ui.item.value) ? newVal.length - 1 : newVal.length);\n      analytics('send', 'event', 'interaction', 'autocomplete-used', ui.item.value);\n      return false;\n    };\n\n    $input.autocomplete({\n      minLength: 1,\n      autoFocus: false,\n      delay: 0,\n      source: source,\n      focus: focus,\n      select: select\n    }); // render the suggestion list with some highlighting\n\n    $input.data('ui-autocomplete')._renderItem = function (ul, item) {\n      var re = new RegExp('(' + this.term + ')', 'i');\n      var label = item.label.replace(re, '<span class=\"ui-state-highlight\">$1</span>');\n\n      if (item.desc) {\n        return $('<li class=\"search-bar-suggestion\">').append('<a>' + label + '<span class=\"s-auto-description\">&nbsp;&nbsp;' + item.desc + '</span></a>').appendTo(ul);\n      }\n\n      return $('<li class=\"search-bar-suggestion\">').on('hover', function (e) {\n        return e.preventDefault();\n      }).append('<a>' + label + '</a>').appendTo(ul);\n    };\n\n    $input.bind({\n      keydown: function keydown(event) {\n        var _$input$data = $input.data(),\n            didFocus = _$input$data.didFocus; // prevent search unless user is actually deleting a term\n\n\n        if (event.key === 'Backspace' && /\\s+$/.test($input.val())) {\n          $input.data('preventSearch', true);\n        } // hack to work around default tabbing behavior and still maintain normal behavior within the input box\n\n\n        if (event.key === 'Tab' && didFocus) {\n          $input.data('didFocus', false);\n          event.preventDefault();\n        }\n      },\n      paste: function paste() {\n        $input.data('preventSearch', true);\n      }\n    });\n  };\n\n  return {\n    render: render,\n    autocompleteSource: autocompleteSource\n  };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/search_bar/autocomplete.js?");

/***/ }),

/***/ "./src/js/widgets/search_bar/quick-field-desc.js":
/*!*******************************************************!*\
  !*** ./src/js/widgets/search_bar/quick-field-desc.js ***!
  \*******************************************************/
/***/ (function(module) {

eval("/**\n * Quickfield descriptions for showing tooltips with next to the quick field options\n *\n * Each property in this file should match the `value` attribute\n * in the template file (../templates/option-dropdown.html)\n * for each item\n */\n!(module.exports = {\n  abs: {\n    title: 'abstract',\n    description: 'Search for word or phrase in abstract, title and keywords',\n    syntax: ['abs:\"phrase\"'],\n    example: ['abs:\"dark energy\"']\n  },\n  abstract: {\n    title: 'abstract only',\n    description: 'Search for a word or phrase in an abstract only',\n    syntax: ['abstract:\"phrase\"'],\n    example: ['abstract:\"dark energy\"']\n  },\n  ack: {\n    title: 'acknowledgements',\n    description: 'Search for a word or phrase in the acknowledgements extracted from fulltexts.',\n    syntax: ['ack:\"phrase\"'],\n    example: ['ack:\"ADS\"']\n  },\n  aff: {\n    title: 'affiliation',\n    description: 'Search for word or phrase in the raw, provided affiliation field',\n    syntax: ['aff:\"phrase\"'],\n    example: ['aff:\"harvard\"']\n  },\n  arxiv_class: {\n    title: 'arXiv category',\n    description: 'Finds all arXiv pre-prints in the class specified',\n    syntax: ['arxiv_class:arxivclass'],\n    example: ['arxiv_class:\"High Energy Physics - Experiment\"']\n  },\n  author_count: {\n    title: 'author count',\n    description: 'Find records that have a specific number of authors, or a range of author counts',\n    syntax: ['author_count:count', 'author_count:[min_count TO max_count]'],\n    example: ['author_count:40', 'author_count:[10 TO 100]']\n  },\n  author: {\n    title: 'author',\n    description: 'Author name may include just lastname and initial, or stricter author search (recommended)',\n    syntax: ['author:\"Last, F\"', 'author:\"Last, First […]\"'],\n    example: ['author:\"huchra, john p\"', 'author:\"huchra, john p\"']\n  },\n  bibcode: {\n    title: 'bibcode',\n    description: 'Find a specific record using the ADS bibcode (ADS identifier of a paper)',\n    syntax: ['bibcode:adsbib'],\n    example: ['bibcode:2003AJ….125..525J']\n  },\n  bibgroup: {\n    title: 'bibliographic group',\n    description: 'Limit search to papers in HST bibliography',\n    syntax: ['bibgroup:name'],\n    example: ['bibgroup:HST']\n  },\n  bibstem: {\n    title: 'bib abbrev',\n    description: 'Find records that contain a specific bibstem in their bibcode',\n    syntax: ['bibstem:adsbibstem'],\n    example: ['bibstem:ApJ']\n  },\n  body: {\n    title: 'body of article',\n    description: 'Search for a word or phrase in (only) the full text',\n    syntax: ['body:\"phrase\"'],\n    example: ['body:\"gravitational waves\"']\n  },\n  data: {\n    title: 'data archive',\n    description: 'Limit search to papers with data from specified',\n    syntax: ['data:archive'],\n    example: ['data:NED']\n  },\n  collection: {\n    title: 'collection',\n    description: 'Search from the astronomy, physics, or general collection',\n    syntax: ['collection:collection'],\n    example: ['collection:general']\n  },\n  citation_count: {\n    title: 'citation count',\n    description: 'Find records that have a specific number of citations, or a range of citation counts',\n    syntax: ['citation_count:count', 'citation_count:[min_count TO max_count]'],\n    example: ['citation_count:40', 'citation_count:[10 TO 100]']\n  },\n  doctype: {\n    title: 'doctype',\n    description: 'Limit search to records corresponding to data catalogs',\n    syntax: ['doctype:type'],\n    example: ['doctype:catalog']\n  },\n  doi: {\n    title: 'doi',\n    description: 'finds a specific record using its digital object id',\n    syntax: ['doi:DOI'],\n    example: ['doi:10.1086/345794']\n  },\n  entdate: {\n    title: 'entdate',\n    description: 'Creation date of ADS record in user-friendly format (YYYY-MM-DD)',\n    syntax: ['entdate:YYYY-MM-DD'],\n    example: ['entdate:2019-05-20']\n  },\n  'first-author': {\n    title: 'first author',\n    description: 'Search by first author of the paper',\n    syntax: ['first_author:\"Last, F\"'],\n    example: ['first_author:\"huchra, j\"']\n  },\n  full: {\n    title: 'fulltext',\n    description: 'Search for word or phrase in fulltext, acknowledgements, abstract, title and keywords',\n    syntax: ['full:\"phrase\"'],\n    example: ['full:\"gravitational waves\"']\n  },\n  identifier: {\n    title: 'identifier',\n    description: 'Find a paper using any of its identifiers, arXiv, bibcode, doi, etc.',\n    syntax: ['identifier:bibcode'],\n    example: ['identifier:2003AJ….125..525J']\n  },\n  inst: {\n    title: 'institution',\n    description: 'Search by author\\'s canonical affiliation. Click <a href=\"https://github.com/adsabs/CanonicalAffiliations/blob/master/parent_child.tsv\" ref=\"noopener noreferrer\" target=\"_blank\">here</a> for a full list',\n    syntax: ['inst:id'],\n    example: ['inst:CfA']\n  },\n  keyword: {\n    title: 'keyword',\n    description: 'Search publisher- or author-supplied keywords',\n    syntax: ['keyword:\"phrase\"'],\n    example: ['keyword:sun']\n  },\n  object: {\n    title: 'object',\n    description: 'Search for papers tagged with a specific astronomical object or at or near a set of coordinates',\n    syntax: ['object:\"object\"'],\n    example: ['object:Andromeda']\n  },\n  orcid: {\n    title: 'orcid',\n    description: 'Search for papers that are associated with a specific ORCiD iD',\n    syntax: ['orcid:id'],\n    example: ['orcid:0000-0000-0000-0000']\n  },\n  page: {\n    title: 'page',\n    description: 'Search for papers with a given page number',\n    syntax: ['page:number'],\n    example: ['page:410']\n  },\n  property: {\n    title: 'property',\n    description: 'An array of miscellaneous flags associated with the record. Possible values include: refereed, notrefereed, article, nonarticle, ads_openaccess, eprint_openaccess, pub_openaccess, openaccess, ocrabstract',\n    syntax: ['property:type'],\n    example: ['property:openaccess']\n  },\n  pub: {\n    title: 'publication full name',\n    description: 'Limit search to a specific publication',\n    syntax: ['bibstem:adsbibstem'],\n    example: ['bibstem:ApJ']\n  },\n  pubdate: {\n    title: 'date published',\n    description: 'Use fine-grained dates for publication range',\n    syntax: ['pubdate:[YYYY-MM TO YYYY-MM]'],\n    example: ['pubdate:[2005-10 TO 2006-09]']\n  },\n  title: {\n    title: 'title',\n    description: 'Search for word or phrase in title field',\n    syntax: ['title:\"phrase\"'],\n    example: ['title:\"weak lensing\"']\n  },\n  volume: {\n    title: 'volume',\n    description: 'Search for papers with a given volume',\n    syntax: ['volume:volume'],\n    example: ['volume:10']\n  },\n  year: {\n    title: 'year',\n    description: 'Year of publication',\n    syntax: ['year:YYYY', 'year:YYYY-YYYY'],\n    example: ['year:2000', 'year:2000-2005']\n  },\n  citations: {\n    title: 'citations()',\n    description: 'Returns list of citations from given papers; use [citations] to get the field contents',\n    syntax: ['citations(query)'],\n    example: ['citations(author:\"huchra, john\")']\n  },\n  pos: {\n    title: 'pos()',\n    description: 'Search for an item within a field by specifying the position in the field. The example for this operator is pos(fieldedquery,position,[endposition]). If no endposition is given, then it is assumed to be endposition = position, otherwise this performs a query within the range [position, endposition].',\n    syntax: ['pos(fieldedquery,position,[endposition])'],\n    example: ['pos(author:\"Oort, J\",2)']\n  },\n  references: {\n    title: 'references()',\n    description: 'Returns list of references from given papers',\n    syntax: ['references(query)'],\n    example: ['references(bibcode:2003AJ....125..525J)']\n  },\n  reviews: {\n    title: 'reviews()',\n    description: 'Returns the list of documents citing the most relevant papers on the topic being researched; these are papers containing the most extensive reviews of the field.',\n    syntax: ['reviews(query)'],\n    example: ['reviews(\"weak lensing\")']\n  },\n  similar: {\n    title: 'similar()',\n    description: 'Return similar documents, based on the similarity of the abstract text',\n    syntax: ['similar(query)'],\n    example: ['similar(bibcode:2000A&AS..143...41K)']\n  },\n  topn: {\n    title: 'topn()',\n    description: 'Return the top N number of documents',\n    syntax: ['topn(N, query)'],\n    example: ['topn(100, database:astronomy, citation_count desc)']\n  },\n  trending: {\n    title: 'trending()',\n    description: 'Returns the list of documents most read by users who read recent papers on the topic being researched; these are papers currently being read by people interested in this field.',\n    syntax: ['trending(query)'],\n    example: ['trending(exoplanets)']\n  },\n  useful: {\n    title: 'useful()',\n    description: 'Returns the list of documents frequently cited by the most relevant papers on the topic being researched; these are studies which discuss methods and techniques useful to conduct research in this field.',\n    syntax: ['useful(query)'],\n    example: ['useful(\"galaxy surveys\")']\n  },\n  '?': {\n    title: 'single wildcard: ?',\n    description: 'Matches a single character',\n    syntax: ['?'],\n    example: ['title:(k? star)']\n  },\n  '*': {\n    title: 'wildcard: *',\n    description: 'Matches zero or more sequential characters',\n    syntax: ['*'],\n    example: ['title:(gravit* wave)']\n  },\n  '=': {\n    title: 'exact match: =',\n    description: 'Exact match',\n    syntax: ['=query'],\n    example: ['=author:\"murray, stephen\"']\n  }\n});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/search_bar/quick-field-desc.js?");

/***/ }),

/***/ "./src/js/widgets/search_bar/search_bar_widget.js":
/*!********************************************************!*\
  !*** ./src/js/widgets/search_bar/search_bar_widget.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! marionette */ \"./src/libs/backbone.marionette.js\"), __webpack_require__(/*! bowser */ \"./src/libs/bowser.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/widgets/base/base_widget */ \"./src/js/widgets/base/base_widget.js\"), __webpack_require__(/*! hbs!js/widgets/search_bar/templates/search_bar_template */ \"./src/js/widgets/search_bar/templates/search_bar_template.html\"), __webpack_require__(/*! hbs!js/widgets/search_bar/templates/search_form_template */ \"./src/js/widgets/search_bar/templates/search_form_template.html\"), __webpack_require__(/*! hbs!js/widgets/search_bar/templates/option-dropdown */ \"./src/js/widgets/search_bar/templates/option-dropdown.html\"), __webpack_require__(/*! js/components/api_request */ \"./src/js/components/api_request.js\"), __webpack_require__(/*! js/components/api_targets */ \"./src/js/components/api_targets.js\"), __webpack_require__(/*! js/components/api_feedback */ \"./src/js/components/api_feedback.js\"), __webpack_require__(/*! js/mixins/formatter */ \"./src/js/mixins/formatter.js\"), __webpack_require__(/*! js/widgets/search_bar/autocomplete */ \"./src/js/widgets/search_bar/autocomplete.js\"), __webpack_require__(/*! js/widgets/search_bar/quick-field-desc */ \"./src/js/widgets/search_bar/quick-field-desc.js\"), __webpack_require__(/*! bootstrap */ \"./src/libs/bootstrap/bootstrap.js\"), // if bootstrap is missing, jQuery events get propagated\n__webpack_require__(/*! jquery-ui */ \"./src/libs/jquery-ui.js\"), __webpack_require__(/*! js/mixins/dependon */ \"./src/js/mixins/dependon.js\"), __webpack_require__(/*! analytics */ \"./src/js/components/analytics.js\"), __webpack_require__(/*! js/components/query_validator */ \"./src/js/components/query_validator.js\"), __webpack_require__(/*! select2 */ \"./node_modules/select2/dist/js/select2.js\"), __webpack_require__(/*! libs/select2/matcher */ \"./src/libs/select2/matcher.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Marionette, bowser, ApiQuery, BaseWidget, SearchBarTemplate, SearchFormTemplate, OptionDropdownTemplate, ApiRequest, ApiTargets, ApiFeedback, FormatMixin, _ref, quickFieldDesc, bootstrap, jqueryUI, Dependon, analytics, QueryValidator, select2, oldMatcher) {\n  var _events;\n\n  var renderAutocomplete = _ref.render,\n      autocompleteArray = _ref.autocompleteSource;\n\n  /**\n   * The default databases to filter by if the user has not set any in their preferences\n   * @type {string[]}\n   */\n  var DEFAULT_DATABASES = ['Astronomy', 'Physics'];\n  var SearchBarModel = Backbone.Model.extend({\n    defaults: function defaults() {\n      return {\n        citationCount: undefined,\n        numFound: undefined,\n        bigquery: false,\n        bigquerySource: undefined\n      };\n    }\n  }); // get what is currently selected in the window\n\n  function getSelectedText(el) {\n    var text = '';\n\n    if (window.getSelection) {\n      // can't just get substring because of firefox bug\n      text = el.value.substring(el.selectionStart, el.selectionEnd);\n    } else if (document.selection && document.selection.type != 'Control') {\n      text = document.selection.createRange().text;\n    }\n\n    return text;\n  }\n\n  var SearchBarView = Marionette.ItemView.extend({\n    template: SearchBarTemplate,\n    className: 's-search-bar-widget',\n    initialize: function initialize(options) {\n      _.bindAll(this, 'fieldInsert');\n\n      this.queryValidator = new QueryValidator();\n      this.defaultDatabases = [];\n    },\n    activate: function activate(beehive) {\n      this.setBeeHive(beehive);\n      var that = this;\n    },\n    modelEvents: {\n      change: 'render'\n    },\n    onRender: function onRender() {\n      var that = this;\n      var $container = this.$('#option-dropdown-container');\n      /*\n              select\n             */\n\n      $container.append(OptionDropdownTemplate);\n\n      function matchStart(term, text) {\n        if (text.toUpperCase().indexOf(term.toUpperCase()) === 0) {\n          return true;\n        }\n\n        return false;\n      }\n\n      var $select = this.$('.quick-add-dropdown');\n      $select.select2({\n        placeholder: 'All Search Terms',\n        matcher: oldMatcher(matchStart)\n      }).on('change', function (e) {\n        var val = e.target.value; // prevent infinite loop!\n\n        if (!val) return;\n        var $option = $(this).find('option[value=\"' + e.target.value + '\"]'); // Grab any default value that is present on the element\n\n        var defaultValue = $option.data('defaultValue');\n        var label = $option.closest('optgroup').attr('label');\n        $select.val(null).trigger('change');\n        setTimeout(function () {\n          that.selectFieldInsert(val, label, defaultValue); // not entirely sure why this timeout is necessary...\n          // without it, focus is moved from the main query bar\n        }, 100);\n      }) // this seems to be necessary to show the placeholder on initial render\n      .val(null).trigger('change');\n      var $select2Instance = $select.data('select2');\n\n      var closeAllPopovers = function closeAllPopovers() {\n        $('.select2-dropdown').popover('destroy');\n      }; // on close, move focus to search bar.  If we change page layout, may have to change this\n      // delayed to handle user click on a link in the description before closing\n\n\n      $select2Instance.on('close', function () {\n        document.getElementById('query-search-input').focus();\n        setTimeout(function () {\n          try {\n            document.getElementsByClassName('search-term-popover')[0].remove();\n          } catch (e) {// do nothing\n          }\n        }, 10);\n      });\n      var platform = bowser.parse(window.navigator.userAgent).platform.type;\n\n      if (platform !== 'mobile' && platform !== 'tablet') {\n        // hide popovers one open and close, focusing will re-open them after this\n        $select2Instance.on('open', closeAllPopovers);\n        $select2Instance.on('results:focus', function (_ref2) {\n          var id = _ref2.data.id;\n          // hide any opened popovers\n          closeAllPopovers(); // grab the title/body from our list\n\n          var data = quickFieldDesc[id];\n\n          if (_typeof(data) !== 'object') {\n            // if not found, do nothing\n            return;\n          } // create the popover\n\n\n          var syntax = data.syntax.map(function (s) {\n            return \"<code>\".concat(s, \"</code>\");\n          }).join(', ');\n          var example = data.example.map(function (e) {\n            return \"<code>\".concat(e, \"</code>\");\n          }).join(', ');\n          $('.select2-dropdown').popover({\n            title: \"<strong>\".concat(data.title, \"</strong>\"),\n            content: \"\".concat(data.description, \"<br/><br/>Syntax: <br/>\").concat(syntax, \"<br/><br/>Example: </br>\").concat(example),\n            html: true,\n            placement: 'top right',\n            trigger: 'manual',\n            container: 'body',\n            animation: false\n          }).data('bs.popover').tip().attr('class', 'search-term-popover popover right in');\n          $('.select2-dropdown').popover('show');\n        });\n      }\n      /*\n      end code for select\n      */\n\n\n      var $input = this.$('input.q');\n      this.$input = $input;\n      renderAutocomplete($input);\n      this.$('[data-toggle=\"tooltip\"]').tooltip();\n    },\n    events: (_events = {\n      'click #field-options button': 'fieldInsert',\n      'keyup .q': 'toggleClear',\n      'click .show-form': 'onShowForm',\n      'submit form[name=main-query]': 'submitQuery',\n      'click .icon-clear': 'clearInput'\n    }, _defineProperty(_events, \"keyup .q\", 'storeCursorInfo'), _defineProperty(_events, 'select .q', 'storeCursorInfo'), _defineProperty(_events, 'click .q', 'storeCursorInfo'), _defineProperty(_events, 'click .bigquery-close', 'clearBigquery'), _events),\n    toggleClear: function toggleClear() {\n      this.$('.icon-clear').toggleClass('hidden', !this.$input.val());\n    },\n    clearInput: function clearInput() {\n      this.$input.val('').focus();\n      this.toggleClear();\n    },\n    getFormVal: function getFormVal() {\n      return this.$input.val();\n    },\n    setFormVal: function setFormVal(v) {\n      /*\n              bigquery special case: don't show the confusing *:*, just empty bar\n             */\n      if (this.model.get('bigquery') && v === '*:*') {\n        this.$('.q').val('');\n      } else {\n        this.$('.q').val(v);\n      }\n\n      this.toggleClear();\n    },\n    serializeData: function serializeData() {\n      var j = this.model.toJSON();\n      j.numFound = j.numFound ? this.formatNum(j.numFound) : 0;\n      j.citationCount = j.citationCount ? this.formatNum(j.citationCount) : false;\n\n      if (this.model.get('bigquerySource')) {\n        if (this.model.get('bigquerySource').match(/library/i)) {\n          this.model.set({\n            libraryName: this.model.get('bigquerySource').match(/library:(.*)/i)[1]\n          });\n        }\n      }\n\n      return j;\n    },\n    onShowForm: function onShowForm() {\n      // show the form\n      this.specifyFormWidth();\n    },\n    toggleFormSection: function toggleFormSection(e) {\n      var $p = $(e.target).parent();\n      $p.next().toggleClass('hide');\n      $p.toggleClass('search-form-header-active');\n    },\n    // used for the \"field insert\" function\n    _cursorInfo: {\n      selected: '',\n      startIndex: 0\n    },\n    storeCursorInfo: function storeCursorInfo(e) {\n      var selected = getSelectedText(e.currentTarget);\n      var startIndex = this.$input.getCursorPosition();\n      this._cursorInfo = {\n        selected: selected,\n        startIndex: startIndex\n      };\n      this.toggleClear();\n    },\n    selectFieldInsert: function selectFieldInsert(val, label, initialValue) {\n      var newVal;\n      var specialCharacter;\n      var highlightedText = this._cursorInfo.selected;\n      var startIndex = this._cursorInfo.startIndex;\n      var currentVal = this.getFormVal(); // By default, selected will be the highlighted text surrounded by double qoutes\n\n      var selected = '\"' + highlightedText + '\"'; // If there was no highlighted text and an initial value was passed, use the initial value\n\n      if (highlightedText.length === 0 && initialValue) {\n        selected = initialValue;\n      } // selected will be \"\" if user didn't highlight any text\n      // newVal = df + \":\\\"\" + selected + \"\\\"\";\n      //\n\n\n      switch (label) {\n        case 'fields':\n          {\n            if (val === 'first-author') {\n              val = 'first_author'; // selected = selected.replace(/\"/, '\"^');\n            } else if (val === 'year') {\n              selected = selected.replace(/\"/g, '');\n            }\n\n            newVal = val + ':' + selected;\n          }\n          break;\n\n        case 'operators':\n          newVal = val + '(' + (selected === '\"\"' ? '' : selected) + ')';\n          break;\n\n        case 'special characters':\n          if (val === '=') {\n            newVal = val + selected;\n          } else {\n            newVal = selected + val;\n          }\n\n          specialCharacter = true;\n          break;\n      }\n\n      if (highlightedText.length) {\n        this.setFormVal(currentVal.substr(0, startIndex) + newVal + currentVal.substr(startIndex + selected.length));\n      } else {\n        // append to the end\n        var newString = currentVal ? currentVal + ' ' + newVal : newVal;\n        this.setFormVal(newString);\n\n        if (specialCharacter) {\n          this.$input.selectRange(newString.length);\n        } else {\n          this.$input.selectRange(newString.length - 1);\n        }\n      }\n\n      analytics('send', 'event', 'interaction', 'field-insert-dropdown-selected', val);\n    },\n    fieldInsert: function fieldInsert(e) {\n      var newVal;\n      var operator;\n      var currentVal = this.getFormVal();\n      var $target = $(e.target);\n      var df = $target.attr('data-field');\n      var punc = $target.attr('data-punc');\n      var startIndex = this._cursorInfo.startIndex;\n      var selected = this._cursorInfo.selected; // selected will be \"\" if user didn't highlight any text\n\n      if (df.indexOf('operator-') > -1) {\n        operator = df.split('-').reverse()[0];\n        punc = '(';\n\n        if (selected) {\n          newVal = operator + '(' + selected + ')';\n        } else {\n          // enclose the full query, set it in and return\n          newVal = operator + '(' + currentVal + ')';\n          currentVal = '';\n          this.setFormVal(newVal);\n          return;\n        }\n      } else if (df == 'first-author') {\n        newVal = ' first_author:\"' + selected + '\"';\n      } else if (punc == '\"') {\n        newVal = df + ':\"' + selected + '\"';\n      } else if (punc == '(') {\n        newVal = df + ':(' + selected + ')';\n      } else if (!punc) {\n        // year\n        newVal = df + ':' + selected;\n      }\n\n      if (selected) {\n        this.setFormVal(currentVal.substr(0, startIndex) + newVal + currentVal.substr(startIndex + selected.length));\n      } else {\n        // append to the end\n        var newString = currentVal + ' ' + newVal;\n        this.setFormVal(newString);\n\n        if (punc) {\n          this.$input.selectRange(newString.length - 1);\n        } else {\n          this.$input.selectRange(newString.length);\n        }\n      }\n\n      analytics('send', 'event', 'interaction', 'field-insert-button-pressed', df);\n      return false;\n    },\n    submitQuery: function submitQuery(e) {\n      var fields;\n      var fielded;\n      var query;\n      query = this.getFormVal();\n      var $input = $('input', e.currentTarget);\n\n      if (_.isString(query) && _.isEmpty(query) && !this.model.get('bigquery')) {\n        // show a popup to tell the user to type in a query\n        $input.popover({\n          placement: 'bottom',\n          title: 'Empty Search!',\n          content: 'Please enter a query to search.',\n          animation: true,\n          trigger: 'manual'\n        }).popover('show');\n        $input.on('input change blur', function () {\n          $(this).popover('hide');\n        });\n        return false;\n      }\n\n      if (typeof $input.popover === 'function') {\n        $input.popover('hide');\n      } // replace uppercased fields with lowercase\n\n\n      query = query.replace(/([A-Z])\\w+:/g, function (letter) {\n        return letter.toLowerCase();\n      }); // store the query in case it gets changed (which happens when there is an object query)\n\n      this.original_query = query; // if we're within a bigquery, translate an empty query to \"*:*\"\n\n      if (!query && this.model.get('bigquery')) {\n        query = '*:*';\n      }\n\n      var newQuery = new ApiQuery({\n        q: query\n      }); // Perform a quick validation on the query\n\n      var validated = this.queryValidator.validate(newQuery);\n\n      if (!validated.result) {\n        var tokens = _.pluck(validated.tests, 'token');\n\n        tokens = tokens.length > 1 ? tokens.join(', ') : tokens[0];\n        var pubsub = this.getPubSub();\n        pubsub.publish(pubsub.ALERT, new ApiFeedback({\n          code: 0,\n          msg: '<p><i class=\"fa fa-exclamation-triangle fa-2x\" aria-hidden=\"true\"></i> ' + \"Sorry! We aren't able to understand: <strong><i>\" + tokens + '</i></strong></p>' + '<p><strong><a href=\"/\">Try looking at the search examples on the home page</a></strong> or ' + '<strong><a href=\"/help/search/search-syntax\">reading our help page.</a></strong></p>',\n          type: 'info',\n          fade: true\n        }));\n        return false;\n      }\n\n      this.trigger('start_search', newQuery); // let analytics know what type of query it was\n\n      fields = _.chain(autocompleteArray).pluck('value').map(function (b) {\n        var m = b.match(/\\w+:|\\w+\\(/);\n        if (m && m.length) return m[0];\n      }).unique().value();\n      fielded = false;\n\n      _.each(fields, function (f) {\n        if (query.indexOf(f) > -1) {\n          fielded = true;\n        }\n      });\n\n      analytics('send', 'event', 'interaction', \"search-bar-\".concat(fielded ? 'fielded' : 'unfielded', \"-query-submitted\"), query);\n      return false;\n    },\n    clearBigquery: function clearBigquery() {\n      this.trigger('clear_big_query');\n    }\n  });\n\n  _.extend(SearchBarView.prototype, FormatMixin, Dependon.BeeHive);\n\n  var SearchBarWidget = BaseWidget.extend({\n    initialize: function initialize(options) {\n      this.model = new SearchBarModel();\n      this.view = new SearchBarView({\n        model: this.model\n      });\n      this.listenTo(this.view, 'start_search', function (query) {\n        this.changeDefaultSort(query);\n        this.navigate(query);\n        this.updateState('loading');\n        this.view.setFormVal(query.get('q'));\n      });\n      this.listenTo(this.view, 'clear_big_query', function (query) {\n        var query = this._currentQuery.clone(); // awkward but need to remove qid + provide __clearBigQuery\n        // for querymediator to do the correct thing\n\n\n        query.unset('__qid');\n        query.unset('__bigquerySource');\n        query.set('__clearBigQuery', 'true'); // unload the bigquery from the model\n\n        this.clearBigQueryPill();\n        this.navigate(query);\n      });\n      this.listenTo(this.view, 'render', function () {\n        var newQueryString = '';\n        var query = this.getCurrentQuery();\n        var oldQueryString = query.get('q');\n\n        if (oldQueryString) {\n          // Grab the original (no simbid refs) query string for the view\n          // This is re-run here in case the view is not updated and\n          // simbid refs show up\n          newQueryString = query.get('__original_query') ? query.get('__original_query')[0] : oldQueryString.join(' ');\n        }\n\n        if (newQueryString) {\n          this.view.setFormVal(newQueryString);\n        }\n\n        this.view.toggleClear();\n      });\n      BaseWidget.prototype.initialize.call(this, options);\n    },\n    activate: function activate(beehive) {\n      this.setBeeHive(beehive);\n      this.activateWidget();\n      var pubsub = this.getPubSub();\n\n      _.bindAll(this, 'processResponse'); // search widget doesn't need to execute queries (but it needs to listen to them)\n\n\n      pubsub.subscribe(pubsub.FEEDBACK, _.bind(this.handleFeedback, this));\n      pubsub.subscribe(pubsub.NAVIGATE, _.bind(this.onNavigate, this));\n      this.view.activate(beehive.getHardenedInstance());\n      pubsub.subscribe(pubsub.INVITING_REQUEST, _.bind(this.dispatchRequest, this));\n      pubsub.subscribe(pubsub.DELIVERING_RESPONSE, this.processResponse);\n      pubsub.subscribe(pubsub.USER_ANNOUNCEMENT, _.bind(this.updateFromUserData, this));\n      pubsub.subscribe(pubsub.CUSTOM_EVENT, _.bind(this.onCustomEvent, this));\n      pubsub.subscribe(pubsub.START_SEARCH, _.bind(this.onStartSearch, this));\n      this.updateFromUserData();\n    },\n    getUserData: function getUserData() {\n      try {\n        var beehive = _.isFunction(this.getBeeHive) && this.getBeeHive();\n        var user = _.isFunction(beehive.getObject) && beehive.getObject('User');\n\n        if (_.isPlainObject(user)) {\n          return _.isFunction(user.getUserData) && user.getUserData('USER_DATA');\n        }\n\n        return {};\n      } catch (e) {\n        return {};\n      }\n    },\n    onStartSearch: function onStartSearch() {\n      this.model.unset('timing');\n    },\n    onCustomEvent: function onCustomEvent(event, arg) {\n      if (event === 'timing:results-loaded') {\n        this.model.set('timing', arg / 1000);\n      } else if (event === 'hotkey/search') {\n        var $input = $('input[name=q]', this.getEl());\n\n        if (!$input.is(':focus')) {\n          arg.preventDefault();\n          $input.select();\n          $(document.documentElement).scrollTop(0);\n        }\n      } else if (event === 'recommender/update-search-text') {\n        var value = arg.text;\n\n        if (value) {\n          this.view.setFormVal(\"\".concat(this.view.getFormVal(), \" \").concat(value));\n          this.view.$input.focus();\n        }\n      }\n    },\n    updateFromUserData: function updateFromUserData() {\n      var userData = this.getUserData();\n      this.defaultDatabases = _.has(userData, 'defaultDatabase') ? _.map(_.filter(userData.defaultDatabase, {\n        value: true\n      }), 'name') : this.defaultDatabases;\n    },\n    applyDefaultFilters: function applyDefaultFilters(apiQuery) {\n      var dbfilters = Array.isArray(this.defaultDatabases) && this.defaultDatabases.length > 0 ? this.defaultDatabases : DEFAULT_DATABASES; // if the user has selected all databases, don't apply ANY filter\n\n      if (dbfilters.length > 0 && dbfilters.includes('All')) {\n        return apiQuery;\n      }\n\n      if (dbfilters.length > 0) {\n        var fqString = '{!type=aqp v=$fq_database}'; // check for presence of database fq\n\n        var fq = apiQuery.get('fq');\n        fq = _.isArray(fq) ? fq : [fq];\n\n        var match = _.indexOf(fqString);\n\n        if (match < 0) {\n          fq.push(fqString);\n          apiQuery.set('fq', fq);\n        } // check for presence of fq_database\n\n\n        if (!apiQuery.has('fq_database')) {\n          var fq_database_string = _.reduce(dbfilters, function (res, db, i) {\n            var d = db.toLowerCase();\n            return res.replace(/(\\(.*)(\\))/, i === 0 ? '$1database:' + d + '$2' : '$1 OR database:' + d + '$2');\n          }, '()');\n\n          apiQuery.set('fq_database', fq_database_string);\n        } // finally add the filters\n\n\n        if (!apiQuery.has('__filter_database_fq_database')) {\n          var fq_database_filters = _.map(dbfilters, function (db) {\n            return 'database:' + db.toLowerCase();\n          });\n\n          apiQuery.set('__filter_database_fq_database', ['OR'].concat(fq_database_filters));\n        }\n      }\n\n      return apiQuery;\n    },\n    processResponse: function processResponse(apiResponse) {\n      var res = apiResponse.toJSON();\n      var sort = res.responseHeader.params.sort;\n\n      if (res.stats && /citation.*/.test(sort)) {\n        var type = _.keys(res.stats.stats_fields)[0];\n\n        var sum = res.stats.stats_fields[type].sum;\n\n        if (type === 'citation_count_norm') {\n          this.model.set({\n            citationCount: sum.toFixed(2),\n            citationLabel: 'normalized citations'\n          });\n        } else if (type === 'citation_count') {\n          this.model.set({\n            citationCount: sum,\n            citationLabel: 'citations'\n          });\n        }\n      } else {\n        this.model.unset('citationCount');\n        this.model.unset('citationLabel');\n      }\n    },\n    defaultQueryArguments: {\n      fl: 'id'\n    },\n    dispatchRequest: function dispatchRequest(apiQuery) {\n      var sort = apiQuery.get('sort');\n\n      if (/citation_count_norm/i.test(sort)) {\n        this.defaultQueryArguments = _.extend(this.defaultQueryArguments, {\n          stats: 'true',\n          'stats.field': 'citation_count_norm'\n        });\n      } else if (/citation_count/i.test(sort)) {\n        this.defaultQueryArguments = _.extend(this.defaultQueryArguments, {\n          stats: 'true',\n          'stats.field': 'citation_count'\n        });\n      } else {\n        this.model.unset('citationCount');\n        this.model.unset('citationLabel'); // don't bother sending request\n\n        return;\n      }\n\n      BaseWidget.prototype.dispatchRequest.call(this, apiQuery);\n    },\n\n    /*\n     * when users return to index page, we should re-focus on the search bar\n     * */\n    focusInput: function focusInput() {\n      if (this._onIndexPage()) {\n        this.clearBigQueryPill();\n        this.view.clearInput();\n      }\n    },\n    clearBigQueryPill: function clearBigQueryPill() {\n      this.model.unset('bigquerySource');\n      this.model.unset('bigquery');\n    },\n    onNavigate: function onNavigate(page) {\n      this.currentPage = page;\n      this.focusInput(page);\n    },\n    handleFeedback: function handleFeedback(feedback) {\n      if (feedback.code === ApiFeedback.CODES.SEARCH_CYCLE_STARTED || feedback.code === ApiFeedback.CODES.SEARCH_CYCLE_FAILED_TO_START) {\n        var query = feedback.query ? feedback.query : feedback.request.get('query'); // Grab the original (no simbid refs) query string for the view\n\n        var newq = query.get('__original_query') ? query.get('__original_query')[0] : query.get('q').join(' ');\n        this.setCurrentQuery(query);\n        this.model.set({\n          bigquerySource: query.get('__bigquerySource') ? query.get('__bigquerySource')[0] : 'Bulk query',\n          bigquery: !!query.get('__qid'),\n          numFound: feedback.numFound\n        });\n        this.view.setFormVal(newq);\n        this.updateState('idle');\n      }\n    },\n    changeDefaultSort: function changeDefaultSort(query) {\n      var currentQuery = this.getCurrentQuery(); // make sure not to override an explicit sort if there is one\n\n      if (!query.has('sort')) {\n        var queryVal = query.get('q')[0]; // citations operator should be sorted by pubdate, so it isn't added here\n\n        var fields = ['trending', 'instructive', 'useful', 'references', 'reviews', 'similar'];\n        var fieldReg = new RegExp(\"(\".concat(fields.join('|'), \")(?=\\\\()\"), 'gi');\n        var matches = queryVal.match(fieldReg); // we're only concerned with the first match (outermost)\n\n        var sort = 'date desc';\n\n        if (matches) {\n          sort = 'score desc';\n\n          if (matches[0] === 'references') {\n            sort = 'first_author asc';\n          }\n        }\n\n        query.set('sort', sort);\n      } else if (currentQuery && currentQuery.has('sort')) {\n        query.set('sort', currentQuery.get('sort'));\n      }\n    },\n    _onIndexPage: function _onIndexPage() {\n      // look out for these names, or that the current page is undefined\n      return /(index-page|SearchWidget)/.test(this.currentPage) || !this.currentPage;\n    },\n    navigate: function navigate(newQuery) {\n      var newQ = newQuery.toJSON();\n\n      var oldQ = _.omit(this.getCurrentQuery().toJSON(), function (val, key) {\n        // omit certain fields (highlights, paging)\n        return /^hl.*/.test(key) || /^p_$/.test(key) || /^__original_query$/.test(key);\n      }); // apply any default filters only if this is a new search\n\n\n      if (this._onIndexPage()) {\n        newQuery = this.applyDefaultFilters(newQuery);\n        newQuery.set('__clearBigQuery', 'true');\n      } else {\n        // if we aren't on the index page, only refine the current query, don't wipe it out\n        newQuery = new ApiQuery(_.assign(oldQ, newQ));\n      } // remove the bigquery from the query if the user cleared it\n\n\n      if (newQuery.has('__clearBigQuery')) {\n        newQuery.unset('__qid');\n      } else if (newQuery.has('__qid') && !this._onIndexPage()) {\n        newQuery.set('__saveBigQuery', 'true');\n      }\n\n      this.view.setFormVal(newQuery.get('q')[0]);\n      this.setCurrentQuery(newQuery);\n      this.getPubSub().publish(this.getPubSub().NAVIGATE, 'search-page', {\n        q: newQuery\n      });\n    },\n    openQueryAssistant: function openQueryAssistant(queryString) {\n      if (queryString) {\n        this.view.setFormVal(queryString);\n      }\n\n      this.view.$el.find('.show-form').click();\n    },\n    onShow: function onShow() {\n      // only focus on the index-page\n      if (this._onIndexPage()) {\n        var $input = this.view.$('input[name=q]'); // attempt to focus a few times, firefox has some problems otherwise\n\n        var id;\n\n        (function retry(count) {\n          $input.blur().focus();\n\n          if ($input.is(':focus') || count > 9) {\n            return clearTimeout(id);\n          }\n\n          setTimeout(retry, 500, count + 1);\n        })(0);\n      }\n    },\n    onDestroy: function onDestroy() {\n      this.view.destroy();\n    },\n    onLoading: function onLoading() {\n      this.model.set('loading', true);\n    },\n    onIdle: function onIdle() {\n      this.model.set('loading', false);\n    }\n  });\n\n  _.extend(SearchBarWidget.prototype, Dependon.BeeHive);\n\n  return SearchBarWidget;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/search_bar/search_bar_widget.js?");

/***/ }),

/***/ "./src/js/widgets/search_bar/templates/option-dropdown.html":
/*!******************************************************************!*\
  !*** ./src/js/widgets/search_bar/templates/option-dropdown.html ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../../../../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<label for=\\\"quick-add-dropdown\\\" class=\\\"sr-only\\\"\\n  >Select a field or operator</label\\n>\\n<select id=\\\"quick-add-dropdown\\\" class=\\\"quick-add-dropdown\\\">\\n  <optgroup label=\\\"fields\\\">\\n    <option value=\\\"abs\\\">abstract</option>\\n    <option value=\\\"abstract\\\">abstract only</option>\\n    <option value=\\\"ack\\\">acknowledgements</option>\\n    <option value=\\\"aff\\\">affiliation</option>\\n    <option value=\\\"arxiv_class\\\">arXiv category</option>\\n    <option value=\\\"author_count\\\">author count</option>\\n    <option value=\\\"author\\\" data-field=\\\"author\\\">author</option>\\n    <option value=\\\"bibcode\\\">bibcode</option>\\n    <option value=\\\"bibgroup\\\">bibliographic group</option>\\n    <option value=\\\"bibstem\\\">bib abbrev, e.g. ApJ</option>\\n    <option value=\\\"body\\\">body of article</option>\\n    <option value=\\\"data\\\">data archive</option>\\n    <option value=\\\"collection\\\">collection</option>\\n    <option value=\\\"citation_count\\\">citation count</option>\\n    <option value=\\\"doctype\\\">doctype</option>\\n    <option value=\\\"doi\\\">doi</option>\\n    <option value=\\\"entdate\\\" data-default-value=\\\"[2000-01-01 TO 2010-01-01]\\\"\\n      >entdate</option\\n    >\\n    <option value=\\\"first-author\\\" data-field=\\\"first-author\\\">first author</option>\\n    <option value=\\\"full\\\" data-field=\\\"full\\\">fulltext</option>\\n    <option value=\\\"identifier\\\">identifier</option>\\n    <option value=\\\"inst\\\">inst</option>\\n    <option value=\\\"keyword\\\">keyword</option>\\n    <option value=\\\"object\\\">object</option>\\n    <option value=\\\"orcid\\\">orcid</option>\\n    <option value=\\\"page\\\">page</option>\\n    <option value=\\\"property\\\">property</option>\\n    <option value=\\\"pub\\\">publication full name</option>\\n    <option value=\\\"pubdate\\\" data-default-value=\\\"[2000-01 TO 2010-01]\\\"\\n      >date published</option\\n    >\\n    <option value=\\\"title\\\">title</option>\\n    <option value=\\\"volume\\\">volume</option>\\n    <option value=\\\"year\\\" data-field=\\\"year\\\">year</option>\\n  </optgroup>\\n  <optgroup label=\\\"operators\\\">\\n    <option value=\\\"citations\\\">citations()</option>\\n    <option value=\\\"pos\\\">pos()</option>\\n    <option value=\\\"references\\\">references()</option>\\n    <option value=\\\"reviews\\\">reviews()</option>\\n    <option value=\\\"similar\\\">similar()</option>\\n    <option value=\\\"topn\\\">topn()</option>\\n    <option value=\\\"trending\\\">trending()</option>\\n    <option value=\\\"useful\\\">useful()</option>\\n  </optgroup>\\n  <optgroup label=\\\"special characters\\\">\\n    <option value=\\\"?\\\">single wildcard: ?</option>\\n    <option value=\\\"*\\\">wildcard: *</option>\\n    <option value=\\\"=\\\">exact match: =</option>\\n  </optgroup>\\n</select>\\n\";\n},\"useData\":true});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/search_bar/templates/option-dropdown.html?");

/***/ }),

/***/ "./src/js/widgets/search_bar/templates/search_bar_template.html":
/*!**********************************************************************!*\
  !*** ./src/js/widgets/search_bar/templates/search_bar_template.html ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../../../../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \" \"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"libraryName\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(2, data, 0),\"inverse\":container.program(4, data, 0),\"data\":data,\"loc\":{\"start\":{\"line\":32,\"column\":29},\"end\":{\"line\":37,\"column\":19}}})) != null ? stack1 : \"\")\n    + \"            <label for=\\\"query-search-input\\\" clas=\\\"sr-only\\\">ADS search</label>\\n            <input type=\\\"text\\\" class=\\\"form-control q hasbigquery\\\" name=\\\"q\\\" id=\\\"query-search-input\\\" autofocus aria-label=\\\"Start typing a query here to begin an ADS Search\\\" autocomplete=\\\"off\\\" value=\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"currentQueryVal\") || (depth0 != null ? lookupProperty(depth0,\"currentQueryVal\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(alias1,{\"name\":\"currentQueryVal\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":39,\"column\":196},\"end\":{\"line\":39,\"column\":215}}}) : helper)))\n    + \">\\n\\n\\n            <button type=\\\"button\\\" class=\\\"icon-clear s-clear-control\\\"></button>\\n\\n\";\n},\"2\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"\\n            <div class=\\\"btn btn-xs btn-info bigquery-tag\\\">\\n              <i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i>&nbsp;<span>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"libraryName\") || (depth0 != null ? lookupProperty(depth0,\"libraryName\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"libraryName\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":34,\"column\":71},\"end\":{\"line\":34,\"column\":86}}}) : helper)))\n    + \"</span>&nbsp;<i class=\\\"fa fa-close fa-lg bigquery-close\\\" aria-hidden=\\\"true\\\" title=\\\"click to remove\\\"></i></div>\\n\";\n},\"4\":function(container,depth0,helpers,partials,data) {\n    return \"            <div class=\\\"btn btn-xs btn-info bigquery-tag\\\"><i class=\\\"fa fa-list-ul\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;Bulk query&nbsp;&nbsp;<i class=\\\"fa fa-close fa-lg bigquery-close\\\" aria-hidden=\\\"true\\\" title=\\\"click to remove\\\" ></i></div>\\n\";\n},\"6\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"            <input type=\\\"text\\\" class=\\\"form-control q\\\" name=\\\"q\\\" autofocus id=\\\"query-search-input\\\" aria-label=\\\"Start typing a query here to begin an ADS Search\\\" autocomplete=\\\"off\\\" value=\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"currentQueryVal\") || (depth0 != null ? lookupProperty(depth0,\"currentQueryVal\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"currentQueryVal\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":45,\"column\":184},\"end\":{\"line\":45,\"column\":203}}}) : helper)))\n    + \">\\n\\n            <button type=\\\"button\\\" class=\\\"icon-clear s-clear-control\\\"></button>\\n\\n\";\n},\"8\":function(container,depth0,helpers,partials,data) {\n    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3=\"function\", alias4=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"      with \"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"citationCount\") || (depth0 != null ? lookupProperty(depth0,\"citationCount\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"citationCount\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":68,\"column\":11},\"end\":{\"line\":68,\"column\":28}}}) : helper)))\n    + \" total \"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"citationLabel\") || (depth0 != null ? lookupProperty(depth0,\"citationLabel\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"citationLabel\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":68,\"column\":35},\"end\":{\"line\":68,\"column\":52}}}) : helper)))\n    + \"\\n\";\n},\"10\":function(container,depth0,helpers,partials,data) {\n    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3=\"function\", alias4=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"      <span class=\\\"search-bar__citation-count\\\"> with <span class=\\\"citation-count-container\\\" style=\\\"font-weight: bold;\\\">\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"citationCount\") || (depth0 != null ? lookupProperty(depth0,\"citationCount\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"citationCount\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":75,\"column\":119},\"end\":{\"line\":75,\"column\":136}}}) : helper)))\n    + \"</span>\\n        <span class=\\\"s-light-font description\\\">total \"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"citationLabel\") || (depth0 != null ? lookupProperty(depth0,\"citationLabel\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"citationLabel\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":76,\"column\":53},\"end\":{\"line\":76,\"column\":70}}}) : helper)))\n    + \" </span>\\n      </span>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3=\"function\", alias4=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div role=\\\"search\\\">\\n  <div class=\\\"row\\\">\\n    <h2 class=\\\"sr-only\\\">Search Bar to Enter New Query</h2>\\n    <div class=\\\"col-sm-12 s-quick-add\\\" aria-label=\\\"quick add fields\\\">\\n      <div id=\\\"expanded-search-form\\\" class=\\\"unselectable\\\">\\n        <div id=\\\"field-options\\\">\\n          <span class=\\\"s-field-options\\\">quick field:</span>\\n\\n          <span class=\\\"visible-sm-inline visible-md-inline visible-lg-inline\\\">\\n            <button class=\\\"btn btn-link btn-sm\\\" title='search for an author, e.g. author:\\\"Kurtz,M\\\"' data-toggle=\\\"tooltip\\\" data-field=\\\"author\\\" data-punc='\\\"'>Author</button>\\n            <button class=\\\"btn btn-link btn-sm\\\" title='search for a first author, e.g. author:\\\"^Kurtz,M\\\"' data-toggle=\\\"tooltip\\\" data-field=\\\"first-author\\\" data-punc='\\\"'>First Author</button>\\n            <button class=\\\"btn btn-link btn-sm\\\" title=\\\"limit search to abstract, title and keyword fields\\\" data-toggle=\\\"tooltip\\\" data-field=\\\"abs\\\" data-punc='\\\"'>Abstract</button>\\n          </span>\\n\\n          <span class=\\\"visible-lg-inline\\\">\\n            <button class=\\\"btn btn-link btn-sm\\\" title=\\\"e.g. year:1999 or year:1999-2016\\\" data-toggle=\\\"tooltip\\\" data-field=\\\"year\\\">Year</button>\\n            <button class=\\\"btn btn-link btn-sm\\\" title=\\\"search titles, abstract, text, keywords and acknowledgements of the articles\\\" data-toggle=\\\"tooltip\\\" data-field=\\\"full\\\" data-punc='\\\"'>Fulltext</button>\\n          </span>\\n\\n          <!--container for additional fields/operators-->\\n          <span id=\\\"option-dropdown-container\\\"></span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\"></div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12 search-bar-input-row s-search-bar-input-row\\\">\\n      <form name=\\\"main-query\\\" action=\\\"/search/q=%s\\\">\\n        <div class=\\\"form-group has-feedback\\\">\\n          <div class=\\\"input-group\\\">\\n            \"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"bigquery\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.program(6, data, 0),\"data\":data,\"loc\":{\"start\":{\"line\":32,\"column\":12},\"end\":{\"line\":49,\"column\":19}}})) != null ? stack1 : \"\")\n    + \"            <span class=\\\"input-group-btn\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary search-submit s-search-submit\\\" aria-label=\\\"submit\\\">\\n                          <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i></button>\\n                  </span>\\n\\n          </div>\\n          <!-- /input-group -->\\n        </div>\\n        <!-- /form-group-->\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"s-num-found\\\" role=\\\"status\\\" aria-atomic=\\\"true\\\" aria-labelledby=\\\"num-found-title\\\">\\n    <div class=\\\"sr-only\\\" id=\\\"num-found-title\\\">\\n      Your search returned \"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"numFound\") || (depth0 != null ? lookupProperty(depth0,\"numFound\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"numFound\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":66,\"column\":27},\"end\":{\"line\":66,\"column\":39}}}) : helper)))\n    + \" results\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"citationCount\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(8, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":67,\"column\":6},\"end\":{\"line\":69,\"column\":13}}})) != null ? stack1 : \"\")\n    + \"    </div>\\n    <span class=\\\"s-light-font description\\\">Your search returned</span>\\n      <span class=\\\"num-found-container\\\" style=\\\"font-weight: bold;\\\">\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"numFound\") || (depth0 != null ? lookupProperty(depth0,\"numFound\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"numFound\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":72,\"column\":67},\"end\":{\"line\":72,\"column\":79}}}) : helper)))\n    + \"</span>\\n      <span class=\\\"s-light-font\\\"> results </span>\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"citationCount\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(10, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":74,\"column\":4},\"end\":{\"line\":78,\"column\":11}}})) != null ? stack1 : \"\")\n    + \"  </div>\\n</div>\\n</div>\\n\";\n},\"useData\":true});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/search_bar/templates/search_bar_template.html?");

/***/ }),

/***/ "./src/js/widgets/search_bar/templates/search_form_template.html":
/*!***********************************************************************!*\
  !*** ./src/js/widgets/search_bar/templates/search_form_template.html ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../../../../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div id=\\\"search-gui\\\"><span style=\\\"text-align:right;font-size:small;float:right;\\\">This tool is still experimental.</span>\\n</div>\\n\\n\\n\\n\";\n},\"useData\":true});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/search_bar/templates/search_form_template.html?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd define */
/******/ 	!function() {
/******/ 		__webpack_require__.amdD = function () {
/******/ 			throw new Error('define cannot be used indirect');
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/amd options */
/******/ 	!function() {
/******/ 		__webpack_require__.amdO = {};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	!function() {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = function(result, chunkIds, fn, priority) {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var chunkIds = deferred[i][0];
/******/ 				var fn = deferred[i][1];
/******/ 				var priority = deferred[i][2];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.nmd = function(module) {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"SearchWidget": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkbumblebee"] = self["webpackChunkbumblebee"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	!function() {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendor"], function() { return __webpack_require__("./src/js/widgets/search_bar/search_bar_widget.js"); })
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;