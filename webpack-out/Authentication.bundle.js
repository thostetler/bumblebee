/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/components/analytics.js":
/*!****************************************!*\
  !*** ./src/js/components/analytics.js ***!
  \****************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  /*\n   * Set of targets\n   * each has a set of hooks which coorespond to the event label passed\n   * types represents the possible event targets which can be used\n   * url is a template which will be passed the incoming data\n   */\n  var TARGETS = {\n    resolver: {\n      hooks: ['toc-link-followed', 'abstract-link-followed', 'citations-link-followed', 'associated-link-followed'],\n      types: ['abstract', 'citations', 'references', 'metrics', 'coreads', 'similar', 'graphics', 'associated', 'toc'],\n      url: function url(_ref) {\n        var bibcode = _ref.bibcode,\n            target = _ref.target;\n        return \"link_gateway/\".concat(bibcode, \"/\").concat(target);\n      }\n    }\n  };\n  /**\n   * fire off the xhr request to the url\n   *\n   * @param {string} url\n   * @param {object} data\n   */\n\n  var sendEvent = function sendEvent(url) {\n    window.fetch(url, {\n      method: 'GET'\n    }).catch(function (error) {\n      window.getSentry().captureMessage('Failed to send analytics event', {\n        extra: {\n          url: url,\n          error: error.message\n        }\n      });\n    });\n  };\n\n  var isValidEvent = function isValidEvent(_ref2) {\n    var label = _ref2.label,\n        target = _ref2.target;\n\n    if (typeof label !== 'string' || typeof target !== 'string') {\n      return false;\n    }\n\n    return TARGETS.resolver.hooks.includes(label) && TARGETS.resolver.types.includes(target);\n  };\n  /**\n   * Go through the targets and fire the event if the label passed\n   * matches one of the hooks specified.  Also the data.target must match one\n   * of the types listed on the target config\n   *\n   * @param {string} label - the event label\n   * @param {object} data - the event data\n   */\n\n\n  var adsLogger = function adsLogger(label, data) {\n    var target = data ? data.target : null;\n    var bibcode = data ? data.bibcode : null;\n\n    if (bibcode !== null && isValidEvent({\n      label: label,\n      target: target\n    })) {\n      sendEvent(data.url ? data.url : TARGETS.resolver.url({\n        bibcode: bibcode,\n        target: target\n      }));\n    }\n  };\n\n  var buffer = [];\n  var gaName = window.GoogleAnalyticsObject || 'ga';\n\n  var cleanBuffer = function cleanBuffer() {\n    if (window[gaName]) {\n      for (var i = 0; i < buffer.length; i++) {\n        window[gaName].apply(this, buffer[i]);\n      }\n\n      buffer = [];\n    }\n  };\n\n  var CACHE_TIMEOUT = 300;\n  /**\n   * Simple debouncing mechanism with caching\n   * this will store stringified version of the incoming events and provide a way to\n   * check if the event has recently been cached.  With a short rolling timer to keep the timeout short to hopefully\n   * only target duplicate calls.\n   */\n\n  var AnalyticsCacher = /*#__PURE__*/function () {\n    function AnalyticsCacher() {\n      _classCallCheck(this, AnalyticsCacher);\n\n      this.timer = null;\n      this.cache = new Set();\n    }\n\n    _createClass(AnalyticsCacher, [{\n      key: \"stringify\",\n      value: function stringify(args) {\n        return JSON.stringify(args, function (key, value) {\n          // filter out this cache-buster id added by GTM\n          if (key === 'gtm.uniqueEventId') {\n            return undefined;\n          }\n\n          return value;\n        });\n      }\n    }, {\n      key: \"add\",\n      value: function add() {\n        this._resetTimeout();\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return this.cache.add(this.stringify(args));\n      }\n    }, {\n      key: \"has\",\n      value: function has() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return this.cache.has(this.stringify(args));\n      }\n    }, {\n      key: \"_resetTimeout\",\n      value: function _resetTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(this._clear.bind(this), CACHE_TIMEOUT);\n      }\n    }, {\n      key: \"_clear\",\n      value: function _clear() {\n        this.cache.clear();\n      }\n    }]);\n\n    return AnalyticsCacher;\n  }();\n\n  var cacher = new AnalyticsCacher();\n\n  var Analytics = function Analytics(action, event, type, description) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 4 ? _len3 - 4 : 0), _key3 = 4; _key3 < _len3; _key3++) {\n      args[_key3 - 4] = arguments[_key3];\n    }\n\n    if (cacher.has(arguments)) {\n      return;\n    }\n\n    cacher.add(arguments);\n    adsLogger.apply(null, Array.prototype.slice.call(arguments, 3)); // if the action is send and the event is event, then we want to send the event to the dataLayer\n\n    if (Array.isArray(window.dataLayer) && action === 'send' && event === 'event') {\n      // some events are 'interaction' or 'error', so add that to the event name\n      window.dataLayer.push({\n        event: \"\".concat(type, \"_\").concat(description),\n        // if the next argument is an object, we'll use that as the data, ignore an extra arguments\n        value1: args[0],\n        value2: args[1],\n        value3: args[2]\n      });\n    } else if (Array.isArray(window.dataLayer) && action === 'send') {\n      window.dataLayer.push({\n        event: event,\n        value1: type,\n        value2: description,\n        value3: args[0]\n      });\n    } else if (Array.isArray(window.dataLayer) && action === 'set') {\n      window.dataLayer.push({\n        event: 'config',\n        value1: event,\n        value2: type,\n        value3: description\n      });\n    }\n  };\n  /**\n   * Get the datalayer for sending events to\n   * @returns {*|*[]}\n   */\n\n\n  Analytics.getDL = function () {\n    if (window.dataLayer && Array.isArray(window.dataLayer)) {\n      return window.dataLayer;\n    }\n\n    return [];\n  };\n  /**\n   * Push a new object to the datalayer\n   * @param {Object} data\n   */\n\n\n  Analytics.push = function (data) {\n    if (cacher.has(data)) {\n      return;\n    }\n\n    cacher.add(data);\n    Analytics.getDL().push(data);\n  };\n  /**\n   * Reset the datalayer\n   */\n\n\n  Analytics.reset = function () {\n    Analytics.getDL().push(function () {\n      this.reset();\n    });\n  };\n  /**\n   * set a value on the datalayer\n   * @param {string} property\n   * @param {unknown} value\n   */\n\n\n  Analytics.set = function (property, value) {\n    Analytics.getDL().push(function () {\n      this.set(property, value);\n    });\n  };\n  /**\n   * get a value on the datalayer\n   * @param {string} property\n   */\n\n\n  Analytics.get = function (property) {\n    var value;\n    Analytics.getDL().push(function () {\n      value = this.get(property);\n    });\n    return value;\n  };\n\n  return Analytics;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/analytics.js?");

/***/ }),

/***/ "./src/js/components/api_feedback.js":
/*!*******************************************!*\
  !*** ./src/js/components/api_feedback.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/mixins/hardened */ \"./src/js/mixins/hardened.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, Hardened) {\n  var ApiFeedback = function ApiFeedback(options) {\n    _.extend(this, _.defaults(options || {}, {\n      code: 200,\n      msg: undefined\n    }));\n\n    this.setCode(this.code);\n  };\n\n  ApiFeedback.CODES = {\n    INVALID_PASSWORD: 498,\n    ACCOUNT_NOT_FOUND: 495,\n    // Account not found during signin\n    ALREADY_LOGGED_IN: 493,\n    // Already signed during signup\n    REQUIRES_LOGIN: 491,\n    TOO_MANY_CHARACTERS: 486,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    INTERNAL_SERVER_ERROR: 500,\n    BAD_GATEWAY: 502,\n    SERVER_ERROR: 503,\n    TOO_MANY_FAILURES: 580,\n    ALL_FINE: 200,\n    KEEP_WAITING: 190,\n    TESTING: 0,\n    // Internal events\n    MAKE_SPACE: -1,\n    UNMAKE_SPACE: -1.1,\n    SEARCH_CYCLE_STARTED: -2,\n    SEARCH_CYCLE_FAILED_TO_START: -3,\n    SEARCH_CYCLE_PROGRESS: -4,\n    SEARCH_CYCLE_STOP_MONITORING: -5,\n    SEARCH_CYCLE_FINISHED: -6,\n    QUERY_ASSISTANT: -7,\n    ALERT: -8,\n    CANNOT_ROUTE: -9,\n    API_REQUEST_ERROR: -10,\n    BIBCODE_DATA_REQUESTED: -11\n  };\n  var _codes = {};\n\n  _.each(_.pairs(ApiFeedback.CODES), function (p) {\n    _codes[p[1]] = p[0];\n  });\n\n  _.extend(ApiFeedback.prototype, {\n    hardenedInterface: {\n      code: 'integer value of the code',\n      msg: 'string message',\n      toJSON: 'for cloning',\n      getApiRequest: 'to get the original request',\n      getSenderKey: 'retrieve the senders key'\n    },\n    initialize: function initialize() {},\n    toJSON: function toJSON() {\n      return {\n        code: this.code,\n        msg: this.msg\n      };\n    },\n    setCode: function setCode(c) {\n      if (!_codes[c]) {\n        throw new Error('This code is not in the list ApiCodes - please extend js/components/api_feedback first:', this.code);\n      }\n\n      this.code = c;\n    },\n    setApiRequest: function setApiRequest(apiRequest) {\n      this.req = apiRequest;\n    },\n    getApiRequest: function getApiRequest() {\n      return this.req;\n    },\n    setMsg: function setMsg(msg) {\n      this.msg = msg;\n    },\n    getSenderKey: function getSenderKey() {\n      return this.senderKey;\n    },\n    setSenderKey: function setSenderKey(key) {\n      this.senderKey = key;\n    }\n  }, Hardened);\n\n  ApiFeedback.extend = Backbone.Model.extend;\n  return ApiFeedback;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_feedback.js?");

/***/ }),

/***/ "./src/js/components/api_query.js":
/*!****************************************!*\
  !*** ./src/js/components/api_query.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n A facade: api query exposing only the set of functions that we allow. This is\n the module that you want to load in the application (do not load the concrete\n implementaions, such as solr_params !)\n\n Put in your config:\n map: {\n 'your/module': {\n 'api_query_impl': 'js/components/specific_impl_of_the_api_query'\n }\n },\n\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/solr_params */ \"./src/js/components/solr_params.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _, ApiQueryImplementation, Facade) {\n  var hardenedInterface = {\n    add: 'add values',\n    set: 'set (replace existing)',\n    get: 'get values',\n    has: 'has a key',\n    hasVal: 'more specific `has` using _.isEmpty',\n    url: 'url string of the params',\n    load: 'loads query as a string',\n    clear: 'clears all values',\n    unset: 'removes a key',\n    toJSON: 'values back as JSON object',\n    clone: 'make a copy',\n    isLocked: true,\n    lock: true,\n    unlock: true,\n    pairs: 'get all values as pairs',\n    keys: 'as keys',\n    values: 'only values',\n    hasChanged: 'whether this object has modification (since its creation)',\n    previousAttributes: 'get all changed attributes',\n    previous: 'previous values for a given attribute'\n  };\n\n  var ApiQuery = function ApiQuery(data, options) {\n    // Facade pattern, we want to expose only limited API\n    // despite the fact that the underlying instance has\n    // all power of the Backbone.Model\n    if (data instanceof ApiQueryImplementation) {\n      this.innerQuery = new Facade(hardenedInterface, data);\n    } else {\n      this.innerQuery = new Facade(hardenedInterface, new ApiQueryImplementation(data, options));\n    }\n  };\n\n  var toInsert = {};\n\n  _.each(_.keys(hardenedInterface), function (element, index, list) {\n    toInsert[element] = function () {\n      return this.innerQuery[element].apply(this.innerQuery, arguments);\n    };\n  });\n\n  _.extend(ApiQuery.prototype, toInsert, {\n    clone: function clone() {\n      var clone = this.innerQuery.clone.apply(this.innerQuery, arguments);\n      return new ApiQuery(clone);\n    },\n    load: function load() {\n      var clone = this.innerQuery.load.apply(this.innerQuery, arguments);\n      return new ApiQuery(clone);\n    }\n  });\n\n  return ApiQuery;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_query.js?");

/***/ }),

/***/ "./src/js/components/api_request.js":
/*!******************************************!*\
  !*** ./src/js/components/api_request.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/28/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\"), __webpack_require__(/*! js/components/default_request */ \"./src/js/components/default_request.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, Facade, ApiRequestImpl) {\n  var hardenedInterface = {\n    // add makes no sense with request\n    get: 'get a key',\n    set: 'set (replace existing)',\n    url: 'url string defining this request',\n    has: 'has a key',\n    load: 'loads request as a string',\n    clear: 'clears all values',\n    unset: 'removes a key',\n    toJSON: 'values back as JSON object',\n    clone: 'make a copy',\n    isLocked: true,\n    lock: true,\n    unlock: true,\n    pairs: 'get all values as pairs',\n    keys: 'as keys',\n    values: 'only values',\n    hasChanged: 'whether this object has modification (since its creation)',\n    previousAttributes: 'get all changed attributes',\n    previous: 'previous values for a given attribute'\n  };\n\n  var ApiRequest = function ApiRequest(data, options) {\n    // Facade pattern, we want to expose only limited API\n    // despite the fact that the underlying instance has\n    // all power of the Backbone.Model\n    if (data instanceof ApiRequestImpl) {\n      this.innerRequest = new Facade(hardenedInterface, data);\n    } else {\n      this.innerRequest = new Facade(hardenedInterface, new ApiRequestImpl(data, options));\n    }\n  };\n\n  var toInsert = {};\n\n  _.each(_.keys(hardenedInterface), function (element, index, list) {\n    toInsert[element] = function () {\n      return this.innerRequest[element].apply(this.innerRequest, arguments);\n    };\n  });\n\n  _.extend(ApiRequest.prototype, toInsert, {\n    clone: function clone() {\n      var clone = this.innerRequest.clone.apply(this.innerRequest, arguments);\n      return new ApiRequest(clone);\n    },\n    load: function load() {\n      var clone = this.innerRequest.load.apply(this.innerRequest, arguments);\n      return new ApiRequest(clone);\n    }\n  });\n\n  return ApiRequest;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_request.js?");

/***/ }),

/***/ "./src/js/components/api_targets.js":
/*!******************************************!*\
  !*** ./src/js/components/api_targets.js ***!
  \******************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 1/20/15\n *\n * contains api targets\n * and any related limits\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var config = {\n    BOOTSTRAP: '/accounts/bootstrap',\n    SEARCH: 'search/query',\n    QTREE: 'search/qtree',\n    BIGQUERY: 'search/bigquery',\n    EXPORT: 'export/',\n    SERVICE_AUTHOR_NETWORK: 'vis/author-network',\n    SERVICE_PAPER_NETWORK: 'vis/paper-network',\n    SERVICE_WORDCLOUD: 'vis/word-cloud',\n    SERVICE_METRICS: 'metrics',\n    SERVICE_OBJECTS: 'objects',\n    SERVICE_OBJECTS_QUERY: 'objects/query',\n    SERVICE_CITATION_HELPER: 'citation_helper',\n    SERVICE_AUTHOR_AFFILIATION_EXPORT: 'authoraff',\n    MYADS_STORAGE: 'vault',\n    MYADS_NOTIFICATIONS: 'vault/_notifications',\n    AUTHOR_AFFILIATION_SEARCH: 'author-affiliation/search',\n    AUTHOR_AFFILIATION_EXPORT: 'author-affiliation/export',\n    RESOLVER: 'resolver',\n    CSRF: 'accounts/csrf',\n    USER: 'accounts/user',\n    USER_DATA: 'vault/user-data',\n    SITE_CONFIGURATION: 'vault/configuration',\n    TOKEN: 'accounts/user/token',\n    LOGIN: 'accounts/user/login',\n    LOGOUT: 'accounts/user/logout',\n    VERIFY: 'accounts/verify',\n    RESEND_VERIFY: \"accounts/user/{email}/verify\",\n    RESET_PASSWORD: 'accounts/user/reset-password',\n    CHANGE_PASSWORD: 'accounts/user/change-password',\n    CHANGE_EMAIL: 'accounts/user/change-email',\n    INFO: 'accounts/info',\n    PROTECTED: 'accounts/protected',\n    STATUS: 'accounts/status',\n    RECOMMENDER: 'recommender',\n    GRAPHICS: 'graphics',\n    FEEDBACK: 'feedback',\n    // library import from classic\n    LIBRARY_IMPORT_CLASSIC_AUTH: 'harbour/auth/classic',\n    LIBRARY_IMPORT_CLASSIC_MIRRORS: 'harbour/mirrors',\n    LIBRARY_IMPORT_CLASSIC_TO_BBB: 'biblib/classic',\n    // library import from 2.0\n    LIBRARY_IMPORT_ADS2_AUTH: 'harbour/auth/twopointoh',\n    LIBRARY_IMPORT_ADS2_TO_BBB: 'biblib/twopointoh',\n    LIBRARY_IMPORT_ZOTERO: 'harbour/export/twopointoh/zotero',\n    LIBRARY_IMPORT_MENDELEY: 'harbour/export/twopointoh/mendeley',\n    // returns credentials from both classic and 2.0 if they exist\n    LIBRARY_IMPORT_CREDENTIALS: 'harbour/user',\n    // store ADS information connected with ORCID here\n    ORCID_PREFERENCES: 'orcid/preferences',\n    ORCID_NAME: 'orcid/orcid-name',\n    // library endpoints\n    // can get info about all libraries, or list of bibcodes associated w/specific lib (libraries/id)\n    // post to /libraries/ to create a library\n    LIBRARIES: 'biblib/libraries',\n    LIBRARY_TRANSFER: 'biblib/transfer',\n    // can post, put, and delete changes to individual libs using this endpoint\n    DOCUMENTS: 'biblib/documents',\n    PERMISSIONS: 'biblib/permissions',\n    REFERENCE: 'reference/text',\n\n    /*\n     * this is used by the mixin 'user_change_rows' to set max allowed/default requested\n     */\n    _limits: {\n      // use the same name from discovery.config.js\n      ExportWidget: {\n        default: 500,\n        limit: 3000\n      },\n      Metrics: {\n        default: 7000,\n        limit: 7000\n      },\n      AuthorNetwork: {\n        default: 400,\n        limit: 1000\n      },\n      PaperNetwork: {\n        default: 400,\n        limit: 1000\n      },\n      ConceptCloud: {\n        default: 150,\n        limit: 150\n      },\n      BubbleChart: {\n        // default == limit\n        default: 1500\n      }\n    }\n  }; // add credential info\n  // doesn't require cross domain cookies\n\n  config._doesntNeedCredentials = [config.SEARCH, config.QTREE, config.BIGQUERY, config.EXPORT, config.SERVICE_AUTHOR_NETWORK, config.SERVICE_PAPER_NETWORK, config.SERVICE_WORDCLOUD, config.SERVICE_METRICS, config.RECOMMENDER, config.GRAPHICS, config.FEEDBACK];\n  return config;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_targets.js?");

/***/ }),

/***/ "./src/js/components/default_request.js":
/*!**********************************************!*\
  !*** ./src/js/components/default_request.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Created by rchyla on 3/28/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/multi_params */ \"./src/js/components/multi_params.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, ApiQuery, MultiParams) {\n  var basicCheck = function basicCheck(s) {\n    if (_.isString(s)) {\n      return true;\n    }\n\n    if (_.isArray(s)) {\n      var l = s.length;\n\n      for (var i = 0; i < l; i++) {\n        var x = s[i];\n\n        if (!(_.isString(x) || _.isNumber(x))) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  var allowedAttrs = {\n    query: function query(v) {\n      if (_.isUndefined(v)) {\n        return true;\n      }\n\n      return v instanceof ApiQuery;\n    },\n    target: basicCheck,\n    sender: basicCheck,\n    options: basicCheck\n  };\n  var checker = {\n    target: function target(s) {\n      if (s && s.substring(0, 1) !== '/') {\n        return '/' + s;\n      }\n    }\n  };\n  var Request = MultiParams.extend({\n    /**\n     * Internal method: we allow only certain keys\n     *\n     * @param attributes\n     * @param options\n     * @returns {boolean}\n     * @private\n     */\n    _validate: function _validate(attributes, options) {\n      _.forOwn(attributes, function (val, attr) {\n        var tempVal = attributes[attr];\n\n        if (!(attr in allowedAttrs)) {\n          throw new Error('Invalid attr: ' + attr);\n        }\n\n        if (!allowedAttrs[attr].call(allowedAttrs, tempVal)) {\n          throw new Error('Invalid value:key ' + attr + tempVal);\n        }\n      });\n\n      return true;\n    },\n\n    /**\n     * Modified version of the multi-valued set(); we do not insist\n     * on having the values in array\n     *\n     * @param key\n     * @param val\n     * @param options\n     * @returns {Request}\n     */\n    set: function set(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    // for requests, we use all components: path, query, hash\n    _checkParsed: function _checkParsed(attrs) {\n      if (_.isObject(attrs)) {\n        var ret = {};\n\n        if ('#query' in attrs && !_.isEmpty(attrs['#query'])) {\n          ret.query = new ApiQuery(attrs['#query']);\n        }\n\n        if ('#path' in attrs) {\n          ret.target = attrs['#path'][0];\n        }\n\n        if ('#hash' in attrs) {\n          _.extend(ret, _.each(attrs['#hash'], function (val, key, obj) {\n            if (val.length == 1) {\n              obj[key] = val[0];\n            }\n          }));\n        }\n\n        return ret;\n      }\n\n      return attrs;\n    },\n\n    /*\n     * Return the url string encoding all parameters that made\n     * this request. The parameters will be sorted alphabetically\n     * by their keys and URL encoded so that they can be used\n     * in requests.\n     */\n    url: function url(whatToSort) {\n      if (!whatToSort) {\n        whatToSort = this.attributes;\n      }\n\n      var target = whatToSort.target;\n      var url = target ? _.isArray(target) ? target.join('/') : target : '';\n\n      if ('query' in whatToSort) {\n        url += '?' + whatToSort.query.url();\n      }\n\n      if ('sender' in whatToSort) {\n        url += '#' + MultiParams.prototype.url.call(this, {\n          sender: whatToSort.sender\n        });\n      }\n\n      return url;\n    },\n\n    /**\n     * Re-constructs the query from the url string, returns the json attributes;\n     * cannot be used it the instance is locked\n     *\n     * @param query (String)\n     * @returns {Model}\n     */\n    load: function load(query) {\n      return MultiParams.prototype.load.call(this, query.indexOf('?') > -1 ? query : query + '?');\n    }\n  });\n  return Request;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/default_request.js?");

/***/ }),

/***/ "./src/js/components/facade.js":
/*!*************************************!*\
  !*** ./src/js/components/facade.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/16/14. inspiration: http://jsfiddle.net/pajtai/GD5qR/35/\n */\n\n/*\n * // Interface\n *  var remoteInterface = {\n *    on: 'turn on'\n *  };\n *  // Implementation\n *  var htmlRemote = {\n *    on: function() { console.log(\"remote on\"); return this; }\n *  };\n *  // Protecting the implementation\n *  var htmlInterface = new Facade(remoteInterface, htmlRemote);\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Facade) {\n  // The Facade encapsulates objectIn according to the description\n  // The exposed facade is guaranteed to have exactly the functions described in description.\n  var Facade = function Facade(description, objectIn) {\n    var facade; // TODO: add enforce of \"new\"\n\n    facade = {};\n    this.mixIn(description, objectIn, facade); // TODO: check that \"mixIn\" is not taken\n\n    facade.mixIn = this.mixIn;\n    return facade;\n  };\n\n  Facade.prototype.mixIn = function (description, objectIn, facade) {\n    var property;\n    var propertyValue;\n    facade = facade || this;\n\n    for (property in description) {\n      propertyValue = description[property];\n\n      if (property in objectIn) {\n        var p = objectIn[property];\n\n        if (typeof propertyValue === 'function') {\n          // redefining the method\n          facade[property] = _.bind(propertyValue, objectIn);\n        } else if (typeof p === 'function') {\n          // exposing the method\n          facade[property] = _.bind(p, objectIn);\n        } else if (_.isUndefined(p)) {// pass\n        } else if (_.isString(p) || _.isNumber(p) || _.isBoolean(p) || _.isDate(p) || _.isNull(p) || _.isRegExp(p)) {\n          // build getter method\n          facade['get' + property.substring(0, 1).toUpperCase() + property.substring(1)] = _.bind(function () {\n            return this.ctx[this.name];\n          }, {\n            ctx: objectIn,\n            name: property\n          });\n          facade[property] = p; // copy the value (it is immutable anyways)\n        } else if (p.hasOwnProperty('__facade__') && p.__facade__) {\n          // exposing internal facade\n          facade[property] = p;\n        } else if (_.isObject(p) && 'getHardenedInstance' in p) {\n          // builds a facade\n          facade[property] = p.getHardenedInstance();\n        } else {\n          throw new Error(\"Sorry, you can't wrap '\" + property + \"': \" + p);\n        }\n      } else if (typeof propertyValue === 'function') {\n        facade[property] = _.bind(propertyValue, objectIn);\n      } else {\n        throw new Error('Unknown key: ' + property + '(' + propertyValue + ')');\n      }\n    }\n\n    if (objectIn) {\n      // .name is not supported in IE\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n      facade.__facade__ = Boolean(objectIn.constructor ? objectIn.constructor.name ? objectIn.constructor.name : true : true);\n    } else {\n      facade.__facade__ = true;\n    } // TODO:rca - shall we use?\n    // if (Object.freeze)\n    //  facade = Object.freeze(facade);\n\n\n    return facade;\n  };\n\n  return Facade;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/facade.js?");

/***/ }),

/***/ "./src/js/components/generic_module.js":
/*!*********************************************!*\
  !*** ./src/js/components/generic_module.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * A generic class to be used for building modules (the Marionette.Module)\n * just complicates things. For simple things, just use this class.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _) {\n  // A list of options to be attached directly to the module, if provided.\n  var moduleOptions = ['className', 'activate'];\n\n  var Module = function Module(options) {\n    var defaults;\n    options = options || {};\n    this.mid = _.uniqueId('module');\n\n    _.extend(this, _.pick(options, moduleOptions));\n\n    this.initialize.call(this, options);\n  }; // every module has the Events mixin\n\n\n  _.extend(Module.prototype, Backbone.Events, {\n    className: 'GenericModule',\n    initialize: function initialize() {},\n    destroy: function destroy() {},\n    activate: function activate(options) {\n      _.extend(this, _.pick(options, moduleOptions));\n    }\n  }); // give the module subclassing functionality\n\n\n  Module.extend = Backbone.Model.extend;\n  return Module;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/generic_module.js?");

/***/ }),

/***/ "./src/js/components/multi_params.js":
/*!*******************************************!*\
  !*** ./src/js/components/multi_params.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n multi_params is a generic class to store any parameters;\n it is backed by BB.Model and has all the functionality\n the values are always stored as an array of values; so\n even if you try to set strings, you will always have\n list of strings\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! jquery */ \"./src/libs/jquery.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _, $) {\n  var Model = Backbone.Model.extend({\n    locked: false,\n    _checkLock: function _checkLock() {\n      if (this.locked === true) {\n        throw Error('Object locked for modifications');\n      }\n    },\n    isLocked: function isLocked() {\n      return this.locked;\n    },\n    lock: function lock() {\n      this.locked = true;\n    },\n    unlock: function unlock() {\n      this.locked = false;\n    },\n    clone: function clone() {\n      if (this.isLocked()) {\n        var c = new this.constructor(this.attributes);\n        c.lock();\n        return c;\n      }\n\n      return new this.constructor(this.attributes);\n    },\n    hasVal: function hasVal(key) {\n      return !_.isEmpty(this.get(key));\n    },\n    // we allow only strings and numbers; instead of sending\n    // signal we throw a direct error\n    _validate: function _validate(attributes, options) {\n      // check we have only numbers and/or finite numbers\n      for (var attr in attributes) {\n        if (!_.isString(attr)) {\n          throw new Error('Keys must be strings, not: ' + attr);\n        } // remove empty strings\n\n\n        var tempVal = attributes[attr];\n        tempVal = _.without(_.flatten(tempVal), '', false, null, undefined, NaN);\n\n        if (!_.isArray(tempVal)) {\n          throw new Error('Values were not converted to an Array');\n        }\n\n        if (_.isEmpty(tempVal) && options.unset !== true) {\n          throw new Error('Empty values not allowed');\n        }\n\n        if (!_.every(tempVal, function (v) {\n          return _.isString(v) || _.isNumber(v) && !_.isNaN(v);\n        })) {\n          throw new Error('Invalid value (not a string or number): ' + tempVal);\n        }\n\n        attributes[attr] = tempVal;\n      }\n\n      return true;\n    },\n    // Every value is going to be multi-valued by default\n    // in this way we can treat all objects in the same way\n    set: function set(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      for (var attr in attrs) {\n        var tempVal = attrs[attr]; // convert to array if necessary\n\n        if (!_.isArray(tempVal)) {\n          attrs[attr] = _.flatten([tempVal]);\n        }\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    unset: function unset() {\n      this._checkLock();\n\n      Backbone.Model.prototype.unset.apply(this, arguments);\n    },\n    // adds values to existing (like set, but keeps the old vals)\n    add: function add(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      for (var attr in attrs) {\n        var tempVal = attrs[attr]; // convert to array if necessary\n\n        if (!_.isArray(tempVal)) {\n          tempVal = _.flatten([tempVal]);\n        }\n\n        if (this.has(attr)) {\n          tempVal = _.clone(this.get(attr)).concat(tempVal);\n        }\n\n        attrs[attr] = tempVal;\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    // synchronization is disabled\n    sync: function sync() {\n      throw Error('MultiParams cannot be saved to server');\n    },\n\n    /*\n     * Return the url string encoding all parameters that made\n     * this query. The parameters will be sorted alphabetically\n     * by their keys and URL encoded so that they can be used\n     * in requests.\n     */\n    url: function url(whatToSort) {\n      if (!whatToSort) {\n        whatToSort = this.attributes;\n      } // sort keys alphabetically\n\n\n      var sorted = _.pairs(whatToSort).sort(function (a, b) {\n        return a[0] > b[0] ? 1 : a[0] < b[0] ? -1 : 0;\n      }); // June1:rca - I need to preserve order of values (becuaes of the query modifications/updates) the logic\n      // just requires us to be careful and we need order to be preserved when the query is cloned\n      // also sort values\n      // var s = {};\n      // sorted.map(function(item) { s[item[0]] = (_.isArray(item[1]) ? item[1].sort() : item[1]) });\n      // we have to double encode certain elements\n      // sorted = _.map(sorted, function(pair) { return [pair[0], _.map(pair[1], function(v) {return (v.indexOf && v.indexOf('=') > -1) ? encodeURIComponent(v) : v })]});\n      // use traditional encoding\n      // use %20 instead of + (url encoding instead of form encoding)\n\n\n      var encoded = $.param(_.object(sorted), true);\n      encoded = encoded.replace(/\\+/g, '%20'); // Replace funky unicode quotes with normal ones\n\n      encoded = encoded.replace(/%E2%80%9[ECD]/g, '%22');\n      return encoded;\n    },\n\n    /**\n     * Parses string (urlparams) and returns it as an object\n     * @param resp\n     * @param options\n     * @returns {*}\n     */\n    parse: function parse(resp, options) {\n      if (_.isString(resp)) {\n        var attrs = {};\n        resp = decodeURI(resp);\n\n        if (resp.indexOf('?') > -1) {\n          attrs['#path'] = [resp.slice(0, resp.indexOf('?'))];\n          resp = resp.slice(resp.indexOf('?') + 1);\n        }\n\n        if (resp.indexOf('#') > -1) {\n          attrs['#hash'] = this._parse(resp.slice(resp.indexOf('#') + 1));\n          resp = resp.slice(0, resp.indexOf('#'));\n        }\n\n        attrs['#query'] = this._parse(resp);\n        return this._checkParsed(attrs);\n      }\n\n      return this._checkParsed(resp); // else return resp object\n    },\n    _parse: function _parse(resp) {\n      var attrs = {};\n      var hash;\n\n      if (!resp.trim()) {\n        return attrs;\n      }\n\n      var hashes = resp.slice(resp.indexOf('?') + 1).split('&'); // resp = decodeURIComponent(resp);\n\n      var key;\n      var value;\n\n      for (var i = 0; i < hashes.length; i++) {\n        hash = hashes[i].split('=');\n        key = decodeURIComponent(hash[0].split('+').join(' ')); // optimized: .replace(/\\+/g, \" \")\n\n        var vall = hash[1];\n\n        if (hash.length > 2) {\n          hash.shift();\n          vall = hash.join('=');\n        } // replace literal '%' with code and '+' become literal spaces\n\n\n        value = decodeURIComponent(vall.replace(/%(?!\\d|[ABCDEF]+)/gi, '%25').split('+').join(' '));\n\n        if (attrs[key] !== undefined) {\n          attrs[key].push(value);\n        } else {\n          attrs[key] = [value];\n        }\n      }\n\n      return attrs;\n    },\n    // default behaviour is just to keep the query parameters\n    // after the string was parsed, you can override it to suit other needs\n    _checkParsed: function _checkParsed(attrs) {\n      if (_.isObject(attrs)) {\n        if ('#query' in attrs) {\n          return attrs['#query'];\n        }\n      }\n\n      return attrs;\n    },\n\n    /**\n     * Re-constructs the query from the url string, returns the json attributes;\n     * cannot be used it the instance is locked\n     *\n     * @param query (String)\n     * @returns {Model}\n     */\n    load: function load(query) {\n      this._checkLock();\n\n      var vals = this.parse(query);\n      this.clear();\n      this.set(vals);\n      return this;\n    }\n  });\n  return Model;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/multi_params.js?");

/***/ }),

/***/ "./src/js/components/pubsub_events.js":
/*!********************************************!*\
  !*** ./src/js/components/pubsub_events.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/30/14.\n */\n\n/**\n * Catalogue of PubSub events; we assume this:\n *\n *  - FC = the component lives in the 'Forbidden City'\n *         inside Application, typically this is a PubSub or Api, Mediator\n *         or any component with elevated access\n *\n *  - OC = Outer City: the suburbs of the application; these are typically\n *         UI components (behind the wall), untrusted citizens of the\n *         BumbleBee state\n *\n *  WARNING: do not use spaces; events with spaces are considered to be\n *        multiple events! (e.g. '[PubSub] New-Query' will be two events)\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var PubSubEvents = {\n    /**\n     * Usually called by OC's as a first step in the query processing.\n     * It means: 'user did something', we need to start reacting. The OC\n     * will build a new ApiQuery and send it together with this event\n     */\n    START_SEARCH: '[PubSub]-New-Query',\n\n    /**\n     * Called by FC's (usually: Mediator) - this is a signal to *all* OC's\n     * they should receive ApiQuery object, compare it against their\n     * own query; find diff and create a new ApiRequest (asking for a data)\n     * and send that back\n     */\n    INVITING_REQUEST: '[PubSub]-Inviting-Request',\n\n    /**\n     * Will be called by OC's, this is response to ApiQuery input.\n     */\n    DELIVERING_REQUEST: '[PubSub]-New-Request',\n\n    /**\n     * Will be called by OC's, this is one-time forget action (outside of the\n     * the search cycle); use this for any query that needs to be executed\n     * and not be tracked by search cycle\n     */\n    EXECUTE_REQUEST: '[PubSub]-Execute-Request',\n\n    /**\n     * Called from the router, the QID will be passed; the query needs to be\n     * loaded and executed\n     */\n    EXECUTE_STORED_QUERY: '[PubSub]-Execute-Stored-Query',\n\n    /**\n     * Published by FC's - typically Mediator - when a response has been retrieved\n     * for a given ApiRequest.\n     *\n     * OC's should subscribe to this event when they want to receive data\n     * from the treasury (api)\n     *\n     *  - input: ApiRequest\n     *  - output: ApiResponse\n     */\n    DELIVERING_RESPONSE: '[PubSub]-New-Response',\n\n    /**\n     * The walls of the FC are being closed; and no new requests will be served\n     */\n    CLOSING_GATES: '[PubSub]-Closing',\n\n    /**\n     * PubSub will not receive any requests any more\n     */\n    CLOSED_FOR_BUSINESS: '[PubSub]-Closed',\n\n    /**\n     * ForbiddenCity is about to receive requests\n     */\n    OPENING_GATES: '[PubSub]-Opening',\n\n    /**\n     * Called after PubSub became ready - it is fully operational\n     */\n    OPEN_FOR_BUSINESS: '[PubSub]-Ready',\n\n    /**\n     *  Set of error warnings issues by PubSub - or by some other FC's - to\n     *  deal with congestion or other problems\n     */\n    SMALL_FIRE: '[PubSub]-Problem',\n    BIG_FIRE: '[PubSub]-Big-Problem',\n    CITY_BURNING: '[PubSub]-Disaster',\n\n    /**\n     * A message containing feedback from the FC; traveling towards OC\n     * The feedback will be instance of ApiFeedback\n     */\n    FEEDBACK: '[FC]-FeedBack',\n\n    /**\n     * A message from the router requesting showing citizens of the\n     * city\n     */\n    DISPLAY_DOCUMENTS: '[Router]-Display-Documents',\n    DISPLAY_DOCUMENTS_DETAILS: '[Router]-Display-Documents-Details',\n\n    /**\n     * Used by OC to request parsed query tree - to check a query\n     * for example\n     */\n    GET_QTREE: '[FC]-GetQTree',\n    NAVIGATE: '[Router]-Navigate-With-Trigger',\n\n    /*\n     * so navigator can notify interested widgets about a change\n     * from search page to user page, for instance-- navigator cannot\n     * to this since it listens to many events including widget-show events\n     * */\n    PAGE_CHANGE: '[Navigator]Page-Changed',\n\n    /* for custom widget-to-widget events */\n    CUSTOM_EVENT: '[PubSub]-Custom-Event',\n    ARIA_ANNOUNCEMENT: '[PubSub]-Aria-Announcement',\n\n    /* anything to do with changing the state of the user, including session events */\n    USER_ANNOUNCEMENT: '[PubSub]-User-Announcement',\n\n    /**\n     * A message/action that should be displayed to the user (on prominent)\n     * place\n     */\n    ALERT: '[Alert]-Message',\n    ORCID_ANNOUNCEMENT: '[PubSub]-Orcid-Announcement',\n\n    /**\n     * Happens during the main cycle of the application birth\n     *  LOADED = when all components were successfuly loaded\n     *  BOOTSTRAPPED = + when all dynamic config was loaded\n     *  STARTING = + right before the router and history objects start()\n     *  STARTED = app is alive and handling requests\n     */\n    APP_LOADED: '[App]-Application-Loaded',\n    APP_BOOTSTRAPPED: '[App]-Application-Bootstrapped',\n    APP_STARTING: '[App]-Application-Starting',\n    APP_STARTED: '[App]-Application-Started',\n    APP_EXIT: '[App]-Exit',\n\n    /**\n     * Is triggered when user selects/deselects records\n     */\n    PAPER_SELECTION: '[User]-Paper-Selection',\n    // instead of toggling, adds all papers\n    BULK_PAPER_SELECTION: '[User]-Bulk-Paper-Selection',\n\n    /*\n     * is triggered by app storage itself when list of selected papers changes\n     * */\n    STORAGE_PAPER_UPDATE: '[User]-Paper-Update',\n    LIBRARY_CHANGE: '[PubSub]-Library-Change'\n  };\n  return PubSubEvents;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/pubsub_events.js?");

/***/ }),

/***/ "./src/js/components/pubsub_key.js":
/*!*****************************************!*\
  !*** ./src/js/components/pubsub_key.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/14/14.\n */\n\n/*\n * A simple, yet important, class - every subscriber\n * to the PubSub must contain one key. This class\n * should be instantiated in a safe manner. ie.\n *\n * PubSubKey.newInstance({creator: this});\n *\n * But beware that as long as the subscriber is alive\n * reference to the creator will be saved inside\n * the key! So choose carefully whether you use this\n * functionality\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_) {\n  var PubSubKey = function PubSubKey(options) {\n    _.extend(this, options);\n  };\n\n  _.extend(PubSubKey, {\n    /*\n     * Creates a new Instances of the PubSubKey\n     * with a storage that cannot be changed.\n     * To double sign the key, you can pass\n     * an object that identifies creator of the\n     * key and test identity, eg.\n     *\n     * var creator = {};\n     * var k = PubSubKey(creator);\n     * k.getCreator() === k;\n     *\n     */\n    newInstance: function newInstance(options) {\n      var priv = {\n        id: _.has(options, 'id') ? options.id : _.uniqueId(':psk'),\n        creator: _.has(options, 'creator') ? options.creator : null\n      };\n      return new PubSubKey({\n        getId: function getId() {\n          return priv.id;\n        },\n        getCreator: function getCreator() {\n          return priv.creator;\n        }\n      });\n    }\n  });\n\n  return PubSubKey;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/pubsub_key.js?");

/***/ }),

/***/ "./src/js/components/solr_params.js":
/*!******************************************!*\
  !*** ./src/js/components/solr_params.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\nSubclass of the multi-param with a functionality specific for\nSOLR queries. Do not use this class directly inside your app!\nInstead, import 'api_query' and configure it properly\n\n * <p>For a list of possible parameters, please consult the links below.</p>\n *\n * @see http://wiki.apache.org/solr/CoreQueryParameters\n * @see http://wiki.apache.org/solr/CommonQueryParameters\n * @see http://wiki.apache.org/solr/SimpleFacetParameters\n * @see http://wiki.apache.org/solr/HighlightingParameters\n * @see http://wiki.apache.org/solr/MoreLikeThis\n * @see http://wiki.apache.org/solr/SpellCheckComponent\n * @see http://wiki.apache.org/solr/StatsComponent\n * @see http://wiki.apache.org/solr/TermsComponent\n * @see http://wiki.apache.org/solr/TermVectorComponent\n * @see http://wiki.apache.org/solr/LocalParams\n *\n * @param properties A map of fields to set. Refer to the list of public fields.\n * @class ParameterStore\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! js/components/multi_params */ \"./src/js/components/multi_params.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! jquery */ \"./src/libs/jquery.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (MultiParams, Backbone, _, $) {\n  var SolrParams = MultiParams.extend({\n    fieldsToConcatenate: [],\n    defaultOperator: ' ',\n    fieldProcessors: {\n      '*': function _(vals, self) {\n        return [vals.join(self.defaultOperator)];\n      }\n    },\n    initialize: function initialize(attributes, options) {\n      if (options) {\n        _.extend(this, _.pick(options, ['fieldsToConcatenate', 'defaultOperator', 'fieldProcessors']));\n      }\n    },\n    url: function url(resp, options) {\n      // first massage the fields, but do not touch the original values\n      // lodash has a parameter isDeep that can be set to true, but\n      // for compatibility reasons with underscore, lets' not use it\n      // the values should always be only one level deep\n      var values = _.clone(this.attributes);\n\n      var l = this.fieldsToConcatenate.length;\n      var k = '';\n\n      for (var i = 0; i < l; i++) {\n        k = this.fieldsToConcatenate[i];\n\n        if (this.has(k)) {\n          if (this.fieldProcessors[k]) {\n            values[k] = this.fieldProcessors[k](this.get(k), this);\n          } else {\n            values[k] = this.fieldProcessors['*'](this.get(k), this);\n          }\n        }\n      } // then call the default implementation of the url handling\n\n\n      return MultiParams.prototype.url.call(this, values);\n    }\n  });\n  return SolrParams;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/solr_params.js?");

/***/ }),

/***/ "./src/js/components/user.js":
/*!***********************************!*\
  !*** ./src/js/components/user.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * A generic class that lazy-loads User info\n *\n *\n * there are only three USER_ANNOUNCEMENT events that widgets can subscribe to:\n *\n * user.USER_SIGNED_IN: (third argument is username)\n * user.USER_SIGNED_OUT: (third argument is undefined)\n * user.USER_INFO_CHANGE: (third argument is dict of changed values)\n *\n * the user has two models:\n *\n * userModel represents the logged-in user and\n * stores values that should be synced with the user account,\n *\n * localStorageModel represents all values stored in local storage,\n * right now this is limited to orcidModeOn\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/components/api_request */ \"./src/js/components/api_request.js\"), __webpack_require__(/*! js/components/api_targets */ \"./src/js/components/api_targets.js\"), __webpack_require__(/*! js/components/generic_module */ \"./src/js/components/generic_module.js\"), __webpack_require__(/*! js/mixins/dependon */ \"./src/js/mixins/dependon.js\"), __webpack_require__(/*! js/mixins/hardened */ \"./src/js/mixins/hardened.js\"), __webpack_require__(/*! js/components/api_feedback */ \"./src/js/components/api_feedback.js\"), __webpack_require__(/*! js/mixins/api_access */ \"./src/js/mixins/api_access.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, ApiRequest, ApiTargets, GenericModule, Dependon, Hardened, ApiFeedback, ApiAccess) {\n  var LocalStorageModel;\n  var UserModel;\n  var User; // any variable that doesn't track with user accounts\n\n  LocalStorageModel = Backbone.Model.extend({\n    defaults: function defaults() {\n      return {\n        isOrcidModeOn: false,\n        // eventually propagate this to user account\n        perPage: undefined\n      };\n    }\n  }); // this data reflects user accounts\n\n  UserModel = Backbone.Model.extend({\n    defaults: function defaults() {\n      return {\n        user: undefined,\n        link_server: undefined,\n        minAuthorPerResult: 4,\n        externalLinkAction: 'Open in new tab',\n        defaultDatabase: [{\n          name: 'Physics',\n          value: false\n        }, {\n          name: 'Astronomy',\n          value: false\n        }, {\n          name: 'General',\n          value: false\n        }],\n        defaultExportFormat: 'BibTeX',\n        defaultHideSidebars: 'Show',\n        customFormats: [],\n        recentQueries: []\n      };\n    }\n  });\n  User = GenericModule.extend({\n    initialize: function initialize(options) {\n      // this model is for settings that come from PersistentStorage service\n      this.localStorageModel = new LocalStorageModel();\n      this.listenTo(this.localStorageModel, 'change', this.broadcastUserDataChange); // this model is for settings that come from user accounts\n\n      this.userModel = new UserModel();\n      this.listenTo(this.userModel, 'change:user', this.broadcastUserChange);\n      this.listenTo(this.userModel, 'change', function (key) {\n        if (key !== 'user') this.broadcastUserDataChange.apply(this, arguments);\n      });\n\n      _.bindAll(this, 'completeLogIn', 'completeLogOut'); // set base url, currently only necessary for change_email endpoint\n\n\n      this.base_url = this.test ? 'location.origin' : location.origin;\n      this.buildAdditionalParameters();\n    },\n    activate: function activate(beehive) {\n      this.setBeeHive(beehive); // Check if the Orcid access was revoked by the user\n      // It will only be considered 'revoked' if a 401 is received by the API handler\n\n      var checkOrcidToken = function checkOrcidToken() {\n        var orcidApi = beehive.getService('OrcidApi');\n        var user = beehive.getObject('User'); // Only run if there is actually authData stored in the user object\n\n        if (orcidApi.authData !== null) {\n          orcidApi.checkAccessOrcidApiAccess().fail(function (xHr) {\n            var statusCode = xHr && xHr.status;\n\n            if (statusCode && statusCode === '401') {\n              orcidApi.signOut();\n              user.setOrcidMode(0);\n            }\n          });\n        }\n      };\n\n      this.getPubSub().subscribe(this.getPubSub().APP_STARTING, checkOrcidToken);\n      var storage = beehive.getService('PersistentStorage');\n\n      if (storage) {\n        var prefs = storage.get('UserPreferences');\n\n        if (prefs) {\n          this.localStorageModel.set(prefs);\n        }\n      }\n    },\n    // general persistent storage\n    _persistModel: function _persistModel() {\n      var storage = this.getBeeHive().getService('PersistentStorage');\n\n      if (storage) {\n        storage.set('UserPreferences', this.localStorageModel.toJSON());\n      }\n    },\n\n    /* generic set localStorage function */\n    setLocalStorage: function setLocalStorage(obj) {\n      this.localStorageModel.set(obj);\n\n      this._persistModel();\n    },\n\n    /* generic get localStorage function, gives you everything */\n    getLocalStorage: function getLocalStorage(obj) {\n      return this.localStorageModel.toJSON();\n    },\n    // add a query to a recent queries list\n    addToRecentQueries: function addToRecentQueries(apiQuery) {\n      var MAX = 10;\n\n      try {\n        var recent = this.userModel.get('recentQueries'); // only allow a max number of recent queries\n\n        recent.length >= MAX && recent.pop();\n        recent.unshift(apiQuery.clone().toJSON());\n        this.userModel.set('recentQueries', recent); // on set, attempt to synchronize with server\n\n        this.setUserData({\n          recentQueries: recent\n        });\n      } catch (e) {\n        recent = [];\n      }\n\n      return recent;\n    },\n    getRecentQueries: function getRecentQueries() {\n      return this.userModel.get('recentQueries') || [];\n    },\n\n    /* orcid functions */\n    setOrcidMode: function setOrcidMode(val) {\n      this.localStorageModel.set('isOrcidModeOn', val);\n\n      this._persistModel();\n    },\n    isOrcidModeOn: function isOrcidModeOn() {\n      return this.localStorageModel.get('isOrcidModeOn');\n    },\n\n    /* general functions */\n    // tell widgets that data changed, and send them that data\n    broadcastUserDataChange: function broadcastUserDataChange(changedModel) {\n      this.getPubSub().publish(this.getPubSub().USER_ANNOUNCEMENT, this.USER_INFO_CHANGE, changedModel.changed);\n    },\n    broadcastUserChange: function broadcastUserChange() {\n      // user has signed in or out\n      var message = this.userModel.get('user') ? this.USER_SIGNED_IN : this.USER_SIGNED_OUT;\n      this.getPubSub().publish(this.getPubSub().USER_ANNOUNCEMENT, message, this.userModel.get('user'));\n      this.redirectIfNecessary();\n    },\n    buildAdditionalParameters: function buildAdditionalParameters() {\n      // any extra info that needs to be sent in post or get requests\n      // but not known about by the widget models goes here\n      this.additionalParameters = {};\n    },\n    handleFailedPOST: function handleFailedPOST(jqXHR, status, errorThrown, target) {\n      var pubsub = this.getPubSub();\n      var error;\n\n      if (jqXHR.responseJSON && jqXHR.responseJSON.error) {\n        error = jqXHR.responseJSON.error;\n      } else if (jqXHR.responseText) {\n        error = jqXHR.responseText;\n      } else {\n        error = 'error unknown';\n      }\n\n      console.error('POST request failed for endpoint: [' + target + ']', error);\n    },\n    handleFailedGET: function handleFailedGET(jqXHR, status, errorThrown, target) {\n      var pubsub = this.getPubSub();\n      var error;\n\n      if (jqXHR.responseJSON && jqXHR.responseJSON.error) {\n        error = jqXHR.responseJSON.error;\n      } else if (jqXHR.responseText) {\n        error = jqXHR.responseText;\n      } else {\n        error = 'error unknown';\n      }\n\n      console.error('GET request failed for endpoint: [' + target + ']', error);\n    },\n    fetchData: function fetchData(target) {\n      return this.composeRequest({\n        target: target,\n        method: 'GET'\n      });\n    },\n\n    /*\n     * POST data to endpoint: accessible through facade\n     *\n     * */\n    postData: function postData(target, data) {\n      if (this.additionalParameters[target]) {\n        _.extend(data, this.additionalParameters[target]);\n      }\n\n      return this.composeRequest({\n        target: target,\n        method: 'POST',\n        data: data\n      });\n    },\n\n    /* PUT data to pre-existing endpoint: accessible through facade */\n    putData: function putData(target, data) {\n      if (this.additionalParameters[target]) {\n        _.extend(data, this.additionalParameters[target]);\n      }\n\n      return this.composeRequest({\n        target: target,\n        method: 'PUT',\n        data: data\n      });\n    },\n\n    /*\n     * every time a csrf token is required, app storage will request a new token,\n     * so it allows you to attach callbacks to the promise it returns\n     * */\n    sendRequestWithNewCSRF: function sendRequestWithNewCSRF(callback) {\n      callback = _.bind(callback, this);\n      this.getBeeHive().getObject('CSRFManager').getCSRF().done(callback);\n    },\n\n    /*\n     * returns a promise\n     * */\n    composeRequest: function composeRequest(config) {\n      var target = config.target;\n      var method = config.method;\n      var data = config.data || {};\n      var csrf = data.csrf; // don't want to send this to the endpoint\n\n      var data = _.omit(data, 'csrf');\n\n      var endpoint = ApiTargets[target];\n      var that = this;\n      var deferred = $.Deferred();\n      var requestData;\n\n      function done() {\n        deferred.resolve.apply(deferred, arguments);\n      } // will have a default fail message for get requests or put/post requests\n\n\n      function fail() {\n        var toCall = method == 'GET' ? that.handleFailedGET : that.handleFailedPOST;\n        var argsWithTarget = [].slice.apply(arguments);\n        argsWithTarget.push(target);\n        toCall.apply(that, argsWithTarget);\n        deferred.reject.apply(deferred, arguments);\n      }\n\n      requestData = {\n        target: endpoint,\n        options: {\n          context: this,\n          type: method,\n          data: !_.isEmpty(data) ? JSON.stringify(data) : undefined,\n          contentType: 'application/json',\n          done: done,\n          fail: fail\n        }\n      }; // it came from a form, needs to have a csrf token\n\n      if (csrf) {\n        this.sendRequestWithNewCSRF(function (csrfToken) {\n          requestData.options.headers = {\n            'X-CSRFToken': csrfToken\n          };\n          this.getBeeHive().getService('Api').request(new ApiRequest(requestData));\n        });\n      } else {\n        this.getBeeHive().getService('Api').request(new ApiRequest(requestData));\n      }\n\n      return deferred.promise();\n    },\n    redirectIfNecessary: function redirectIfNecessary() {\n      var pubsub = this.getPubSub(); // redirect user to wherever they were before authentication page\n\n      if (this.getBeeHive().getObject('MasterPageManager').currentChild === 'AuthenticationPage' && this.isLoggedIn()) {\n        // so that navigator can redirect to the proper page\n        var previousNav = this.getBeeHive().getService('HistoryManager').getPreviousNav(); // If there there was no history, redirect to landing page\n\n        if (!previousNav) {\n          previousNav = 'index-page';\n        }\n\n        pubsub.publish.apply(pubsub, [pubsub.NAVIGATE].concat(previousNav));\n      } else if (this.getBeeHive().getObject('MasterPageManager').currentChild === 'SettingsPage' && !this.isLoggedIn()) {\n        pubsub.publish(pubsub.NAVIGATE, 'authentication-page');\n      }\n    },\n\n    /* set user */\n    setUser: function setUser(email) {\n      this.userModel.set('user', email);\n\n      if (this.isLoggedIn()) {\n        this.completeLogIn();\n      }\n    },\n    // this function is called immediately after the login is confirmed\n    // get the user's data from myads\n    completeLogIn: function completeLogIn() {\n      var that = this;\n      this.fetchData('USER_DATA').done(function (data) {\n        that.userModel.set(data);\n      });\n    },\n    // this function is called immediately after the logout is confirmed\n    completeLogOut: function completeLogOut() {\n      this.userModel.clear();\n    },\n    // publicly accessible\n    deleteAccount: function deleteAccount() {\n      var that = this;\n      return this.composeRequest({\n        target: 'USER',\n        method: 'DELETE',\n        data: {\n          csrf: true\n        }\n      }).done(function () {\n        that.getApiAccess({\n          reconnect: true\n        }).done(function () {\n          that.completeLogOut();\n        });\n      });\n    },\n    changeEmail: function changeEmail(data) {\n      var _this = this;\n\n      var new_email = data.email;\n\n      var onDone = function onDone() {\n        // publish alert\n        var alertSuccess = function alertSuccess() {\n          setTimeout(function () {\n            var message = '<p>Please check <b>' + new_email + \"</b> for further instructions</p><p>(If you don't see the email, please <b>check your spam folder</b>)</p>\";\n\n            _this.getPubSub().publish(_this.getPubSub().ALERT, new ApiFeedback({\n              code: 0,\n              msg: message,\n              type: 'success',\n              title: 'Success',\n              modal: true\n            }));\n          }, 100);\n        }; // need to do it this way so the alert doesnt get lost after page is changed\n\n\n        _this.getPubSub().subscribeOnce(_this.getPubSub().NAVIGATE, alertSuccess);\n\n        _this.getPubSub().publish(_this.getPubSub().NAVIGATE, 'index-page');\n      };\n\n      data = _.extend(_.pick(data, ['email', 'password']), {\n        csrf: true\n      });\n      return this.postData('CHANGE_EMAIL', data).done(onDone);\n    },\n    changePassword: function changePassword(data) {\n      data = _.extend(data, {\n        csrf: true\n      });\n      return this.postData('CHANGE_PASSWORD', data);\n    },\n    // returns a promise\n    getToken: function getToken() {\n      return this.fetchData('TOKEN');\n    },\n    generateToken: function generateToken() {\n      return this.putData('TOKEN', {\n        csrf: true\n      });\n    },\n    getUserData: function getUserData() {\n      return this.userModel.toJSON();\n    },\n\n    /*\n     * POST an update to the myads user_data endpoint\n     * (success will automatically update the user object's model of myads data)\n     * */\n    setUserData: function setUserData(data) {\n      var that = this;\n      return this.postData('USER_DATA', data).done(function (data) {\n        that.userModel.set(data);\n      });\n    },\n    getUserName: function getUserName() {\n      return this.userModel.get('user');\n    },\n    isLoggedIn: function isLoggedIn() {\n      return !!this.userModel.get('user');\n    },\n\n    /*\n     * POST an update to the myads user_data endpoint\n     * (success will automatically update the user object's model of myads data)\n     * */\n    setMyADSData: function setMyADSData(data) {\n      return this.postData('USER_DATA', data);\n    },\n\n    /*\n     * this function queries the myads open url configuration endpoint\n     * and returns a promise that it resolves with the data\n     * (it is only needed by the preferences widget)\n     * */\n    getOpenURLConfig: function getOpenURLConfig() {\n      return this.getSiteConfig('link_servers');\n    },\n    getSiteConfig: function getSiteConfig(key) {\n      var deferred = $.Deferred();\n\n      function done(data) {\n        deferred.resolve(data);\n      }\n\n      function fail(data) {\n        deferred.reject(data);\n      }\n\n      var request = new ApiRequest({\n        target: key ? ApiTargets.SITE_CONFIGURATION + '/' + key : ApiTargets.SITE_CONFIGURATION,\n        options: {\n          type: 'GET',\n          done: done,\n          fail: fail\n        }\n      });\n      this.getBeeHive().getService('Api').request(request);\n      return deferred.promise();\n    },\n    hardenedInterface: {\n      setUser: 'set email into user',\n      isLoggedIn: 'whether the user is logged in',\n      getUserName: \"get the user's email before the @\",\n      setLocalStorage: \"sets an object in to user's local storage\",\n      getLocalStorage: \"gives you a json object for user's local storage\",\n      isOrcidModeOn: 'figure out if user has Orcid mode activated',\n      setOrcidMode: 'set orcid ui on or off',\n      getOpenURLConfig: 'get list of openurl endpoints',\n      getUserData: 'myads data',\n      setUserData: 'POST user data to myads endpoint',\n      getRecentQueries: 'get the 10 most recent queries as array',\n      addToRecentQueries: 'add a query to the set of recent queries',\n      generateToken: 'PUT to token endpoint to make a new token',\n      getToken: 'GET from token endpoint',\n      deleteAccount: 'POST to delete account endpoint',\n      changePassword: 'POST to change password endpoint',\n      changeEmail: 'POST to change email endpoint',\n      setMyADSData: '',\n      USER_SIGNED_IN: 'constant',\n      USER_SIGNED_OUT: 'constant',\n      USER_INFO_CHANGE: 'constant'\n    }\n  });\n\n  _.extend(User.prototype, Hardened, Dependon.BeeHive, Dependon.App, ApiAccess, {\n    USER_SIGNED_IN: 'user_signed_in',\n    USER_SIGNED_OUT: 'user_signed_out',\n    USER_INFO_CHANGE: 'user_info_change'\n  });\n\n  return User;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/user.js?");

/***/ }),

/***/ "./src/js/mixins/api_access.js":
/*!*************************************!*\
  !*** ./src/js/mixins/api_access.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/api_request */ \"./src/js/components/api_request.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, ApiQuery, ApiRequest) {\n  /*\n   * this simple mixin contacts the api (getApiAccess), and if the {reconnect: true} option\n   * is passed to getApiAccess, will save the relevant data.\n   * */\n  return {\n    /**\n     * After bootstrap receives all data, this routine should decide what to do with\n     * them\n     */\n    onBootstrap: function onBootstrap(data) {\n      var beehive = this.getBeeHive(); // set the API key and other data from bootstrap\n\n      if (data.access_token) {\n        beehive.getService('Api').setVals({\n          access_token: \"\".concat(data.token_type, \" \").concat(data.access_token),\n          refresh_token: data.refresh_token,\n          expires_at: data.expires_at\n        });\n        console.warn('Redefining access_token: ' + data.access_token);\n        var userObject = beehive.getObject('User');\n        var userName = data.anonymous ? undefined : data.username;\n        userObject.setUser(userName);\n        var storage = beehive.getService('PersistentStorage');\n        storage && storage.set && storage.set('appConfig', data);\n      } else {\n        console.warn(\"bootstrap didn't provide access_token!\");\n      }\n    },\n    getApiAccess: function getApiAccess(options) {\n      options = options || {};\n      var api = this.getBeeHive().getService('Api');\n      var self = this;\n      var defer = $.Deferred(); // if token expired, make a _request\n\n      var request = options.tokenRefresh ? '_request' : 'request';\n      api[request](new ApiRequest({\n        query: new ApiQuery(),\n        target: this.bootstrapUrls ? this.bootstrapUrls[0] : '/accounts/bootstrap'\n      }), {\n        done: function done(data) {\n          window.getSentry(function (sentry) {\n            sentry.setUser({\n              id: data.access_token,\n              anonymous: data.anonymous\n            });\n          });\n\n          if (options.reconnect) {\n            self.onBootstrap(data);\n          }\n\n          defer.resolve(data);\n        },\n        fail: function fail() {\n          defer.reject.apply(defer, arguments);\n        },\n        type: 'GET'\n      });\n      return defer;\n    }\n  };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/api_access.js?");

/***/ }),

/***/ "./src/js/mixins/dependon.js":
/*!***********************************!*\
  !*** ./src/js/mixins/dependon.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/13/14.\n */\n\n/*\n * This module contains a set of utilities that can be added to classes\n * to give them certain functionality\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/pubsub_events */ \"./src/js/components/pubsub_events.js\"), __webpack_require__(/*! js/components/pubsub_key */ \"./src/js/components/pubsub_key.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, PubSubEvents, PubSubKey) {\n  var Mixin = {\n    /*\n     * BeeHive is the object that allows modules to get access to objects\n     * of the application (but we make sure these objects are protected\n     * and only application can set/change them). This mixin gives objects\n     * functions to query 'BeeHive'\n     */\n    BeeHive: {\n      // called by parents (app) to give modules access\n      setBeeHive: function setBeeHive(brundibar) {\n        if (_.isEmpty(brundibar)) throw new Error('Huh? Empty Beehive? Trying to be funny?');\n        this.__beehive = brundibar;\n      },\n      getBeeHive: function getBeeHive() {\n        if (!this.hasBeeHive()) throw new Error('The BeeHive is inactivate (or dead :<})');\n        return this.__beehive;\n      },\n      hasBeeHive: function hasBeeHive() {\n        if (this.__beehive && (this.__beehive.active || this.__beehive.__facade__ && this.__beehive.getActive())) {\n          return true;\n        }\n\n        return false;\n      },\n\n      /**\n       * Method which returns a masked instance of PubSub (unless the PubSub\n       * is already a hardened instance; which carries its own key)\n       *\n       * You can call pubsub.publish() without having to supply the pubsub key\n       * (which is what most controllers want to do; there are only some\n       * exceptions to this rule; ie. query-mediator). If you need to get\n       * access to the full PubSub (and you have it inside BeeHive) then do\n       * this.getBeeHive().getService('PubSub')\n       */\n      getPubSub: function getPubSub() {\n        if (!this.hasBeeHive()) throw new Error('The BeeHive is inactive (or dead >:})');\n        if (!this.__ctx) this.__ctx = {};\n        if (this.__ctx.pubsub) return this.__ctx.pubsub;\n\n        var pubsub = this.__beehive.getService('PubSub');\n\n        if (pubsub && pubsub.__facade__) return pubsub; // build a unique key for this instance\n\n        this.__ctx.pubsub = {\n          _key: pubsub.getPubSubKey(),\n          _exec: function _exec(name, args) {\n            args = _.toArray(args);\n            if (args[0] instanceof PubSubKey) throw Error('You have given us a PubSub key, this.publish() method does not need it.');\n            args.unshift(this._key);\n            pubsub[name].apply(pubsub, args);\n          },\n          publish: function publish() {\n            this._exec('publish', arguments);\n          },\n          subscribe: function subscribe() {\n            this._exec('subscribe', arguments);\n          },\n          subscribeOnce: function subscribeOnce() {\n            this._exec('subscribeOnce', arguments);\n          },\n          unsubscribe: function unsubscribe() {\n            this._exec('unsubscribe', arguments);\n          },\n          getCurrentPubSubKey: function getCurrentPubSubKey() {\n            return this._key;\n          }\n        };\n\n        _.extend(this.__ctx.pubsub, PubSubEvents);\n\n        return this.__ctx.pubsub;\n      },\n      hasPubSub: function hasPubSub() {\n        if (this.hasBeeHive()) return _.isObject(this.__beehive.getService('PubSub'));\n        return false;\n      }\n    },\n    App: {\n      setApp: function setApp(app) {\n        if (_.isUndefined(app)) throw new Error('App object cannot be empty');\n        this.__app = app;\n      },\n      getApp: function getApp() {\n        return this.__app;\n      },\n      hasApp: function hasApp() {\n        return !_.isEmpty(this.__app);\n      }\n    }\n  };\n  return Mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/dependon.js?");

/***/ }),

/***/ "./src/js/mixins/form_view_functions.js":
/*!**********************************************!*\
  !*** ./src/js/mixins/form_view_functions.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_) {\n  // some functions to be used by form views which auto-validate\n  var formFunctions = {\n    // for the view\n    checkValidationState: function checkValidationState() {\n      // hide help\n      if (this.model.isValidSafe()) {\n        this.$('button[type=submit]').prev('.help-block').html('').addClass('no-show');\n      }\n    },\n    // for the view\n    // when someone clicks on submit button\n    // parent views/controllers need to listen for \"submit-form\" event\n    triggerSubmit: function triggerSubmit(e) {\n      // (only show error messages if submit == true), so once user has unsuccessfully\n      // submitted 1 time\n      // don't need to reset because view will be disposed of after successful submit event\n      this.submit = true;\n\n      if (this.model.isValid(true)) {\n        var working = '<i class=\"fa fa-lg fa-spinner fa-pulse\" aria-hidden=\"true\"></i> Working...';\n        this.trigger('submit-form', this.model);\n        this.$('button[type=submit]').prev('.help-block').addClass('no-show');\n        this.$('button[type=submit]').removeClass('btn-success').addClass('disabled').html(working);\n      } else {\n        this.$('button[type=submit]').prev('.help-block').removeClass('no-show').html('Fields missing or incomplete');\n      }\n\n      return false;\n    },\n    // for the view, to be called onRender\n    activateValidation: function activateValidation() {\n      Backbone.Validation.bind(this, {\n        forceUpdate: true\n      });\n      this.stickit();\n    },\n    // for the model\n    // a way to validate all fields without causing invalid states for empty fields\n    isValidSafe: function isValidSafe() {\n      // check everything that has required=true before you do this.isValid(), and make sure it isn't empty\n      // otherwise the way it is set up, the form will show invalid markers for unentered fields\n      var allRequired = true;\n\n      _.each(this.validation, function (v, k) {\n        if (v.required && !this.get(k)) {\n          allRequired = false;\n        }\n      }, this);\n\n      if (allRequired && this.isValid(true)) {\n        return true;\n      }\n    },\n    // for the model, if it has a validation hash from backbone-validation\n    // right now, useful only for user setting models that combine user-entered info and info from the server\n    reset: function reset() {\n      var valKeys = _.keys(this.validation);\n\n      var skipReset = Array.isArray(this.skipReset) ? this.skipReset : [];\n\n      _.each(this.attributes, function (_v, k) {\n        if (_.contains(valKeys, k) && !_.contains(skipReset, k)) {\n          this.unset(k, {\n            silent: true\n          });\n        }\n      }, this);\n    }\n  };\n  return formFunctions;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/form_view_functions.js?");

/***/ }),

/***/ "./src/js/mixins/hardened.js":
/*!***********************************!*\
  !*** ./src/js/mixins/hardened.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/18/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Facade) {\n  var Mixin = {\n    /*\n     * Creates a hardened instance of itself, it uses\n     * interface description from 'hardenedInterface'\n     * Implementations need to populate 'hardenedInterface'\n     * with list of properties and methods that should be exposed\n     * through the Facade\n     */\n    _getHardenedInstance: function _getHardenedInstance(iface, objectIn) {\n      if (!('hardenedInterface' in this) && !iface) {\n        throw Error('Error: this.hardenedInterface is not defined');\n      }\n\n      return new Facade(iface || ('hardenedInterface' in this ? this.hardenedInterface : {}), objectIn);\n    },\n    getHardenedInstance: function getHardenedInstance(iface) {\n      return this._getHardenedInstance(iface, this);\n    }\n  };\n  return Mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/hardened.js?");

/***/ }),

/***/ "./src/js/mixins/widget_mixin_method.js":
/*!**********************************************!*\
  !*** ./src/js/mixins/widget_mixin_method.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! js/mixins/widget_utility */ \"./src/js/mixins/widget_utility.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Utils) {\n  var mixin = function mixin(from, methods) {\n    var to = this.prototype; // we add those methods which exists on `from` but not on `to` to the latter\n\n    _.extend(from, to); // … and we do the same for events\n\n\n    _.extend(from.events, to.events);\n\n    _.each(Array.prototype.slice.call(arguments, 1), function (m) {\n      Utils.extendMethod(to, from, m);\n    });\n  };\n\n  return mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_mixin_method.js?");

/***/ }),

/***/ "./src/js/mixins/widget_state_manager.js":
/*!***********************************************!*\
  !*** ./src/js/mixins/widget_state_manager.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/api_feedback */ \"./src/js/components/api_feedback.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, ApiFeedback) {\n  /**\n   * Abstract error pubsub-like manager.  Allows for hooks to be applied that\n   * match API feedback codes\n   *\n   * @constructor\n   */\n  var ErrorHandlerManager = function ErrorHandlerManager() {\n    this.handlers = {};\n    /**\n     * Attach a new handler to an API feedback code\n     *\n     * @param {Number} code - feedback code\n     * @param {function} cb - callback function\n     */\n\n    this.on = function (code, cb) {\n      this.handlers[code].push(cb);\n    };\n    /**\n     * Remove handler by passing in the callback function\n     *\n     * @param {function} cb - callback function\n     */\n\n\n    this.off = function (cb) {\n      _.forEach(this.handlers, function (v, k) {\n        var idx = v.indexOf(cb);\n\n        if (idx > -1) {\n          v.splice(idx, 1);\n        }\n      });\n    };\n    /**\n     * Fire off the callbacks for a particular code\n     *\n     * @param {Number} code - feedback code\n     * @param {Array} args - arguments to pass to the callback\n     * @param {object} ctx - callback's `this` property\n     */\n\n\n    this.fire = function (code, args, ctx) {\n      _.forEach(this.handlers[code], function (cb) {\n        cb.apply(ctx, args);\n      });\n    };\n\n    _.reduce(ApiFeedback.CODES, function (res, code) {\n      res[code] = [];\n      return res;\n    }, this.handlers);\n  };\n  /*\n    Widget state manager mixin\n     This mixin will allow widgets to call lifecycle updates which can then have\n    handlers attached.  The mixin can also serve as a way for page managers to\n    react to widget status updates, since certain widgets should be\n    handled differently depending on their type and importance.\n     The typical way this is used is to call `activateWidget` during the activate\n    call on the widget itself.  Then call the various state updates when the widget\n    is performing actions.\n     The default states are: ready, loading, idle, errored\n     Widgets can attach handlers to the various status updates (i.e. onReady, onLoading, etc.)\n     note: during the activation, the widget's pubsubkey is captured and is used\n    to identify the appropriate feedback.  This way the handlers aren't called for\n    events the widget doesn't care about.\n   */\n\n\n  var WidgetStateManagerMixin = {\n    STATES: {\n      LOADING: 'loading',\n      ERRORED: 'errored',\n      IDLE: 'idle',\n      READY: 'ready'\n    },\n\n    /**\n     * Creates a new instance of the handlerManager and subscribes to the\n     * api feedback calls.  It also sets the first state update.\n     */\n    activateWidget: function activateWidget() {\n      this.__widgetHandlerManager = new ErrorHandlerManager();\n      var pubsub = this.getPubSub();\n      pubsub.subscribe(pubsub.FEEDBACK, _.bind(this.__handleFeedback, this));\n      this.updateState('ready');\n    },\n\n    /**\n     * Upon new feedback from the API, this function will grab the current\n     * pubSubKey Id for this widget and compare it to the one listed on the\n     * feedback object.  If they match, then the handlers are fired off for that\n     * code.\n     *\n     * @param {ApiFeedback} feedback\n     * @param {PubSubKey} pubSubKey\n     * @private\n     */\n    __handleFeedback: function __handleFeedback(feedback, pubSubKey) {\n      var id = this.getPubSub().getCurrentPubSubKey().getId();\n\n      if (id === pubSubKey.getId()) {\n        this.__widgetHandlerManager.fire(feedback.code, arguments, this);\n      }\n    },\n\n    /**\n     * Attaches a new handler onto an API code\n     *\n     * @param {Number} code - feedback code\n     * @param {function} handler - handler function\n     */\n    attachHandler: function attachHandler(code, handler) {\n      try {\n        this.__widgetHandlerManager.on(code, handler);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n\n    /**\n     * Attaches a general handler to all api feedback codes\n     *\n     * Includes the positive error codes and api request failures\n     *\n     * @param {function} handler - handler function\n     */\n    attachGeneralHandler: function attachGeneralHandler(handler) {\n      _.forEach(ApiFeedback.CODES, _.bind(function (code) {\n        if (code > 0 || code === ApiFeedback.CODES.API_REQUEST_ERROR) {\n          this.attachHandler(code, handler);\n        }\n      }, this));\n    },\n\n    /**\n     * Detaches a particular handler from all codes\n     *\n     * @param cb\n     */\n    detachHandler: function detachHandler(cb) {\n      this.__widgetHandlerManager.off(cb);\n    },\n\n    /**\n     * Called when the state changes to 'ready'\n     */\n    onReady: _.noop,\n\n    /**\n     * Called when the state changes to 'loading'\n     */\n    onLoading: _.noop,\n\n    /**\n     * Called when the state changes to 'idle'\n     */\n    onIdle: _.noop,\n\n    /**\n     * Called when the state changes to 'errored'\n     */\n    onErrored: _.noop,\n\n    /**\n     * Called on all state changes\n     */\n    onStateChange: _.noop,\n\n    /**\n     * Called by widgets to update their own state.  This will update the current\n     * state and also call any handlers.\n     *\n     * @param {string} state - the state to update to\n     */\n    updateState: function updateState(state) {\n      if (!state || !_.isString(state) || state === this.__state) {\n        // do nothing\n        return;\n      }\n\n      var prev = this.__state;\n      this.__state = state;\n\n      this.__fireStateHandler();\n\n      this.onStateChange.call(this, state, prev);\n    },\n\n    /**\n     * Get the current state value\n     */\n    getState: function getState() {\n      return this.__state;\n    },\n\n    /**\n     * This method looks at the current state and if a matching handler is\n     * provided, it will call it accordingly.\n     *\n     * @private\n     */\n    __fireStateHandler: function __fireStateHandler() {\n      var handlers = {};\n      handlers.ready = this.onReady;\n      handlers.loading = this.onLoading;\n      handlers.idle = this.onIdle;\n      handlers.errored = this.onErrored;\n      handlers[this.__state] && handlers[this.__state].call(this, this);\n    }\n  };\n  return WidgetStateManagerMixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_state_manager.js?");

/***/ }),

/***/ "./src/js/mixins/widget_utility.js":
/*!*****************************************!*\
  !*** ./src/js/mixins/widget_utility.js ***!
  \*****************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var Utils = {}; // Helper method to extend an already existing method\n\n  Utils.extendMethod = function (to, from, methodName) {\n    // if the method is defined on from ...\n    if (!_.isUndefined(from[methodName])) {\n      var old = to[methodName]; // ... we create a new function on to\n\n      to[methodName] = function () {\n        // wherein we first call the method which exists on `to`\n        var oldReturn = old.apply(this, arguments); // and then call the method on `from`\n\n        from[methodName].apply(this, arguments); // and then return the expected result,\n        // i.e. what the method on `to` returns\n\n        return oldReturn;\n      };\n    }\n  };\n\n  return Utils;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_utility.js?");

/***/ }),

/***/ "./src/js/widgets/authentication/templates/container.html":
/*!****************************************************************!*\
  !*** ./src/js/widgets/authentication/templates/container.html ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../../../../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div\\n  class=\\\"form-container s-form-container  col-sm-10 col-sm-offset-1  col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\\\"\\n  style=\\\"padding-right: 0;\\\"\\n></div>\\n\";\n},\"useData\":true});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/authentication/templates/container.html?");

/***/ }),

/***/ "./src/js/widgets/authentication/templates/log-in.html":
/*!*************************************************************!*\
  !*** ./src/js/widgets/authentication/templates/log-in.html ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../../../../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-10 col-sm-offset-1 text-center\\\">\\n      <div class=\\\"alert alert-danger\\\">\\n        <p>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"errorMsg\") || (depth0 != null ? lookupProperty(depth0,\"errorMsg\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"errorMsg\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":42,\"column\":11},\"end\":{\"line\":42,\"column\":23}}}) : helper)))\n    + \"</p>\\n        <p><a class=\\\"link\\\" id=\\\"dismiss-error\\\">Dismiss</a></p>\\n      </div>\\n    </div>\\n  </div>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"panel panel-default\\\">\\n  <legend class=\\\"panel-heading\\\">\\n    Log in to ADS\\n  </legend>\\n  <form class=\\\"panel-body\\\">\\n    <div class=\\\"form-group has-feedback\\\">\\n      <label for=\\\"email\\\" class=\\\"control-label\\\"> Email address </label>\\n      <span class=\\\"help-block no-show s-help-block\\\"></span>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Enter email\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group has-feedback\\\">\\n      <label for=\\\"password\\\" class=\\\"control-label\\\"> Password </label>\\n      <span class=\\\"help-block no-show s-help-block\\\"></span>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" />\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-link show-reset-password-1\\\">\\n      Forgot your password?\\n    </button>\\n    <span class=\\\"help-block no-show s-help-block\\\"></span>\\n\\n    <div class=\\\"form-group has-feedback\\\">\\n      <span class=\\\"help-block no-show s-help-block s-help-block-submit\\\"></span>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary-faded submit-login\\\">\\n        Submit\\n      </button>\\n    </div>\\n\\n    <div style=\\\"display: flex; justify-content: center;\\\">\\n      <strong>Don't have an account yet?&nbsp;<button type=\\\"button\\\" href=\\\"#\\\" class=\\\"btn btn-link show-register\\\">Register</button></strong>\\n    </div>\\n    <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\n      <div style=\\\"margin-right: 1rem\\\"></div> <button type=\\\"button\\\" class=\\\"btn btn-link show-resend-verification-email\\\">Resend verification email?</button>\\n    </div>\\n  </form>\\n\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"hasError\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":38,\"column\":2},\"end\":{\"line\":47,\"column\":9}}})) != null ? stack1 : \"\")\n    + \"</div>\\n\";\n},\"useData\":true});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/authentication/templates/log-in.html?");

/***/ }),

/***/ "./src/js/widgets/authentication/templates/register.html":
/*!***************************************************************!*\
  !*** ./src/js/widgets/authentication/templates/register.html ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../../../../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-10 col-sm-offset-1 text-center\\\">\\n      <div class=\\\"alert alert-danger\\\">\\n        <p>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"errorMsg\") || (depth0 != null ? lookupProperty(depth0,\"errorMsg\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"errorMsg\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":72,\"column\":11},\"end\":{\"line\":72,\"column\":23}}}) : helper)))\n    + \"</p>\\n        <p><a class=\\\"link\\\" id=\\\"dismiss-error\\\">Dismiss</a></p>\\n      </div>\\n    </div>\\n  </div>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"panel panel-default\\\">\\n  <legend class=\\\"panel-heading\\\">Register for an ADS Account\\n  </legend>\\n  <form class=\\\"panel-body\\\">\\n    <div class=\\\"form-group has-feedback\\\">\\n      <label for=\\\"given_name\\\" class=\\\"control-label\\\">\\n        First Name\\n      </label>\\n      <span class=\\\"help-block no-show s-help-block\\\"></span>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"given_name\\\" id=\\\"given_name\\\" placeholder=\\\"First Name\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group has-feedback\\\">\\n      <label for=\\\"family_name\\\" class=\\\"control-label\\\">\\n        Last Name\\n      </label>\\n      <span class=\\\"help-block no-show s-help-block\\\"></span>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"family_name\\\" id=\\\"family_name\\\" placeholder=\\\"Last Name\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group has-feedback\\\">\\n      <label for=\\\"email\\\" class=\\\"control-label\\\">\\n        Email address\\n        <span style=\\\"color:red\\\">*</span>\\n      </label>\\n      <span class=\\\"help-block no-show s-help-block\\\"></span>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"me@example.com\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group has-feedback\\\">\\n      <label for=\\\"password1\\\" class=\\\"control-label\\\">\\n        Password\\n        <span style=\\\"color:red\\\">*</span>\\n        <small class=\\\"s-user-help\\\"> at least 8 characters, with at least 1 number and 1 capital letter</small>\\n      </label>\\n      <span class=\\\"help-block no-show s-help-block\\\"></span>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password1\\\" id=\\\"password1\\\" placeholder=\\\"********\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group has-feedback\\\">\\n      <label for=\\\"password2\\\" class=\\\"control-label\\\">\\n        Re-enter Password\\n        <span style=\\\"color:red\\\">*</span>\\n      </label>\\n      <span class=\\\"help-block no-show s-help-block\\\"></span>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password2\\\" id=\\\"password2\\\" placeholder=\\\"********\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary-faded submit-register\\\" data-form-name=\\\"register\\\">Submit</button>\\n      <span class=\\\"help-block no-show s-help-block\\\"></span>\\n    </div>\\n\\n    <div style=\\\"display: flex; justify-content: center;\\\">\\n      <strong>Already have an account?&nbsp;<a class=\\\"show-login\\\">Login</a></strong>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" style=\\\"margin-top: 2rem; display: flex; justify-content: center\\\">\\n      <div class=\\\"g-recaptcha\\\">\\n        <small class=\\\"recaptcha-msg\\\">This site is protected by reCAPTCHA and the Google\\n          <a href=\\\"https://policies.google.com/privacy\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">Privacy Policy</a> and\\n          <a href=\\\"https://policies.google.com/terms\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">Terms of Service</a>\\n          apply.</small>\\n      </div>\\n    </div>\\n  </form>\\n\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"hasError\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":68,\"column\":2},\"end\":{\"line\":77,\"column\":9}}})) != null ? stack1 : \"\")\n    + \"</div>\\n\";\n},\"useData\":true});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/authentication/templates/register.html?");

/***/ }),

/***/ "./src/js/widgets/authentication/templates/resend-verification-email.html":
/*!********************************************************************************!*\
  !*** ./src/js/widgets/authentication/templates/resend-verification-email.html ***!
  \********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../../../../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-10 col-sm-offset-1 text-center\\\">\\n      <div class=\\\"alert alert-danger\\\">\\n        <p>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"errorMsg\") || (depth0 != null ? lookupProperty(depth0,\"errorMsg\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"errorMsg\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":19,\"column\":11},\"end\":{\"line\":19,\"column\":23}}}) : helper)))\n    + \"</p>\\n        <p><a class=\\\"link\\\" id=\\\"dismiss-error\\\">Dismiss</a></p>\\n      </div>\\n    </div>\\n  </div>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">Resend Verification Email</div>\\n  <form class=\\\"panel-body\\\">\\n    <div class=\\\"form-group has-feedback\\\">\\n      <label for=\\\"email\\\" class=\\\"control-label\\\">Email address</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" required>\\n      <span class=\\\"help-block no-show s-help-block\\\"></span>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Resend Verification Email</button>\\n  </form>\\n  <div style=\\\"margin-top: 1rem; text-align: center;\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-link show-login\\\">Back to Login</button>\\n  </div>\\n\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"hasError\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":15,\"column\":2},\"end\":{\"line\":24,\"column\":9}}})) != null ? stack1 : \"\")\n    + \"</div>\\n\";\n},\"useData\":true});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/authentication/templates/resend-verification-email.html?");

/***/ }),

/***/ "./src/js/widgets/authentication/templates/reset-password-1.html":
/*!***********************************************************************!*\
  !*** ./src/js/widgets/authentication/templates/reset-password-1.html ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../../../../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-10 col-sm-offset-1 text-center\\\">\\n      <div class=\\\"alert alert-danger\\\">\\n        <p>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"errorMsg\") || (depth0 != null ? lookupProperty(depth0,\"errorMsg\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"errorMsg\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":36,\"column\":11},\"end\":{\"line\":36,\"column\":23}}}) : helper)))\n    + \"</p>\\n        <p><a class=\\\"link\\\" id=\\\"dismiss-error\\\">Dismiss</a></p>\\n      </div>\\n    </div>\\n  </div>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"panel panel-default\\\">\\n  <legend class=\\\"panel-heading\\\"> Password Reset\\n  </legend>\\n  <form class=\\\"panel-body\\\">\\n    <div class=\\\"form-group has-feedback\\\">\\n      <label for=\\\"email\\\" class=\\\"control-label\\\"> Email address </label>\\n      <span class=\\\"help-block no-show s-help-block\\\"></span>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Enter email\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary-faded submit-reset-password\\\" data-form-name=\\\"reset_password\\\">Submit\\n      </button>\\n      <span class=\\\"help-block no-show s-help-block\\\"></span>\\n    </div>\\n\\n    <div style=\\\"display: flex; justify-content: center;\\\">\\n      <strong><a class=\\\"show-login\\\">Return to login form</a></strong>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" style=\\\"margin-top: 2rem\\\">\\n      <div class=\\\"g-recaptcha\\\">\\n        <small class=\\\"recaptcha-msg\\\">This site is protected by reCAPTCHA and the Google\\n          <a href=\\\"https://policies.google.com/privacy\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">Privacy Policy</a> and\\n          <a href=\\\"https://policies.google.com/terms\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">Terms of Service</a>\\n          apply.</small>\\n      </div>\\n    </div>\\n\\n  </form>\\n\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"hasError\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":32,\"column\":2},\"end\":{\"line\":41,\"column\":9}}})) != null ? stack1 : \"\")\n    + \"</div>\\n\";\n},\"useData\":true});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/authentication/templates/reset-password-1.html?");

/***/ }),

/***/ "./src/js/widgets/authentication/templates/reset-password-2.html":
/*!***********************************************************************!*\
  !*** ./src/js/widgets/authentication/templates/reset-password-2.html ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../../../../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-10 col-sm-offset-1 text-center\\\">\\n            <div class=\\\"alert alert-danger\\\">\\n                <p>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"errorMsg\") || (depth0 != null ? lookupProperty(depth0,\"errorMsg\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"errorMsg\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":30,\"column\":19},\"end\":{\"line\":30,\"column\":31}}}) : helper)))\n    + \"</p>\\n                <p><a class=\\\"link\\\" id=\\\"dismiss-error\\\">Dismiss</a></p>\\n            </div>\\n        </div>\\n    </div>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"panel panel-default\\\">\\n    <legend class=\\\"panel-heading\\\"> Password Reset\\n    </legend>\\n    <form class=\\\"panel-body\\\">\\n        <div class=\\\"form-group has-feedback\\\">\\n            <label for=\\\"password1\\\" class=\\\"control-label\\\"> New password </label>\\n            <span class=\\\"help-block no-show s-help-block\\\"></span>\\n            <div class=\\\"s-user-help\\\">Passwords should be at least eight characters and include at least one number and one capital letter.</div>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password1\\\" id=\\\"password1\\\" placeholder=\\\"Password\\\"/>\\n\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n            <label  for=\\\"password2\\\" class=\\\"control-label\\\"> Re-enter new password </label>\\n            <span class=\\\"help-block no-show s-help-block\\\"></span>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password2\\\" id=\\\"password2\\\" placeholder=\\\"Re-enter password\\\"/>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary-faded submit-reset-password\\\">Submit</button>\\n            <span class=\\\"help-block no-show s-help-block\\\"></span>\\n\\n        </div>\\n    </form>\\n\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"hasError\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":26,\"column\":4},\"end\":{\"line\":35,\"column\":11}}})) != null ? stack1 : \"\")\n    + \"</div>\\n\";\n},\"useData\":true});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/authentication/templates/reset-password-2.html?");

/***/ }),

/***/ "./src/js/widgets/authentication/widget.js":
/*!*************************************************!*\
  !*** ./src/js/widgets/authentication/widget.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! marionette */ \"./src/libs/backbone.marionette.js\"), __webpack_require__(/*! js/widgets/base/base_widget */ \"./src/js/widgets/base/base_widget.js\"), __webpack_require__(/*! js/components/api_feedback */ \"./src/js/components/api_feedback.js\"), __webpack_require__(/*! js/mixins/form_view_functions */ \"./src/js/mixins/form_view_functions.js\"), __webpack_require__(/*! js/widgets/success/view */ \"./src/js/widgets/success/view.js\"), __webpack_require__(/*! js/components/api_targets */ \"./src/js/components/api_targets.js\"), __webpack_require__(/*! hbs!js/widgets/authentication/templates/log-in */ \"./src/js/widgets/authentication/templates/log-in.html\"), __webpack_require__(/*! hbs!js/widgets/authentication/templates/register */ \"./src/js/widgets/authentication/templates/register.html\"), __webpack_require__(/*! hbs!js/widgets/authentication/templates/container */ \"./src/js/widgets/authentication/templates/container.html\"), __webpack_require__(/*! hbs!js/widgets/authentication/templates/reset-password-1 */ \"./src/js/widgets/authentication/templates/reset-password-1.html\"), __webpack_require__(/*! hbs!js/widgets/authentication/templates/reset-password-2 */ \"./src/js/widgets/authentication/templates/reset-password-2.html\"), __webpack_require__(/*! hbs!js/widgets/authentication/templates/resend-verification-email */ \"./src/js/widgets/authentication/templates/resend-verification-email.html\"), __webpack_require__(/*! js/components/user */ \"./src/js/components/user.js\"), __webpack_require__(/*! analytics */ \"./src/js/components/analytics.js\"), __webpack_require__(/*! backbone-validation */ \"./src/libs/backbone-validation.js\"), __webpack_require__(/*! backbone.stickit */ \"./src/libs/backbone.stickit.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Marionette, BaseWidget, ApiFeedback, FormFunctions, SuccessView, ApiTargets, LogInTemplate, RegisterTemplate, ContainerTemplate, ResetPassword1Template, ResetPassword2Template, ResendVerificationEmail, User, analytics) {\n  // Creating module level variable since I can't figure out best way to pass this value into a subview from the model\n  // This value should be always available, and unchanging, so should be safe to set like this here\n  // TODO: figure out how to make this value available to the subview without having to set it like this\n  var siteKey = '';\n  /*\n   *\n   * any submit action forces the widget to rerender when it\n   * gets a success or fail message from pubsub\n   *\n   * */\n\n  var passwordRegex = /(?=.*\\d)(?=.*[a-zA-Z]).{5,}/;\n  var FormView;\n  var FormModel;\n  var ERROR_TIMEOUT = 5000;\n  FormView = Marionette.ItemView.extend({\n    activateValidation: FormFunctions.activateValidation,\n    checkValidationState: FormFunctions.checkValidationState,\n\n    /**\n     * Shows an error message to the user\n     * and then hides it after a timeout\n     *\n     * @todo figure out why we have to force a re-render\n     * @param msg\n     */\n    showError: function showError(msg) {\n      var _this = this;\n\n      this.model({\n        hasError: true,\n        errorMsg: msg\n      });\n      this.render();\n      setTimeout(function () {\n        _this.model({\n          hasError: false,\n          errorMsg: undefined\n        });\n\n        _this.render();\n      }, ERROR_TIMEOUT);\n    },\n    triggerSubmit: function triggerSubmit(ev) {\n      var _arguments = arguments,\n          _this2 = this;\n\n      ev.preventDefault();\n      var formName = ev.currentTarget.dataset.formName;\n\n      if (!window.grecaptcha) {\n        this.showError('Sorry reCAPTCHA did not load properly. Please try refreshing the page.');\n        return;\n      }\n\n      if (typeof formName === 'string') {\n        window.grecaptcha.ready(function () {\n          return window.grecaptcha.execute(siteKey, {\n            action: \"auth/\".concat(formName)\n          }).then(function (token) {\n            _this2.model.set('g-recaptcha-response', token);\n\n            FormFunctions.triggerSubmit.apply(_this2, _arguments);\n          });\n        });\n      } else {\n        FormFunctions.triggerSubmit.apply(this, arguments);\n      }\n    },\n    dismissError: function dismissError() {\n      this.model.set(this.model.defaults());\n      this.render();\n    },\n    modelEvents: {\n      change: 'checkValidationState'\n    },\n    events: {\n      'click button[type=submit]': 'triggerSubmit',\n      'click a#dismiss-error': 'dismissError'\n    }\n  });\n  FormModel = Backbone.Model.extend({\n    isValidSafe: FormFunctions.isValidSafe,\n    reset: FormFunctions.reset,\n    defaults: function defaults() {\n      return {\n        hasError: false,\n        errorMsg: ''\n      };\n    }\n  });\n  var RegisterModel;\n  var RegisterView;\n  RegisterModel = FormModel.extend({\n    validation: {\n      given_name: {},\n      family_name: {},\n      email: {\n        required: true,\n        pattern: 'email',\n        msg: '(A valid email is required)'\n      },\n      password1: {\n        required: true,\n        pattern: passwordRegex,\n        msg: \"(Password isn't valid)\"\n      },\n      password2: {\n        required: true,\n        equalTo: 'password1',\n        msg: '(The passwords do not match)'\n      },\n      'g-recaptcha-response': {\n        required: true\n      }\n    },\n    target: 'REGISTER'\n    /* note: defaults are missing here because\n     * they cause the validation to call an error for vals\n     * that the user hasnt entered yet\n     * */\n\n  });\n  RegisterView = FormView.extend({\n    template: RegisterTemplate,\n    className: 'register s-register',\n    bindings: {\n      'input[name=given_name]': {\n        observe: 'given_name'\n      },\n      'input[name=family_name]': {\n        observe: 'family_name'\n      },\n      'input[name=email]': {\n        observe: 'email',\n        setOptions: {\n          validate: true\n        }\n      },\n      'input[name=password1]': {\n        observe: 'password1',\n        setOptions: {\n          validate: true\n        }\n      },\n      'input[name=password2]': {\n        observe: 'password2',\n        setOptions: {\n          validate: true\n        }\n      },\n      'g-recaptcha-response': {\n        required: true\n      }\n    },\n    onRender: function onRender() {\n      this.activateValidation();\n    }\n  });\n  var LogInView;\n  var LogInModel;\n  LogInModel = FormModel.extend({\n    skipReset: ['email'],\n    validation: {\n      email: {\n        required: true,\n        pattern: 'email',\n        msg: '(A valid email is required)'\n      },\n      password: {\n        required: true,\n        pattern: passwordRegex,\n        msg: '(A valid password is required)'\n      }\n    },\n    target: 'USER'\n  });\n  LogInView = FormView.extend({\n    template: LogInTemplate,\n    className: 'log-in s-log-in',\n    bindings: {\n      'input[name=email]': {\n        observe: 'email',\n        setOptions: {\n          validate: true\n        }\n      },\n      'input[name=password]': {\n        observe: 'password',\n        setOptions: {\n          validate: true\n        }\n      }\n    },\n    onRender: function onRender() {\n      this.activateValidation();\n    }\n  });\n  var ResetPassword1View;\n  var ResetPassword1Model;\n  ResetPassword1Model = FormModel.extend({\n    skipReset: ['email'],\n    validation: {\n      email: {\n        required: true,\n        pattern: 'email',\n        msg: '(A valid email is required)'\n      },\n      'g-recaptcha-response': {\n        required: true\n      }\n    },\n    target: 'RESET_PASSWORD',\n    method: 'POST'\n  });\n  ResetPassword1View = FormView.extend({\n    template: ResetPassword1Template,\n    className: 'reset-password-1 s-reset-password-1',\n    bindings: {\n      'input[name=email]': {\n        observe: 'email',\n        setOptions: {\n          validate: true\n        }\n      }\n    },\n    onRender: function onRender() {\n      this.activateValidation();\n    }\n  }); // this view is only accessible after user has clicked on a link in a verification\n  // email after they enter the \"forgot password form\".\n\n  var ResetPassword2View;\n  var ResetPassword2Model;\n  ResetPassword2Model = FormModel.extend({\n    validation: {\n      password1: {\n        required: true,\n        pattern: passwordRegex,\n        msg: \"(Password isn't valid)\"\n      },\n      password2: {\n        required: true,\n        equalTo: 'password1',\n        pattern: passwordRegex,\n        msg: '(The passwords do not match)'\n      }\n    },\n    target: 'RESET_PASSWORD',\n    method: 'PUT'\n  });\n  ResetPassword2View = FormView.extend({\n    template: ResetPassword2Template,\n    className: 'reset-password-2 s-reset-password-2',\n    bindings: {\n      'input[name=password1]': {\n        observe: 'password1',\n        setOptions: {\n          validate: true\n        }\n      },\n      'input[name=password2]': {\n        observe: 'password2',\n        setOptions: {\n          validate: true\n        }\n      }\n    },\n    onRender: function onRender() {\n      this.activateValidation();\n    }\n  });\n  var ResendVerificationModel = FormModel.extend({\n    skipReset: ['email'],\n    validation: {\n      email: {\n        required: true,\n        pattern: 'email',\n        msg: '(A valid email is required)'\n      }\n    },\n    target: 'RESEND_VERIFY',\n    method: 'PUT'\n  });\n  var ResendVerificationView = FormView.extend({\n    template: ResendVerificationEmail,\n    className: 'resend-verification',\n    bindings: {\n      'input[name=email]': {\n        observe: 'email',\n        setOptions: {\n          validate: true\n        }\n      }\n    },\n    onRender: function onRender() {\n      this.activateValidation();\n    }\n  });\n  var StateModel = Backbone.Model.extend({\n    defaults: function defaults() {\n      return {\n        subView: undefined\n      };\n    }\n  });\n  var AuthenticationContainer = Marionette.LayoutView.extend({\n    template: ContainerTemplate,\n    initialize: function initialize() {\n      this.logInModel = new LogInModel();\n      this.registerModel = new RegisterModel();\n      this.resetPassword1Model = new ResetPassword1Model();\n      this.resetPassword2Model = new ResetPassword2Model();\n      this.resendVerificationModel = new ResendVerificationModel();\n    },\n    modelEvents: {\n      'change:subView': 'renderSubView'\n    },\n    className: 's-authentication-container row s-form-widget',\n    regions: {\n      container: '.form-container'\n    },\n    triggers: {\n      'click .show-login': 'navigateToLoginForm',\n      'click .show-register': 'navigateToRegisterForm',\n      'click .show-reset-password-1': 'navigateToResetPassword1Form',\n      'click .show-resend-verification-email': 'navigateToResendVerificationForm'\n    },\n    onRender: function onRender() {\n      this.renderSubView();\n    },\n    renderSubView: function renderSubView() {\n      // figure out which view to show\n      var subView = this.model.get('subView');\n\n      if (subView === 'login') {\n        this.showLoginForm();\n      } else if (subView === 'register') {\n        this.showRegisterForm();\n      } else if (subView === 'reset-password-1') {\n        this.showResetPasswordForm1();\n      } else if (subView === 'reset-password-2') {\n        this.showResetPasswordForm2();\n      } else if (subView === 'resend-verification-email') {\n        this.showResendVerificationForm();\n      }\n    },\n    showLoginForm: function showLoginForm(error) {\n      var view = new LogInView({\n        model: this.logInModel\n      }); // show error message\n\n      if (error) {\n        view.model.set({\n          hasError: true,\n          errorMsg: error\n        });\n      }\n\n      view.on('submit-form', this.forwardSubmit, this);\n      this.container.show(view);\n    },\n    showRegisterForm: function showRegisterForm(error) {\n      var view = new RegisterView({\n        model: this.registerModel\n      }); // show error message\n\n      if (error) {\n        view.model.set({\n          hasError: true,\n          errorMsg: error\n        });\n      }\n\n      view.on('submit-form', this.forwardSubmit, this);\n      this.container.show(view);\n    },\n    showResetPasswordForm1: function showResetPasswordForm1(error) {\n      var view = new ResetPassword1View({\n        model: this.resetPassword1Model\n      }); // show error message\n\n      if (error) {\n        view.model.set({\n          hasError: true,\n          errorMsg: error\n        });\n      }\n\n      view.on('submit-form', this.forwardSubmit, this);\n      this.container.show(view);\n    },\n    showResetPasswordForm2: function showResetPasswordForm2(error) {\n      var view = new ResetPassword2View({\n        model: this.resetPassword2Model\n      }); // show error message\n\n      if (error) {\n        view.model.set({\n          hasError: true,\n          errorMsg: error\n        });\n      }\n\n      view.on('submit-form', this.forwardSubmit, this);\n      this.container.show(view);\n    },\n    showResendVerificationForm: function showResendVerificationForm(error) {\n      var view = new ResendVerificationView({\n        model: this.resendVerificationModel\n      }); // show error message\n\n      if (error) {\n        view.model.set({\n          hasError: true,\n          errorMsg: error\n        });\n      }\n\n      view.on('submit-form', this.forwardSubmit, this);\n      this.container.show(view);\n    },\n    showRegisterSuccessView: function showRegisterSuccessView() {\n      var view = new SuccessView({\n        title: 'Registration Successful'\n      });\n      this.container.show(view);\n    },\n    showResendVerificationSuccessView: function showResendVerificationSuccessView() {\n      var view = new SuccessView({\n        title: 'Verification Email Sent Successfully'\n      });\n      this.container.show(view);\n    },\n    showResetPasswordSuccessView: function showResetPasswordSuccessView() {\n      var view = new SuccessView({\n        title: 'Password Reset Successful'\n      });\n      this.container.show(view);\n    },\n    forwardSubmit: function forwardSubmit(viewModel) {\n      this.trigger('submit-form', viewModel);\n    }\n  });\n  var AuthenticationWidget = BaseWidget.extend({\n    initialize: function initialize(options) {\n      options = options || {};\n      this.stateModel = new StateModel();\n      this.view = new AuthenticationContainer({\n        controller: this,\n        model: this.stateModel\n      });\n      this.listenTo(this.view, 'submit-form', this.triggerCorrectSubmit);\n      this.listenTo(this.view, 'navigateToLoginForm', this.navigateToLoginForm);\n      this.listenTo(this.view, 'navigateToRegisterForm', this.navigateToRegisterForm);\n      this.listenTo(this.view, 'navigateToResetPassword1Form', this.navigateToResetPassword1Form);\n      this.listenTo(this.view, 'navigateToResendVerificationForm', this.navigateToResendVerificationForm);\n      this.nextNav = null;\n    },\n    activate: function activate(beehive) {\n      this.setBeeHive(beehive);\n      var pubsub = beehive.getService('PubSub');\n\n      _.bindAll(this, ['handleUserAnnouncement']);\n\n      pubsub.subscribe(pubsub.USER_ANNOUNCEMENT, this.handleUserAnnouncement);\n      siteKey = beehive.getObject('AppStorage').getConfigCopy().recaptchaKey;\n    },\n    navigateToLoginForm: function navigateToLoginForm() {\n      this._navigate({\n        subView: 'login'\n      });\n    },\n    navigateToRegisterForm: function navigateToRegisterForm() {\n      this._navigate({\n        subView: 'register'\n      });\n    },\n    navigateToResetPassword1Form: function navigateToResetPassword1Form() {\n      this._navigate({\n        subView: 'reset-password-1'\n      });\n    },\n    navigateToResendVerificationForm: function navigateToResendVerificationForm() {\n      this._navigate({\n        subView: 'resend-verification-email'\n      });\n    },\n    _navigate: function _navigate(opts) {\n      var pubsub = this.getPubSub();\n      pubsub.publish(pubsub.NAVIGATE, 'authentication-page', opts);\n    },\n    setSubView: function setSubView(subView) {\n      this.stateModel.set('subView', subView);\n    },\n    fireAnalytics: _.partial(analytics, 'send', 'event', 'authentication'),\n    handleUserAnnouncement: function handleUserAnnouncement(name, msg) {\n      // reset all views and view models\n      this.resetAll();\n\n      switch (name) {\n        case User.prototype.USER_SIGNED_IN:\n          // will immediately redirect\n          this.fireAnalytics('login', {\n            auth_result: 'login_success'\n          });\n          break;\n\n        case 'login_fail':\n          // will also see a relevant alert over the widget\n          this.view.showLoginForm(msg);\n          this.fireAnalytics('login', {\n            auth_result: 'login_failed',\n            auth_error: msg\n          });\n          break;\n\n        case 'register_success':\n          this.view.showRegisterSuccessView();\n          this.fireAnalytics('login', 'status', {\n            auth_result: 'register_success'\n          });\n          break;\n\n        case 'register_fail':\n          // will also see a relevant alert over the widget\n          this.view.showRegisterForm(msg);\n          this.fireAnalytics('register', {\n            auth_result: 'register_failed',\n            auth_error: msg\n          });\n          break;\n\n        case 'reset_password_1_success':\n          this.view.showResetPasswordSuccessView(msg);\n          this.fireAnalytics('reset-password', {\n            auth_result: 'reset_password_1_success'\n          });\n          break;\n\n        case 'reset_password_1_fail':\n          this.view.showResetPasswordForm1(msg);\n          this.fireAnalytics('reset-password', {\n            auth_result: 'reset_password_1_failed',\n            auth_error: msg\n          });\n          break;\n\n        case 'reset_password_2_fail':\n          this.view.showResetPasswordForm2(msg);\n          this.fireAnalytics('reset-password', {\n            auth_result: 'reset_password_2_failed',\n            auth_error: msg\n          });\n          break;\n\n        case 'resend_verification_email_success':\n          this.view.showResendVerificationSuccessView();\n          this.fireAnalytics('resend-verification', {\n            auth_result: 'resend_verification_email_success'\n          });\n          break;\n\n        case 'resend_verification_email_fail':\n          this.view.showResendVerificationForm(msg);\n          this.fireAnalytics('resend-verification', {\n            auth_result: 'resend_verification_email_fail'\n          });\n          break;\n      }\n    },\n    resetAll: function resetAll() {\n      this.view.logInModel.reset();\n      this.view.registerModel.reset();\n      this.view.resetPassword1Model.reset();\n    },\n    triggerCorrectSubmit: function triggerCorrectSubmit(model) {\n      var _this3 = this;\n\n      var session = this.getBeeHive().getObject('Session');\n\n      switch (model.target) {\n        case 'REGISTER':\n          session.register(model.toJSON());\n          break;\n\n        case 'USER':\n          session.login(model.toJSON()).done(function () {\n            if (_this3.nextNav) {\n              var ps = _this3.getPubSub();\n\n              ps.publish(ps.NAVIGATE, _this3.nextNav);\n              _this3.nextNav = null;\n            }\n          });\n          break;\n\n        case 'RESET_PASSWORD':\n          model.method === 'POST' ? session.resetPassword1(model.toJSON()) : session.resetPassword2(model.toJSON());\n          break;\n\n        case 'RESEND_VERIFY':\n          session.resendVerificationEmail(model.get('email'));\n          break;\n      }\n    },\n    setNextNavigation: function setNextNavigation(nav) {\n      this.nextNav = nav;\n    },\n    onShow: function onShow() {\n      // force a clearing of the view every time the widget is shown again\n      this.view.render();\n    }\n  });\n  return AuthenticationWidget;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/authentication/widget.js?");

/***/ }),

/***/ "./src/js/widgets/base/base_widget.js":
/*!********************************************!*\
  !*** ./src/js/widgets/base/base_widget.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! marionette */ \"./src/libs/backbone.marionette.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/api_request */ \"./src/js/components/api_request.js\"), __webpack_require__(/*! js/mixins/widget_mixin_method */ \"./src/js/mixins/widget_mixin_method.js\"), __webpack_require__(/*! js/components/api_targets */ \"./src/js/components/api_targets.js\"), __webpack_require__(/*! js/mixins/dependon */ \"./src/js/mixins/dependon.js\"), __webpack_require__(/*! js/mixins/widget_state_manager */ \"./src/js/mixins/widget_state_manager.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, Marionette, ApiQuery, ApiRequest, WidgetMixin, ApiTargets, Dependon, WidgetStateManagerMixin) {\n  /**\n   * Default PubSub based widget; the main functionality is inside\n   *\n   *  dispa tchRequest()\n   *    - publishes ApiRequest object into PubSub (to initiate search)\n   *\n   *  processResponse()\n   *    - receives ApiResponse object as a direct reply for the previous\n   *      request\n   *\n   * You will want to override 'processResponse' method and possibly\n   * some of the other methods like this;\n   *\n   * var newWidgetClass = BaseWidget.extend({\n   *   composeRequest : function(){},\n   *   processRequest : function(){}\n   * });\n   *\n   * var newInstance = new newWidgetClass();\n   *\n   *\n   * If you need to provide your own views, do initalization etc., override\n   * initialize\n   *\n   * * var newWidgetClass = BaseWidget.extend({\n   *   initialize: function() {\n   *      // do something\n   *      BaseWidget.prototype.initialize.apply(this, arguments);\n   *   }\n   * });\n   *\n   *\n   * Some other options include:\n   *\n   *  defaultQueryArguments: this is a list of parameters added to each query\n   *\n   */\n  var BaseWidget = Marionette.Controller.extend({\n    initialize: function initialize(options) {\n      options = options || {}; // these methods are called by PubSub as handlers so we bind them to 'this' object\n      // and they will carry their own context 'this'\n\n      _.bindAll(this, 'dispatchRequest', 'processResponse');\n\n      this._currentQuery = new ApiQuery();\n      this.defaultQueryArguments = this.defaultQueryArguments || {};\n\n      if (options.defaultQueryArguments) {\n        this.defaultQueryArguments = _.extend(this.defaultQueryArguments, options.defaultQueryArguments);\n      }\n\n      if (options.view) {\n        this.view = options.view;\n        this.collection = options.view.collection;\n      } // our way of listening to views/models\n\n\n      if (this.view) Marionette.bindEntityEvents(this, this.view, Marionette.getOption(this, 'viewEvents'));\n      if (this.model) Marionette.bindEntityEvents(this, this.model, Marionette.getOption(this, 'modelEvents'));\n    },\n\n    /**\n     * Called by Bumblebee application when a widget is about to be registered\n     * it receives a BeeHive object, that contais methods/attributes that a\n     * widget needs to communicate with the app\n     *\n     * This is the place where you want to subscribe to events\n     *\n     * @param beehive\n     */\n    activate: function activate(beehive) {\n      this.setBeeHive(beehive);\n      var pubsub = beehive.getService('PubSub'); // custom dispatchRequest function goes here\n\n      pubsub.subscribe(pubsub.INVITING_REQUEST, _.bind(this.dispatchRequest, this)); // custom handleResponse function goes here\n\n      pubsub.subscribe(pubsub.DELIVERING_RESPONSE, _.bind(this.processResponse, this));\n    },\n\n    /**\n     * You should use this method when you want to initiaze global search action\n     * (ie. send a query to the pubsub)\n     *\n     * @param apiQuery\n     */\n    dispatchNewQuery: function dispatchNewQuery(apiQuery) {\n      // remove the arguments that are useful only to this widget\n      _.each(this.defaultQueryArguments, function (v, k) {\n        apiQuery.unset(k);\n      });\n\n      var pubsub = this.getPubSub();\n      pubsub.publish(pubsub.NAVIGATE, 'search-page', {\n        q: apiQuery\n      });\n    },\n\n    /**\n     * Default callback to be called by PubSub on 'INVITING_REQUEST'\n     */\n    dispatchRequest: function dispatchRequest(apiQuery) {\n      this._dispatchRequest(apiQuery);\n    },\n    _dispatchRequest: function _dispatchRequest(apiQuery) {\n      var q = this.customizeQuery(apiQuery);\n\n      if (q) {\n        var req = this.composeRequest(q);\n\n        if (req) {\n          var pubsub = this.getPubSub();\n          pubsub.publish(pubsub.DELIVERING_REQUEST, req);\n        }\n      }\n    },\n\n    /**\n     * Default action to modify ApiQuery (called from inside dispatchRequest)\n     *\n     * @param apiQuery\n     */\n    customizeQuery: function customizeQuery(apiQuery) {\n      var q = apiQuery.clone();\n      q.unlock();\n\n      if (this.defaultQueryArguments) {\n        q = this.composeQuery(this.defaultQueryArguments, q);\n      }\n\n      return q;\n    },\n\n    /**\n     * Default callback to be called by PubSub on 'DELIVERING_RESPONSE'\n     * @param apiResponse\n     */\n    processResponse: function processResponse(apiResponse) {\n      // in your widget, you should always set the current query like this\n      var q = apiResponse.getApiQuery();\n      this.setCurrentQuery(q);\n      throw new Error('you need to customize this function');\n    },\n\n    /**\n     * This function should return a request IFF we want to get some\n     * data - it is called from inside 'dispatchRequest' event handler\n     *\n     * @param object with params to add\n     * @returns {ApiRequest}\n     */\n    composeRequest: function composeRequest(apiQuery) {\n      return new ApiRequest({\n        target: ApiTargets.SEARCH,\n        query: apiQuery\n      });\n    },\n\n    /**\n     * Will save a clone of the apiQuery into the widget (for future use and\n     * reference)\n     *\n     * @param apiQuery\n     */\n    setCurrentQuery: function setCurrentQuery(apiQuery) {\n      this._currentQuery = apiQuery;\n    },\n\n    /**\n     * Returns the current ApiQuery\n     * if a query hasn't been set, it will check if there is one in storage,\n     * if not, it will return an empty query\n     *\n     * @returns {ApiQuery|*}\n     */\n    getCurrentQuery: function getCurrentQuery() {\n      var currQuery = new ApiQuery({});\n      var beehive;\n\n      try {\n        if (this._currentQuery instanceof ApiQuery) {\n          currQuery = this._currentQuery;\n        } else if (_.isFunction(this.getBeeHive)) {\n          beehive = this.getBeeHive();\n\n          if (beehive.hasObject('AppStorage')) {\n            var q = beehive.getObject('AppStorage').getCurrentQuery();\n\n            if (q instanceof ApiQuery) {\n              currQuery = q;\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e.message);\n      } finally {\n        return currQuery;\n      }\n    },\n\n    /**\n     * All purpose function for making a new query. It returns an apiQuery ready for\n     * newQuery event or for insertion into  apiRequest.\n     *\n     * @param queryParams\n     * @param apiQuery\n     * @returns {*}\n     */\n    composeQuery: function composeQuery(queryParams, apiQuery) {\n      var query;\n\n      if (!apiQuery) {\n        query = this.getCurrentQuery();\n        query = query.clone();\n      } else {\n        query = apiQuery;\n      }\n\n      if (queryParams) {\n        _.each(queryParams, function (v, k) {\n          if (!query.has(k)) query.set(k, v);\n        });\n      }\n\n      return query;\n    },\n    onDestroy: function onDestroy() {\n      this.view.destroy();\n    },\n\n    /**\n     * Convention inside Backbone and Marionette is to return 'this'\n     * - since 'this' usually refers to a 'View', we'll return the\n     * view's el here\n     * doesn't render unless it has to\n     *\n     * @returns {view.el}\n     */\n    getEl: function getEl() {\n      if (this.view.el && this.view.$el.children().length) {\n        return this.view.el;\n      }\n\n      return this.view.render().el;\n    },\n\n    /*\n     *\n     * convenience function for tests, always re-renders\n     *\n     * */\n    render: function render() {\n      return this.view.render();\n    },\n\n    /**\n     * Extracts identifier from a query object\n     *\n     * @param {ApiQuery} apiQuery\n     */\n    parseIdentifierFromQuery: function parseIdentifierFromQuery(apiQuery) {\n      if (!apiQuery.hasVal('q')) {\n        throw 'no query';\n      }\n\n      var q = apiQuery.get('q')[0];\n\n      try {\n        if (/^(?:identifier|bibcode):(.*)$/.test(q)) {\n          return q.split(':')[1];\n        }\n      } catch (e) {\n        throw 'unable to parse bibcode';\n      }\n\n      throw 'query must be in the format of identifer:foo or bibcode:foo';\n    }\n  }, {\n    mixin: WidgetMixin\n  });\n\n  _.extend(BaseWidget.prototype, Dependon.BeeHive, WidgetStateManagerMixin);\n\n  return BaseWidget;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/base/base_widget.js?");

/***/ }),

/***/ "./src/js/widgets/success/success_template.html":
/*!******************************************************!*\
  !*** ./src/js/widgets/success/success_template.html ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../../../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3=\"function\", lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <i class=\\\"icon-success fa-3x\\\" aria-hidden=\\\"true\\\"> </i> \"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"title\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":3,\"column\":59},\"end\":{\"line\":3,\"column\":68}}}) : helper)))\n    + \"\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <p>\"\n    + ((stack1 = ((helper = (helper = lookupProperty(helpers,\"message\") || (depth0 != null ? lookupProperty(depth0,\"message\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"message\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":6,\"column\":7},\"end\":{\"line\":6,\"column\":20}}}) : helper))) != null ? stack1 : \"\")\n    + \"</p>\\n  </div>\\n</div>\\n\";\n},\"useData\":true});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/success/success_template.html?");

/***/ }),

/***/ "./src/js/widgets/success/view.js":
/*!****************************************!*\
  !*** ./src/js/widgets/success/view.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! marionette */ \"./src/libs/backbone.marionette.js\"), __webpack_require__(/*! hbs!js/widgets/success/success_template */ \"./src/js/widgets/success/success_template.html\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Marionette, SuccessTemplate) {\n  var SuccessView = Marionette.ItemView.extend({\n    initialize: function initialize(options) {\n      _.extend(this, options);\n    },\n    title: 'Success!',\n    message: 'Check your email for further instructions.',\n    template: SuccessTemplate,\n    serializeData: function serializeData() {\n      return {\n        title: this.title,\n        message: this.message\n      };\n    }\n  });\n  return SuccessView;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/success/view.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd define */
/******/ 	!function() {
/******/ 		__webpack_require__.amdD = function () {
/******/ 			throw new Error('define cannot be used indirect');
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/amd options */
/******/ 	!function() {
/******/ 		__webpack_require__.amdO = {};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	!function() {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = function(result, chunkIds, fn, priority) {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var chunkIds = deferred[i][0];
/******/ 				var fn = deferred[i][1];
/******/ 				var priority = deferred[i][2];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.nmd = function(module) {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"Authentication": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkbumblebee"] = self["webpackChunkbumblebee"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	!function() {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendor"], function() { return __webpack_require__("./src/js/widgets/authentication/widget.js"); })
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;