/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/components/api_feedback.js":
/*!*******************************************!*\
  !*** ./src/js/components/api_feedback.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/mixins/hardened */ \"./src/js/mixins/hardened.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, Hardened) {\n  var ApiFeedback = function ApiFeedback(options) {\n    _.extend(this, _.defaults(options || {}, {\n      code: 200,\n      msg: undefined\n    }));\n\n    this.setCode(this.code);\n  };\n\n  ApiFeedback.CODES = {\n    INVALID_PASSWORD: 498,\n    ACCOUNT_NOT_FOUND: 495,\n    // Account not found during signin\n    ALREADY_LOGGED_IN: 493,\n    // Already signed during signup\n    REQUIRES_LOGIN: 491,\n    TOO_MANY_CHARACTERS: 486,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    INTERNAL_SERVER_ERROR: 500,\n    BAD_GATEWAY: 502,\n    SERVER_ERROR: 503,\n    TOO_MANY_FAILURES: 580,\n    ALL_FINE: 200,\n    KEEP_WAITING: 190,\n    TESTING: 0,\n    // Internal events\n    MAKE_SPACE: -1,\n    UNMAKE_SPACE: -1.1,\n    SEARCH_CYCLE_STARTED: -2,\n    SEARCH_CYCLE_FAILED_TO_START: -3,\n    SEARCH_CYCLE_PROGRESS: -4,\n    SEARCH_CYCLE_STOP_MONITORING: -5,\n    SEARCH_CYCLE_FINISHED: -6,\n    QUERY_ASSISTANT: -7,\n    ALERT: -8,\n    CANNOT_ROUTE: -9,\n    API_REQUEST_ERROR: -10,\n    BIBCODE_DATA_REQUESTED: -11\n  };\n  var _codes = {};\n\n  _.each(_.pairs(ApiFeedback.CODES), function (p) {\n    _codes[p[1]] = p[0];\n  });\n\n  _.extend(ApiFeedback.prototype, {\n    hardenedInterface: {\n      code: 'integer value of the code',\n      msg: 'string message',\n      toJSON: 'for cloning',\n      getApiRequest: 'to get the original request',\n      getSenderKey: 'retrieve the senders key'\n    },\n    initialize: function initialize() {},\n    toJSON: function toJSON() {\n      return {\n        code: this.code,\n        msg: this.msg\n      };\n    },\n    setCode: function setCode(c) {\n      if (!_codes[c]) {\n        throw new Error('This code is not in the list ApiCodes - please extend js/components/api_feedback first:', this.code);\n      }\n\n      this.code = c;\n    },\n    setApiRequest: function setApiRequest(apiRequest) {\n      this.req = apiRequest;\n    },\n    getApiRequest: function getApiRequest() {\n      return this.req;\n    },\n    setMsg: function setMsg(msg) {\n      this.msg = msg;\n    },\n    getSenderKey: function getSenderKey() {\n      return this.senderKey;\n    },\n    setSenderKey: function setSenderKey(key) {\n      this.senderKey = key;\n    }\n  }, Hardened);\n\n  ApiFeedback.extend = Backbone.Model.extend;\n  return ApiFeedback;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_feedback.js?");

/***/ }),

/***/ "./src/js/components/api_query.js":
/*!****************************************!*\
  !*** ./src/js/components/api_query.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n A facade: api query exposing only the set of functions that we allow. This is\n the module that you want to load in the application (do not load the concrete\n implementaions, such as solr_params !)\n\n Put in your config:\n map: {\n 'your/module': {\n 'api_query_impl': 'js/components/specific_impl_of_the_api_query'\n }\n },\n\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/solr_params */ \"./src/js/components/solr_params.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _, ApiQueryImplementation, Facade) {\n  var hardenedInterface = {\n    add: 'add values',\n    set: 'set (replace existing)',\n    get: 'get values',\n    has: 'has a key',\n    hasVal: 'more specific `has` using _.isEmpty',\n    url: 'url string of the params',\n    load: 'loads query as a string',\n    clear: 'clears all values',\n    unset: 'removes a key',\n    toJSON: 'values back as JSON object',\n    clone: 'make a copy',\n    isLocked: true,\n    lock: true,\n    unlock: true,\n    pairs: 'get all values as pairs',\n    keys: 'as keys',\n    values: 'only values',\n    hasChanged: 'whether this object has modification (since its creation)',\n    previousAttributes: 'get all changed attributes',\n    previous: 'previous values for a given attribute'\n  };\n\n  var ApiQuery = function ApiQuery(data, options) {\n    // Facade pattern, we want to expose only limited API\n    // despite the fact that the underlying instance has\n    // all power of the Backbone.Model\n    if (data instanceof ApiQueryImplementation) {\n      this.innerQuery = new Facade(hardenedInterface, data);\n    } else {\n      this.innerQuery = new Facade(hardenedInterface, new ApiQueryImplementation(data, options));\n    }\n  };\n\n  var toInsert = {};\n\n  _.each(_.keys(hardenedInterface), function (element, index, list) {\n    toInsert[element] = function () {\n      return this.innerQuery[element].apply(this.innerQuery, arguments);\n    };\n  });\n\n  _.extend(ApiQuery.prototype, toInsert, {\n    clone: function clone() {\n      var clone = this.innerQuery.clone.apply(this.innerQuery, arguments);\n      return new ApiQuery(clone);\n    },\n    load: function load() {\n      var clone = this.innerQuery.load.apply(this.innerQuery, arguments);\n      return new ApiQuery(clone);\n    }\n  });\n\n  return ApiQuery;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_query.js?");

/***/ }),

/***/ "./src/js/components/api_request.js":
/*!******************************************!*\
  !*** ./src/js/components/api_request.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/28/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\"), __webpack_require__(/*! js/components/default_request */ \"./src/js/components/default_request.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, Facade, ApiRequestImpl) {\n  var hardenedInterface = {\n    // add makes no sense with request\n    get: 'get a key',\n    set: 'set (replace existing)',\n    url: 'url string defining this request',\n    has: 'has a key',\n    load: 'loads request as a string',\n    clear: 'clears all values',\n    unset: 'removes a key',\n    toJSON: 'values back as JSON object',\n    clone: 'make a copy',\n    isLocked: true,\n    lock: true,\n    unlock: true,\n    pairs: 'get all values as pairs',\n    keys: 'as keys',\n    values: 'only values',\n    hasChanged: 'whether this object has modification (since its creation)',\n    previousAttributes: 'get all changed attributes',\n    previous: 'previous values for a given attribute'\n  };\n\n  var ApiRequest = function ApiRequest(data, options) {\n    // Facade pattern, we want to expose only limited API\n    // despite the fact that the underlying instance has\n    // all power of the Backbone.Model\n    if (data instanceof ApiRequestImpl) {\n      this.innerRequest = new Facade(hardenedInterface, data);\n    } else {\n      this.innerRequest = new Facade(hardenedInterface, new ApiRequestImpl(data, options));\n    }\n  };\n\n  var toInsert = {};\n\n  _.each(_.keys(hardenedInterface), function (element, index, list) {\n    toInsert[element] = function () {\n      return this.innerRequest[element].apply(this.innerRequest, arguments);\n    };\n  });\n\n  _.extend(ApiRequest.prototype, toInsert, {\n    clone: function clone() {\n      var clone = this.innerRequest.clone.apply(this.innerRequest, arguments);\n      return new ApiRequest(clone);\n    },\n    load: function load() {\n      var clone = this.innerRequest.load.apply(this.innerRequest, arguments);\n      return new ApiRequest(clone);\n    }\n  });\n\n  return ApiRequest;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_request.js?");

/***/ }),

/***/ "./src/js/components/api_targets.js":
/*!******************************************!*\
  !*** ./src/js/components/api_targets.js ***!
  \******************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 1/20/15\n *\n * contains api targets\n * and any related limits\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var config = {\n    BOOTSTRAP: '/accounts/bootstrap',\n    SEARCH: 'search/query',\n    QTREE: 'search/qtree',\n    BIGQUERY: 'search/bigquery',\n    EXPORT: 'export/',\n    SERVICE_AUTHOR_NETWORK: 'vis/author-network',\n    SERVICE_PAPER_NETWORK: 'vis/paper-network',\n    SERVICE_WORDCLOUD: 'vis/word-cloud',\n    SERVICE_METRICS: 'metrics',\n    SERVICE_OBJECTS: 'objects',\n    SERVICE_OBJECTS_QUERY: 'objects/query',\n    SERVICE_CITATION_HELPER: 'citation_helper',\n    SERVICE_AUTHOR_AFFILIATION_EXPORT: 'authoraff',\n    MYADS_STORAGE: 'vault',\n    MYADS_NOTIFICATIONS: 'vault/_notifications',\n    AUTHOR_AFFILIATION_SEARCH: 'author-affiliation/search',\n    AUTHOR_AFFILIATION_EXPORT: 'author-affiliation/export',\n    RESOLVER: 'resolver',\n    CSRF: 'accounts/csrf',\n    USER: 'accounts/user',\n    USER_DATA: 'vault/user-data',\n    SITE_CONFIGURATION: 'vault/configuration',\n    TOKEN: 'accounts/user/token',\n    LOGIN: 'accounts/user/login',\n    LOGOUT: 'accounts/user/logout',\n    VERIFY: 'accounts/verify',\n    RESEND_VERIFY: \"accounts/user/{email}/verify\",\n    RESET_PASSWORD: 'accounts/user/reset-password',\n    CHANGE_PASSWORD: 'accounts/user/change-password',\n    CHANGE_EMAIL: 'accounts/user/change-email',\n    INFO: 'accounts/info',\n    PROTECTED: 'accounts/protected',\n    STATUS: 'accounts/status',\n    RECOMMENDER: 'recommender',\n    GRAPHICS: 'graphics',\n    FEEDBACK: 'feedback',\n    // library import from classic\n    LIBRARY_IMPORT_CLASSIC_AUTH: 'harbour/auth/classic',\n    LIBRARY_IMPORT_CLASSIC_MIRRORS: 'harbour/mirrors',\n    LIBRARY_IMPORT_CLASSIC_TO_BBB: 'biblib/classic',\n    // library import from 2.0\n    LIBRARY_IMPORT_ADS2_AUTH: 'harbour/auth/twopointoh',\n    LIBRARY_IMPORT_ADS2_TO_BBB: 'biblib/twopointoh',\n    LIBRARY_IMPORT_ZOTERO: 'harbour/export/twopointoh/zotero',\n    LIBRARY_IMPORT_MENDELEY: 'harbour/export/twopointoh/mendeley',\n    // returns credentials from both classic and 2.0 if they exist\n    LIBRARY_IMPORT_CREDENTIALS: 'harbour/user',\n    // store ADS information connected with ORCID here\n    ORCID_PREFERENCES: 'orcid/preferences',\n    ORCID_NAME: 'orcid/orcid-name',\n    // library endpoints\n    // can get info about all libraries, or list of bibcodes associated w/specific lib (libraries/id)\n    // post to /libraries/ to create a library\n    LIBRARIES: 'biblib/libraries',\n    LIBRARY_TRANSFER: 'biblib/transfer',\n    // can post, put, and delete changes to individual libs using this endpoint\n    DOCUMENTS: 'biblib/documents',\n    PERMISSIONS: 'biblib/permissions',\n    REFERENCE: 'reference/text',\n\n    /*\n     * this is used by the mixin 'user_change_rows' to set max allowed/default requested\n     */\n    _limits: {\n      // use the same name from discovery.config.js\n      ExportWidget: {\n        default: 500,\n        limit: 3000\n      },\n      Metrics: {\n        default: 7000,\n        limit: 7000\n      },\n      AuthorNetwork: {\n        default: 400,\n        limit: 1000\n      },\n      PaperNetwork: {\n        default: 400,\n        limit: 1000\n      },\n      ConceptCloud: {\n        default: 150,\n        limit: 150\n      },\n      BubbleChart: {\n        // default == limit\n        default: 1500\n      }\n    }\n  }; // add credential info\n  // doesn't require cross domain cookies\n\n  config._doesntNeedCredentials = [config.SEARCH, config.QTREE, config.BIGQUERY, config.EXPORT, config.SERVICE_AUTHOR_NETWORK, config.SERVICE_PAPER_NETWORK, config.SERVICE_WORDCLOUD, config.SERVICE_METRICS, config.RECOMMENDER, config.GRAPHICS, config.FEEDBACK];\n  return config;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/api_targets.js?");

/***/ }),

/***/ "./src/js/components/default_request.js":
/*!**********************************************!*\
  !*** ./src/js/components/default_request.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Created by rchyla on 3/28/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/multi_params */ \"./src/js/components/multi_params.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, ApiQuery, MultiParams) {\n  var basicCheck = function basicCheck(s) {\n    if (_.isString(s)) {\n      return true;\n    }\n\n    if (_.isArray(s)) {\n      var l = s.length;\n\n      for (var i = 0; i < l; i++) {\n        var x = s[i];\n\n        if (!(_.isString(x) || _.isNumber(x))) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  var allowedAttrs = {\n    query: function query(v) {\n      if (_.isUndefined(v)) {\n        return true;\n      }\n\n      return v instanceof ApiQuery;\n    },\n    target: basicCheck,\n    sender: basicCheck,\n    options: basicCheck\n  };\n  var checker = {\n    target: function target(s) {\n      if (s && s.substring(0, 1) !== '/') {\n        return '/' + s;\n      }\n    }\n  };\n  var Request = MultiParams.extend({\n    /**\n     * Internal method: we allow only certain keys\n     *\n     * @param attributes\n     * @param options\n     * @returns {boolean}\n     * @private\n     */\n    _validate: function _validate(attributes, options) {\n      _.forOwn(attributes, function (val, attr) {\n        var tempVal = attributes[attr];\n\n        if (!(attr in allowedAttrs)) {\n          throw new Error('Invalid attr: ' + attr);\n        }\n\n        if (!allowedAttrs[attr].call(allowedAttrs, tempVal)) {\n          throw new Error('Invalid value:key ' + attr + tempVal);\n        }\n      });\n\n      return true;\n    },\n\n    /**\n     * Modified version of the multi-valued set(); we do not insist\n     * on having the values in array\n     *\n     * @param key\n     * @param val\n     * @param options\n     * @returns {Request}\n     */\n    set: function set(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    // for requests, we use all components: path, query, hash\n    _checkParsed: function _checkParsed(attrs) {\n      if (_.isObject(attrs)) {\n        var ret = {};\n\n        if ('#query' in attrs && !_.isEmpty(attrs['#query'])) {\n          ret.query = new ApiQuery(attrs['#query']);\n        }\n\n        if ('#path' in attrs) {\n          ret.target = attrs['#path'][0];\n        }\n\n        if ('#hash' in attrs) {\n          _.extend(ret, _.each(attrs['#hash'], function (val, key, obj) {\n            if (val.length == 1) {\n              obj[key] = val[0];\n            }\n          }));\n        }\n\n        return ret;\n      }\n\n      return attrs;\n    },\n\n    /*\n     * Return the url string encoding all parameters that made\n     * this request. The parameters will be sorted alphabetically\n     * by their keys and URL encoded so that they can be used\n     * in requests.\n     */\n    url: function url(whatToSort) {\n      if (!whatToSort) {\n        whatToSort = this.attributes;\n      }\n\n      var target = whatToSort.target;\n      var url = target ? _.isArray(target) ? target.join('/') : target : '';\n\n      if ('query' in whatToSort) {\n        url += '?' + whatToSort.query.url();\n      }\n\n      if ('sender' in whatToSort) {\n        url += '#' + MultiParams.prototype.url.call(this, {\n          sender: whatToSort.sender\n        });\n      }\n\n      return url;\n    },\n\n    /**\n     * Re-constructs the query from the url string, returns the json attributes;\n     * cannot be used it the instance is locked\n     *\n     * @param query (String)\n     * @returns {Model}\n     */\n    load: function load(query) {\n      return MultiParams.prototype.load.call(this, query.indexOf('?') > -1 ? query : query + '?');\n    }\n  });\n  return Request;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/default_request.js?");

/***/ }),

/***/ "./src/js/components/facade.js":
/*!*************************************!*\
  !*** ./src/js/components/facade.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/16/14. inspiration: http://jsfiddle.net/pajtai/GD5qR/35/\n */\n\n/*\n * // Interface\n *  var remoteInterface = {\n *    on: 'turn on'\n *  };\n *  // Implementation\n *  var htmlRemote = {\n *    on: function() { console.log(\"remote on\"); return this; }\n *  };\n *  // Protecting the implementation\n *  var htmlInterface = new Facade(remoteInterface, htmlRemote);\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Facade) {\n  // The Facade encapsulates objectIn according to the description\n  // The exposed facade is guaranteed to have exactly the functions described in description.\n  var Facade = function Facade(description, objectIn) {\n    var facade; // TODO: add enforce of \"new\"\n\n    facade = {};\n    this.mixIn(description, objectIn, facade); // TODO: check that \"mixIn\" is not taken\n\n    facade.mixIn = this.mixIn;\n    return facade;\n  };\n\n  Facade.prototype.mixIn = function (description, objectIn, facade) {\n    var property;\n    var propertyValue;\n    facade = facade || this;\n\n    for (property in description) {\n      propertyValue = description[property];\n\n      if (property in objectIn) {\n        var p = objectIn[property];\n\n        if (typeof propertyValue === 'function') {\n          // redefining the method\n          facade[property] = _.bind(propertyValue, objectIn);\n        } else if (typeof p === 'function') {\n          // exposing the method\n          facade[property] = _.bind(p, objectIn);\n        } else if (_.isUndefined(p)) {// pass\n        } else if (_.isString(p) || _.isNumber(p) || _.isBoolean(p) || _.isDate(p) || _.isNull(p) || _.isRegExp(p)) {\n          // build getter method\n          facade['get' + property.substring(0, 1).toUpperCase() + property.substring(1)] = _.bind(function () {\n            return this.ctx[this.name];\n          }, {\n            ctx: objectIn,\n            name: property\n          });\n          facade[property] = p; // copy the value (it is immutable anyways)\n        } else if (p.hasOwnProperty('__facade__') && p.__facade__) {\n          // exposing internal facade\n          facade[property] = p;\n        } else if (_.isObject(p) && 'getHardenedInstance' in p) {\n          // builds a facade\n          facade[property] = p.getHardenedInstance();\n        } else {\n          throw new Error(\"Sorry, you can't wrap '\" + property + \"': \" + p);\n        }\n      } else if (typeof propertyValue === 'function') {\n        facade[property] = _.bind(propertyValue, objectIn);\n      } else {\n        throw new Error('Unknown key: ' + property + '(' + propertyValue + ')');\n      }\n    }\n\n    if (objectIn) {\n      // .name is not supported in IE\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n      facade.__facade__ = Boolean(objectIn.constructor ? objectIn.constructor.name ? objectIn.constructor.name : true : true);\n    } else {\n      facade.__facade__ = true;\n    } // TODO:rca - shall we use?\n    // if (Object.freeze)\n    //  facade = Object.freeze(facade);\n\n\n    return facade;\n  };\n\n  return Facade;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/facade.js?");

/***/ }),

/***/ "./src/js/components/multi_params.js":
/*!*******************************************!*\
  !*** ./src/js/components/multi_params.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n multi_params is a generic class to store any parameters;\n it is backed by BB.Model and has all the functionality\n the values are always stored as an array of values; so\n even if you try to set strings, you will always have\n list of strings\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! jquery */ \"./src/libs/jquery.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _, $) {\n  var Model = Backbone.Model.extend({\n    locked: false,\n    _checkLock: function _checkLock() {\n      if (this.locked === true) {\n        throw Error('Object locked for modifications');\n      }\n    },\n    isLocked: function isLocked() {\n      return this.locked;\n    },\n    lock: function lock() {\n      this.locked = true;\n    },\n    unlock: function unlock() {\n      this.locked = false;\n    },\n    clone: function clone() {\n      if (this.isLocked()) {\n        var c = new this.constructor(this.attributes);\n        c.lock();\n        return c;\n      }\n\n      return new this.constructor(this.attributes);\n    },\n    hasVal: function hasVal(key) {\n      return !_.isEmpty(this.get(key));\n    },\n    // we allow only strings and numbers; instead of sending\n    // signal we throw a direct error\n    _validate: function _validate(attributes, options) {\n      // check we have only numbers and/or finite numbers\n      for (var attr in attributes) {\n        if (!_.isString(attr)) {\n          throw new Error('Keys must be strings, not: ' + attr);\n        } // remove empty strings\n\n\n        var tempVal = attributes[attr];\n        tempVal = _.without(_.flatten(tempVal), '', false, null, undefined, NaN);\n\n        if (!_.isArray(tempVal)) {\n          throw new Error('Values were not converted to an Array');\n        }\n\n        if (_.isEmpty(tempVal) && options.unset !== true) {\n          throw new Error('Empty values not allowed');\n        }\n\n        if (!_.every(tempVal, function (v) {\n          return _.isString(v) || _.isNumber(v) && !_.isNaN(v);\n        })) {\n          throw new Error('Invalid value (not a string or number): ' + tempVal);\n        }\n\n        attributes[attr] = tempVal;\n      }\n\n      return true;\n    },\n    // Every value is going to be multi-valued by default\n    // in this way we can treat all objects in the same way\n    set: function set(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      for (var attr in attrs) {\n        var tempVal = attrs[attr]; // convert to array if necessary\n\n        if (!_.isArray(tempVal)) {\n          attrs[attr] = _.flatten([tempVal]);\n        }\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    unset: function unset() {\n      this._checkLock();\n\n      Backbone.Model.prototype.unset.apply(this, arguments);\n    },\n    // adds values to existing (like set, but keeps the old vals)\n    add: function add(key, val, options) {\n      this._checkLock();\n\n      var attrs;\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      for (var attr in attrs) {\n        var tempVal = attrs[attr]; // convert to array if necessary\n\n        if (!_.isArray(tempVal)) {\n          tempVal = _.flatten([tempVal]);\n        }\n\n        if (this.has(attr)) {\n          tempVal = _.clone(this.get(attr)).concat(tempVal);\n        }\n\n        attrs[attr] = tempVal;\n      }\n\n      Backbone.Model.prototype.set.call(this, attrs, options);\n    },\n    // synchronization is disabled\n    sync: function sync() {\n      throw Error('MultiParams cannot be saved to server');\n    },\n\n    /*\n     * Return the url string encoding all parameters that made\n     * this query. The parameters will be sorted alphabetically\n     * by their keys and URL encoded so that they can be used\n     * in requests.\n     */\n    url: function url(whatToSort) {\n      if (!whatToSort) {\n        whatToSort = this.attributes;\n      } // sort keys alphabetically\n\n\n      var sorted = _.pairs(whatToSort).sort(function (a, b) {\n        return a[0] > b[0] ? 1 : a[0] < b[0] ? -1 : 0;\n      }); // June1:rca - I need to preserve order of values (becuaes of the query modifications/updates) the logic\n      // just requires us to be careful and we need order to be preserved when the query is cloned\n      // also sort values\n      // var s = {};\n      // sorted.map(function(item) { s[item[0]] = (_.isArray(item[1]) ? item[1].sort() : item[1]) });\n      // we have to double encode certain elements\n      // sorted = _.map(sorted, function(pair) { return [pair[0], _.map(pair[1], function(v) {return (v.indexOf && v.indexOf('=') > -1) ? encodeURIComponent(v) : v })]});\n      // use traditional encoding\n      // use %20 instead of + (url encoding instead of form encoding)\n\n\n      var encoded = $.param(_.object(sorted), true);\n      encoded = encoded.replace(/\\+/g, '%20'); // Replace funky unicode quotes with normal ones\n\n      encoded = encoded.replace(/%E2%80%9[ECD]/g, '%22');\n      return encoded;\n    },\n\n    /**\n     * Parses string (urlparams) and returns it as an object\n     * @param resp\n     * @param options\n     * @returns {*}\n     */\n    parse: function parse(resp, options) {\n      if (_.isString(resp)) {\n        var attrs = {};\n        resp = decodeURI(resp);\n\n        if (resp.indexOf('?') > -1) {\n          attrs['#path'] = [resp.slice(0, resp.indexOf('?'))];\n          resp = resp.slice(resp.indexOf('?') + 1);\n        }\n\n        if (resp.indexOf('#') > -1) {\n          attrs['#hash'] = this._parse(resp.slice(resp.indexOf('#') + 1));\n          resp = resp.slice(0, resp.indexOf('#'));\n        }\n\n        attrs['#query'] = this._parse(resp);\n        return this._checkParsed(attrs);\n      }\n\n      return this._checkParsed(resp); // else return resp object\n    },\n    _parse: function _parse(resp) {\n      var attrs = {};\n      var hash;\n\n      if (!resp.trim()) {\n        return attrs;\n      }\n\n      var hashes = resp.slice(resp.indexOf('?') + 1).split('&'); // resp = decodeURIComponent(resp);\n\n      var key;\n      var value;\n\n      for (var i = 0; i < hashes.length; i++) {\n        hash = hashes[i].split('=');\n        key = decodeURIComponent(hash[0].split('+').join(' ')); // optimized: .replace(/\\+/g, \" \")\n\n        var vall = hash[1];\n\n        if (hash.length > 2) {\n          hash.shift();\n          vall = hash.join('=');\n        } // replace literal '%' with code and '+' become literal spaces\n\n\n        value = decodeURIComponent(vall.replace(/%(?!\\d|[ABCDEF]+)/gi, '%25').split('+').join(' '));\n\n        if (attrs[key] !== undefined) {\n          attrs[key].push(value);\n        } else {\n          attrs[key] = [value];\n        }\n      }\n\n      return attrs;\n    },\n    // default behaviour is just to keep the query parameters\n    // after the string was parsed, you can override it to suit other needs\n    _checkParsed: function _checkParsed(attrs) {\n      if (_.isObject(attrs)) {\n        if ('#query' in attrs) {\n          return attrs['#query'];\n        }\n      }\n\n      return attrs;\n    },\n\n    /**\n     * Re-constructs the query from the url string, returns the json attributes;\n     * cannot be used it the instance is locked\n     *\n     * @param query (String)\n     * @returns {Model}\n     */\n    load: function load(query) {\n      this._checkLock();\n\n      var vals = this.parse(query);\n      this.clear();\n      this.set(vals);\n      return this;\n    }\n  });\n  return Model;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/multi_params.js?");

/***/ }),

/***/ "./src/js/components/pubsub_events.js":
/*!********************************************!*\
  !*** ./src/js/components/pubsub_events.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/30/14.\n */\n\n/**\n * Catalogue of PubSub events; we assume this:\n *\n *  - FC = the component lives in the 'Forbidden City'\n *         inside Application, typically this is a PubSub or Api, Mediator\n *         or any component with elevated access\n *\n *  - OC = Outer City: the suburbs of the application; these are typically\n *         UI components (behind the wall), untrusted citizens of the\n *         BumbleBee state\n *\n *  WARNING: do not use spaces; events with spaces are considered to be\n *        multiple events! (e.g. '[PubSub] New-Query' will be two events)\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var PubSubEvents = {\n    /**\n     * Usually called by OC's as a first step in the query processing.\n     * It means: 'user did something', we need to start reacting. The OC\n     * will build a new ApiQuery and send it together with this event\n     */\n    START_SEARCH: '[PubSub]-New-Query',\n\n    /**\n     * Called by FC's (usually: Mediator) - this is a signal to *all* OC's\n     * they should receive ApiQuery object, compare it against their\n     * own query; find diff and create a new ApiRequest (asking for a data)\n     * and send that back\n     */\n    INVITING_REQUEST: '[PubSub]-Inviting-Request',\n\n    /**\n     * Will be called by OC's, this is response to ApiQuery input.\n     */\n    DELIVERING_REQUEST: '[PubSub]-New-Request',\n\n    /**\n     * Will be called by OC's, this is one-time forget action (outside of the\n     * the search cycle); use this for any query that needs to be executed\n     * and not be tracked by search cycle\n     */\n    EXECUTE_REQUEST: '[PubSub]-Execute-Request',\n\n    /**\n     * Called from the router, the QID will be passed; the query needs to be\n     * loaded and executed\n     */\n    EXECUTE_STORED_QUERY: '[PubSub]-Execute-Stored-Query',\n\n    /**\n     * Published by FC's - typically Mediator - when a response has been retrieved\n     * for a given ApiRequest.\n     *\n     * OC's should subscribe to this event when they want to receive data\n     * from the treasury (api)\n     *\n     *  - input: ApiRequest\n     *  - output: ApiResponse\n     */\n    DELIVERING_RESPONSE: '[PubSub]-New-Response',\n\n    /**\n     * The walls of the FC are being closed; and no new requests will be served\n     */\n    CLOSING_GATES: '[PubSub]-Closing',\n\n    /**\n     * PubSub will not receive any requests any more\n     */\n    CLOSED_FOR_BUSINESS: '[PubSub]-Closed',\n\n    /**\n     * ForbiddenCity is about to receive requests\n     */\n    OPENING_GATES: '[PubSub]-Opening',\n\n    /**\n     * Called after PubSub became ready - it is fully operational\n     */\n    OPEN_FOR_BUSINESS: '[PubSub]-Ready',\n\n    /**\n     *  Set of error warnings issues by PubSub - or by some other FC's - to\n     *  deal with congestion or other problems\n     */\n    SMALL_FIRE: '[PubSub]-Problem',\n    BIG_FIRE: '[PubSub]-Big-Problem',\n    CITY_BURNING: '[PubSub]-Disaster',\n\n    /**\n     * A message containing feedback from the FC; traveling towards OC\n     * The feedback will be instance of ApiFeedback\n     */\n    FEEDBACK: '[FC]-FeedBack',\n\n    /**\n     * A message from the router requesting showing citizens of the\n     * city\n     */\n    DISPLAY_DOCUMENTS: '[Router]-Display-Documents',\n    DISPLAY_DOCUMENTS_DETAILS: '[Router]-Display-Documents-Details',\n\n    /**\n     * Used by OC to request parsed query tree - to check a query\n     * for example\n     */\n    GET_QTREE: '[FC]-GetQTree',\n    NAVIGATE: '[Router]-Navigate-With-Trigger',\n\n    /*\n     * so navigator can notify interested widgets about a change\n     * from search page to user page, for instance-- navigator cannot\n     * to this since it listens to many events including widget-show events\n     * */\n    PAGE_CHANGE: '[Navigator]Page-Changed',\n\n    /* for custom widget-to-widget events */\n    CUSTOM_EVENT: '[PubSub]-Custom-Event',\n    ARIA_ANNOUNCEMENT: '[PubSub]-Aria-Announcement',\n\n    /* anything to do with changing the state of the user, including session events */\n    USER_ANNOUNCEMENT: '[PubSub]-User-Announcement',\n\n    /**\n     * A message/action that should be displayed to the user (on prominent)\n     * place\n     */\n    ALERT: '[Alert]-Message',\n    ORCID_ANNOUNCEMENT: '[PubSub]-Orcid-Announcement',\n\n    /**\n     * Happens during the main cycle of the application birth\n     *  LOADED = when all components were successfuly loaded\n     *  BOOTSTRAPPED = + when all dynamic config was loaded\n     *  STARTING = + right before the router and history objects start()\n     *  STARTED = app is alive and handling requests\n     */\n    APP_LOADED: '[App]-Application-Loaded',\n    APP_BOOTSTRAPPED: '[App]-Application-Bootstrapped',\n    APP_STARTING: '[App]-Application-Starting',\n    APP_STARTED: '[App]-Application-Started',\n    APP_EXIT: '[App]-Exit',\n\n    /**\n     * Is triggered when user selects/deselects records\n     */\n    PAPER_SELECTION: '[User]-Paper-Selection',\n    // instead of toggling, adds all papers\n    BULK_PAPER_SELECTION: '[User]-Bulk-Paper-Selection',\n\n    /*\n     * is triggered by app storage itself when list of selected papers changes\n     * */\n    STORAGE_PAPER_UPDATE: '[User]-Paper-Update',\n    LIBRARY_CHANGE: '[PubSub]-Library-Change'\n  };\n  return PubSubEvents;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/pubsub_events.js?");

/***/ }),

/***/ "./src/js/components/pubsub_key.js":
/*!*****************************************!*\
  !*** ./src/js/components/pubsub_key.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/14/14.\n */\n\n/*\n * A simple, yet important, class - every subscriber\n * to the PubSub must contain one key. This class\n * should be instantiated in a safe manner. ie.\n *\n * PubSubKey.newInstance({creator: this});\n *\n * But beware that as long as the subscriber is alive\n * reference to the creator will be saved inside\n * the key! So choose carefully whether you use this\n * functionality\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_) {\n  var PubSubKey = function PubSubKey(options) {\n    _.extend(this, options);\n  };\n\n  _.extend(PubSubKey, {\n    /*\n     * Creates a new Instances of the PubSubKey\n     * with a storage that cannot be changed.\n     * To double sign the key, you can pass\n     * an object that identifies creator of the\n     * key and test identity, eg.\n     *\n     * var creator = {};\n     * var k = PubSubKey(creator);\n     * k.getCreator() === k;\n     *\n     */\n    newInstance: function newInstance(options) {\n      var priv = {\n        id: _.has(options, 'id') ? options.id : _.uniqueId(':psk'),\n        creator: _.has(options, 'creator') ? options.creator : null\n      };\n      return new PubSubKey({\n        getId: function getId() {\n          return priv.id;\n        },\n        getCreator: function getCreator() {\n          return priv.creator;\n        }\n      });\n    }\n  });\n\n  return PubSubKey;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/pubsub_key.js?");

/***/ }),

/***/ "./src/js/components/solr_params.js":
/*!******************************************!*\
  !*** ./src/js/components/solr_params.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\nSubclass of the multi-param with a functionality specific for\nSOLR queries. Do not use this class directly inside your app!\nInstead, import 'api_query' and configure it properly\n\n * <p>For a list of possible parameters, please consult the links below.</p>\n *\n * @see http://wiki.apache.org/solr/CoreQueryParameters\n * @see http://wiki.apache.org/solr/CommonQueryParameters\n * @see http://wiki.apache.org/solr/SimpleFacetParameters\n * @see http://wiki.apache.org/solr/HighlightingParameters\n * @see http://wiki.apache.org/solr/MoreLikeThis\n * @see http://wiki.apache.org/solr/SpellCheckComponent\n * @see http://wiki.apache.org/solr/StatsComponent\n * @see http://wiki.apache.org/solr/TermsComponent\n * @see http://wiki.apache.org/solr/TermVectorComponent\n * @see http://wiki.apache.org/solr/LocalParams\n *\n * @param properties A map of fields to set. Refer to the list of public fields.\n * @class ParameterStore\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! js/components/multi_params */ \"./src/js/components/multi_params.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! jquery */ \"./src/libs/jquery.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (MultiParams, Backbone, _, $) {\n  var SolrParams = MultiParams.extend({\n    fieldsToConcatenate: [],\n    defaultOperator: ' ',\n    fieldProcessors: {\n      '*': function _(vals, self) {\n        return [vals.join(self.defaultOperator)];\n      }\n    },\n    initialize: function initialize(attributes, options) {\n      if (options) {\n        _.extend(this, _.pick(options, ['fieldsToConcatenate', 'defaultOperator', 'fieldProcessors']));\n      }\n    },\n    url: function url(resp, options) {\n      // first massage the fields, but do not touch the original values\n      // lodash has a parameter isDeep that can be set to true, but\n      // for compatibility reasons with underscore, lets' not use it\n      // the values should always be only one level deep\n      var values = _.clone(this.attributes);\n\n      var l = this.fieldsToConcatenate.length;\n      var k = '';\n\n      for (var i = 0; i < l; i++) {\n        k = this.fieldsToConcatenate[i];\n\n        if (this.has(k)) {\n          if (this.fieldProcessors[k]) {\n            values[k] = this.fieldProcessors[k](this.get(k), this);\n          } else {\n            values[k] = this.fieldProcessors['*'](this.get(k), this);\n          }\n        }\n      } // then call the default implementation of the url handling\n\n\n      return MultiParams.prototype.url.call(this, values);\n    }\n  });\n  return SolrParams;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/components/solr_params.js?");

/***/ }),

/***/ "./src/js/mixins/dependon.js":
/*!***********************************!*\
  !*** ./src/js/mixins/dependon.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/13/14.\n */\n\n/*\n * This module contains a set of utilities that can be added to classes\n * to give them certain functionality\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/pubsub_events */ \"./src/js/components/pubsub_events.js\"), __webpack_require__(/*! js/components/pubsub_key */ \"./src/js/components/pubsub_key.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, PubSubEvents, PubSubKey) {\n  var Mixin = {\n    /*\n     * BeeHive is the object that allows modules to get access to objects\n     * of the application (but we make sure these objects are protected\n     * and only application can set/change them). This mixin gives objects\n     * functions to query 'BeeHive'\n     */\n    BeeHive: {\n      // called by parents (app) to give modules access\n      setBeeHive: function setBeeHive(brundibar) {\n        if (_.isEmpty(brundibar)) throw new Error('Huh? Empty Beehive? Trying to be funny?');\n        this.__beehive = brundibar;\n      },\n      getBeeHive: function getBeeHive() {\n        if (!this.hasBeeHive()) throw new Error('The BeeHive is inactivate (or dead :<})');\n        return this.__beehive;\n      },\n      hasBeeHive: function hasBeeHive() {\n        if (this.__beehive && (this.__beehive.active || this.__beehive.__facade__ && this.__beehive.getActive())) {\n          return true;\n        }\n\n        return false;\n      },\n\n      /**\n       * Method which returns a masked instance of PubSub (unless the PubSub\n       * is already a hardened instance; which carries its own key)\n       *\n       * You can call pubsub.publish() without having to supply the pubsub key\n       * (which is what most controllers want to do; there are only some\n       * exceptions to this rule; ie. query-mediator). If you need to get\n       * access to the full PubSub (and you have it inside BeeHive) then do\n       * this.getBeeHive().getService('PubSub')\n       */\n      getPubSub: function getPubSub() {\n        if (!this.hasBeeHive()) throw new Error('The BeeHive is inactive (or dead >:})');\n        if (!this.__ctx) this.__ctx = {};\n        if (this.__ctx.pubsub) return this.__ctx.pubsub;\n\n        var pubsub = this.__beehive.getService('PubSub');\n\n        if (pubsub && pubsub.__facade__) return pubsub; // build a unique key for this instance\n\n        this.__ctx.pubsub = {\n          _key: pubsub.getPubSubKey(),\n          _exec: function _exec(name, args) {\n            args = _.toArray(args);\n            if (args[0] instanceof PubSubKey) throw Error('You have given us a PubSub key, this.publish() method does not need it.');\n            args.unshift(this._key);\n            pubsub[name].apply(pubsub, args);\n          },\n          publish: function publish() {\n            this._exec('publish', arguments);\n          },\n          subscribe: function subscribe() {\n            this._exec('subscribe', arguments);\n          },\n          subscribeOnce: function subscribeOnce() {\n            this._exec('subscribeOnce', arguments);\n          },\n          unsubscribe: function unsubscribe() {\n            this._exec('unsubscribe', arguments);\n          },\n          getCurrentPubSubKey: function getCurrentPubSubKey() {\n            return this._key;\n          }\n        };\n\n        _.extend(this.__ctx.pubsub, PubSubEvents);\n\n        return this.__ctx.pubsub;\n      },\n      hasPubSub: function hasPubSub() {\n        if (this.hasBeeHive()) return _.isObject(this.__beehive.getService('PubSub'));\n        return false;\n      }\n    },\n    App: {\n      setApp: function setApp(app) {\n        if (_.isUndefined(app)) throw new Error('App object cannot be empty');\n        this.__app = app;\n      },\n      getApp: function getApp() {\n        return this.__app;\n      },\n      hasApp: function hasApp() {\n        return !_.isEmpty(this.__app);\n      }\n    }\n  };\n  return Mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/dependon.js?");

/***/ }),

/***/ "./src/js/mixins/hardened.js":
/*!***********************************!*\
  !*** ./src/js/mixins/hardened.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Created by rchyla on 3/18/14.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/facade */ \"./src/js/components/facade.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Facade) {\n  var Mixin = {\n    /*\n     * Creates a hardened instance of itself, it uses\n     * interface description from 'hardenedInterface'\n     * Implementations need to populate 'hardenedInterface'\n     * with list of properties and methods that should be exposed\n     * through the Facade\n     */\n    _getHardenedInstance: function _getHardenedInstance(iface, objectIn) {\n      if (!('hardenedInterface' in this) && !iface) {\n        throw Error('Error: this.hardenedInterface is not defined');\n      }\n\n      return new Facade(iface || ('hardenedInterface' in this ? this.hardenedInterface : {}), objectIn);\n    },\n    getHardenedInstance: function getHardenedInstance(iface) {\n      return this._getHardenedInstance(iface, this);\n    }\n  };\n  return Mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/hardened.js?");

/***/ }),

/***/ "./src/js/mixins/link_generator_mixin.js":
/*!***********************************************!*\
  !*** ./src/js/mixins/link_generator_mixin.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/mixins/openurl_generator */ \"./src/js/mixins/openurl_generator.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, _ref) {\n  var getOpenUrl = _ref.getOpenUrl;\n  var GATEWAY_BASE_URL = '/link_gateway/';\n  var DEFAULT_ORDERING = ['ADS_PDF', 'ADS_SCAN', 'INSTITUTION', 'PUB_PDF', 'PUB_HTML', 'EPRINT_PDF', 'EPRINT_HTML', 'AUTHOR_PDF', 'AUTHOR_HTML'];\n\n  var sortByDefaultOrdering = function sortByDefaultOrdering(sources) {\n    // initially sort the whole list by the DEFAULT_ORDERING array\n    var sortedSources = sources.sort(function (a, b) {\n      var aIndex = DEFAULT_ORDERING.indexOf(a.rawType);\n      var bIndex = DEFAULT_ORDERING.indexOf(b.rawType); // If both elements are in the DEFAULT_ORDERING array, sort based on their indices\n\n      if (aIndex !== -1 && bIndex !== -1) {\n        return aIndex - bIndex;\n      } // If only 'a' is in DEFAULT_ORDERING, move it before 'b'\n\n\n      if (aIndex !== -1) {\n        return -1;\n      } // If only 'b' is in DEFAULT_ORDERING, move it before 'a'\n\n\n      if (bIndex !== -1) {\n        return 1;\n      } // If both elements are not in DEFAULT_ORDERING, maintain their relative order\n\n\n      return 0;\n    }); // then make sure that sources in DEFAULT_ORDERING are pushed to the top\n\n    return [].concat(_toConsumableArray(sortedSources.filter(function (source) {\n      return DEFAULT_ORDERING.includes(source.rawType);\n    })), _toConsumableArray(sortedSources.filter(function (source) {\n      return !DEFAULT_ORDERING.includes(source.rawType);\n    })));\n  };\n  /**\n   * @typedef {Object} LinkType\n   * @property {string} name - Full name\n   * @property {string} shortName - shorter name for display\n   * @property {string} description - longer description\n   * @property {('PDF' | 'SCAN' | 'HTML')} type - Resource type\n   */\n\n  /**\n   * set of link types and descriptions\n   * @type {Object.<string, LinkType>}\n   */\n\n\n  var LINK_TYPES = {\n    '4TU.ResearchData': {\n      shortName: '4TU.ResearchData',\n      description: 'International data repository for science, engineering and design'\n    },\n    AcA: {\n      shortName: 'AcA',\n      description: 'Acta Astronomica Data Files'\n    },\n    ADS_PDF: {\n      name: 'ADS PDF',\n      shortName: 'ADS',\n      description: 'ADS PDF',\n      type: 'PDF'\n    },\n    ADS_SCAN: {\n      name: 'ADS Scanned Article',\n      description: 'ADS scanned article',\n      shortName: 'ADS',\n      type: 'SCAN'\n    },\n    AHED: {\n      shortName: 'AHED',\n      description: 'Astrobiology Habitable Environments Database'\n    },\n    ALMA: {\n      shortName: 'ALMA',\n      description: 'Atacama Large Millimeter/submillimeter Array'\n    },\n    ArcticData: {\n      shortName: 'ArcticData',\n      description: 'Arctic Data Center'\n    },\n    ARI: {\n      shortName: 'ARI',\n      description: 'Astronomisches Rechen-Institut'\n    },\n    ARTEMIS: {\n      shortName: 'ARTEMIS',\n      description: 'Acceleration Reconnection Turbulence & Electrodynamics of Moon Interaction with the Sun'\n    },\n    AstroGeo: {\n      shortName: 'AstroGeo',\n      description: 'USGS Astrogeology Science Center'\n    },\n    Astroverse: {\n      shortName: 'Astroverse',\n      description: 'CfA Dataverse'\n    },\n    ASU: {\n      shortName: 'ASU',\n      description: 'Arizona State University'\n    },\n    ATNF: {\n      shortName: 'ATNF',\n      description: 'Australia Telescope Online Archive'\n    },\n    Author: {\n      shortName: 'Author',\n      description: 'Author Hosted Dataset'\n    },\n    AUTHOR_HTML: {\n      name: 'Author Article',\n      shortName: 'Author',\n      description: 'Link to HTML page provided by author',\n      type: 'HTML'\n    },\n    AUTHOR_PDF: {\n      name: 'Author PDF',\n      shortName: 'Author',\n      description: 'Link to PDF page provided by author',\n      type: 'PDF'\n    },\n    BAS: {\n      shortName: 'BAS',\n      description: 'British Antarctic Survey'\n    },\n    BAVJ: {\n      shortName: 'BAVJ',\n      description: 'Data of the German Association for Variable Stars'\n    },\n    BICEP2: {\n      shortName: 'BICEP2',\n      description: 'BICEP/Keck Data'\n    },\n    CADC: {\n      shortName: 'CADC',\n      description: 'Canadian Astronomy Data Center'\n    },\n    Caltech: {\n      shortName: 'Caltech',\n      description: 'California Institute of Technology'\n    },\n    CDS: {\n      shortName: 'CDS',\n      description: 'Strasbourg Astronomical Data Center'\n    },\n    Chandra: {\n      shortName: 'Chandra',\n      description: 'Chandra X-Ray Observatory'\n    },\n    ClimateDataStore: {\n      shortName: 'ClimateDataStore',\n      description: 'Climate Data Store'\n    },\n    CMDN: {\n      shortName: 'CMDN',\n      description: 'China Meteorological Data Service Centre'\n    },\n    CXO: {\n      shortName: 'CXO',\n      description: 'Chandra Data Archive'\n    },\n    DARTS: {\n      shortName: 'DARTS',\n      description: 'Data ARchives and Transmission System'\n    },\n    Dataverse: {\n      shortName: 'Dataverse',\n      description: 'Dataverse Project'\n    },\n    Dryad: {\n      shortName: 'Dryad',\n      description: 'International Repository of Research Data'\n    },\n    EARTHCHEM: {\n      shortName: 'EARTHCHEM',\n      description: 'Open-access repository for geochemical datasets'\n    },\n    ECMWF: {\n      shortName: 'ECMWF',\n      description: 'European Centre for Medium-Range Weather Forecasts'\n    },\n    EMFISIS: {\n      shortName: 'EMFISIS',\n      description: 'An instrument suite on the Van Allen Probes'\n    },\n    EPRINT_HTML: {\n      name: 'Preprint Article',\n      shortName: 'Preprint',\n      description: 'Preprint article',\n      type: 'HTML'\n    },\n    EPRINT_PDF: {\n      name: 'Preprint PDF',\n      shortName: 'Preprint',\n      description: 'Preprint PDF',\n      type: 'PDF'\n    },\n    ERGSC: {\n      shortName: 'ERGSC',\n      description: 'ERG Science Center'\n    },\n    ESA: {\n      shortName: 'ESA',\n      description: 'ESAC Science Data Center'\n    },\n    ESGF: {\n      shortName: 'ESGF',\n      description: 'Earth System Grid Federation'\n    },\n    ESO: {\n      shortName: 'ESO',\n      description: 'European Southern Observatory'\n    },\n    ETHZ: {\n      shortName: 'ETHZ',\n      description: 'ETH Zurich Research Collection'\n    },\n    FDSN: {\n      shortName: 'FDSN',\n      description: 'International Federation of Digital Seismograph Networks'\n    },\n    Figshare: {\n      shortName: 'Figshare',\n      description: 'Online Open Access Repository'\n    },\n    figshare: {\n      shortName: 'figshare',\n      description: 'Online Open Access Repository'\n    },\n    GCPD: {\n      shortName: 'GCPD',\n      description: 'The General Catalogue of Photometric Data'\n    },\n    Gemini: {\n      shortName: 'Gemini',\n      description: 'Gemini Observatory Archive'\n    },\n    Github: {\n      shortName: 'Github',\n      description: 'Web-based version-control and collaboration platform for software developers.'\n    },\n    GRAS: {\n      shortName: 'GRAS',\n      description: 'Lunar and Planet Exploration Program Ground Application System'\n    },\n    GTC: {\n      shortName: 'GTC',\n      description: 'Gran Telescopio CANARIAS Public Archive'\n    },\n    HEASARC: {\n      shortName: 'HEASARC',\n      description: 'NASA High Energy Astrophysics Science Archive Research Center'\n    },\n    Herschel: {\n      shortName: 'Herschel',\n      description: 'Herschel Science Center'\n    },\n    IBVS: {\n      shortName: 'IBVS',\n      description: 'Information Bulletin on Variable Stars'\n    },\n    INES: {\n      shortName: 'INES',\n      description: 'IUE Newly Extracted Spectra'\n    },\n    IRIS: {\n      shortName: 'IRIS',\n      description: 'Incorporated Research Institutions for Seismology'\n    },\n    IRSA: {\n      shortName: 'IRSA',\n      description: 'NASA/IPAC Infrared Science Archive'\n    },\n    ISO: {\n      shortName: 'ISO',\n      description: 'Infrared Space Observatory'\n    },\n    JOSS: {\n      shortName: 'JOSS',\n      description: 'Journal of Open Source Software'\n    },\n    JWST: {\n      shortName: 'JWST',\n      description: 'JWST Proposal Info'\n    },\n    KOA: {\n      shortName: 'KOA',\n      description: 'Keck Observatory Archive'\n    },\n    LAADS: {\n      shortName: 'LAADS',\n      description: 'Level-1 and Atmosphere Archive & Distribution System Distributed Active Archive Center'\n    },\n    label: {\n      shortName: 'label',\n      description: 'name'\n    },\n    LASP: {\n      shortName: 'LASP',\n      description: 'Laboratory for Atmospheric and Space Physics'\n    },\n    LPL: {\n      shortName: 'LPL',\n      description: 'Lunar and Planetary Laboratory'\n    },\n    MAST: {\n      shortName: 'MAST',\n      description: 'Mikulski Archive for Space Telescopes'\n    },\n    MetOffice: {\n      shortName: 'MetOffice',\n      description: 'Met Office'\n    },\n    MIT: {\n      shortName: 'MIT',\n      description: 'Massachusetts Institute of Technology'\n    },\n    NASA: {\n      shortName: 'NASA',\n      description: 'NASA Data Portal'\n    },\n    NCAR: {\n      shortName: 'NCAR',\n      description: 'National Center for Atmospheric Research'\n    },\n    NED: {\n      shortName: 'NED',\n      description: 'NASA/IPAC Extragalactic Database'\n    },\n    NExScI: {\n      shortName: 'NExScI',\n      description: 'NASA Exoplanet Archive'\n    },\n    NOAA: {\n      shortName: 'NOAA',\n      description: 'National Oceanic and Atmospheric Administration'\n    },\n    NOAO: {\n      shortName: 'NOAO',\n      description: 'National Optical Astronomy Observatory'\n    },\n    OSF: {\n      shortName: 'OSF',\n      description: 'Open Science Foundation'\n    },\n    PANGAEA: {\n      shortName: 'PANGAEA',\n      description: 'Digital Data Library and a Data Publisher for Earth System Science'\n    },\n    pangaea: {\n      shortName: 'pangaea',\n      description: 'Digital Data Library and a Data Publisher for Earth System Science'\n    },\n    PASA: {\n      shortName: 'PASA',\n      description: 'Publication of the Astronomical Society of Australia Datasets'\n    },\n    PDG: {\n      shortName: 'PDG',\n      description: 'Particle Data Group'\n    },\n    PDS: {\n      shortName: 'PDS',\n      description: 'The NASA Planetary Data System'\n    },\n    PDSS: {\n      shortName: 'PDSS',\n      description: 'The NASA Planetary Data System'\n    },\n    PIK: {\n      shortName: 'PIK',\n      description: 'Potsdam Institute for Climate Impact Research'\n    },\n    protocols: {\n      shortName: 'protocols',\n      description: 'Collaborative Platform and Preprint Server for Science Methods and Protocols'\n    },\n    PUB_HTML: {\n      name: 'Publisher Article',\n      shortName: 'Publisher',\n      description: 'Electronic on-line publisher article (HTML)',\n      type: 'HTML'\n    },\n    PUB_PDF: {\n      name: 'Publisher PDF',\n      shortName: 'Publisher',\n      description: 'Publisher PDF',\n      type: 'PDF'\n    },\n    ScienceBase: {\n      shortName: 'ScienceBase',\n      description: 'ScienceBase'\n    },\n    SIMBAD: {\n      shortName: 'SIMBAD',\n      description: 'SIMBAD Database at the CDS'\n    },\n    Spitzer: {\n      shortName: 'Spitzer',\n      description: 'Spitzer Space Telescope'\n    },\n    TDR: {\n      shortName: 'TDR',\n      description: 'Texas Data Respository'\n    },\n    THEMIS: {\n      shortName: 'THEMIS',\n      description: 'Time History of Events and Macroscopic Interactions During Substorms'\n    },\n    TNS: {\n      shortName: 'TNS',\n      description: 'Transient Name Server'\n    },\n    UNAVCO: {\n      shortName: 'UNAVCO',\n      description: 'UNAVCO'\n    },\n    Vizier: {\n      shortName: 'VizieR',\n      description: 'VizieR Catalog Service'\n    },\n    XMM: {\n      shortName: 'XMM',\n      description: 'XMM Newton Science Archive'\n    },\n    Zenodo: {\n      shortName: 'Zenodo',\n      description: 'Zenodo Archive'\n    }\n  };\n\n  var enc = function enc(str) {\n    return encodeURIComponent(str);\n  };\n  /**\n   * Create the resolver url\n   * @param {string} bibcode - the bibcode\n   * @param {string} target - the source target (i.e. PUB_HTML)\n   * @returns {string} - the new url\n   */\n\n\n  var _createGatewayUrl = function _createGatewayUrl(bibcode, target) {\n    if (_.isString(bibcode) && _.isString(target)) {\n      return GATEWAY_BASE_URL + enc(bibcode) + '/' + target;\n    }\n\n    return '';\n  };\n  /**\n   * process the link data\n   *\n   * Proceeds in this manner:\n   * 1. Check the property to find ESOURCE and DATA\n   * 2. If there, find the property on the parent object\n   * 3. Process by some rules\n   *  3.1. If OPENACCESS property is present, then all esourses ending with _HTML are open\n   *  3.2. If <field>_OPENACCESS property is present, then the corresponding esource field is open\n   *  3.3. If electr field is present, check if a linkServer is provided among some other things\n   *\n   * @param {object} data - the data object to process\n   * @returns {object} - the fulltext and data sources\n   */\n\n\n  var _processLinkData = function _processLinkData(data) {\n    var createGatewayUrl = this._createGatewayUrl;\n    var fullTextSources = [];\n    var dataProducts = [];\n    var countOpenUrls = 0;\n    var property = data.property; // check the esources property\n\n    _.forEach(data.esources, function (el) {\n      var parts = el.split('_');\n      var linkInfo = LINK_TYPES[el];\n      var linkServer = data.link_server;\n      var identifier = data.doi || data.issn || data.isbn; // Create an OpenURL\n      // Only create an openURL if the following is true:\n      //   - The article HAS an Identifier (doi, issn, isbn)\n      //   - The user is authenticated\n      //   - the user HAS a library link server\n\n      if (identifier && linkServer && countOpenUrls < 1) {\n        fullTextSources.push({\n          url: getOpenUrl({\n            metadata: data,\n            linkServer: linkServer\n          }),\n          openUrl: true,\n          type: 'INSTITUTION',\n          shortName: 'My Institution',\n          name: 'My Institution',\n          description: 'Find Article At My Institution',\n          rawType: 'INSTITUTION'\n        });\n        countOpenUrls += 1;\n      }\n\n      if (parts.length > 1) {\n        // if the entry is a publisher link, we need to do an extra step\n        if (parts[0] === 'PUB') {\n          fullTextSources.push({\n            url: createGatewayUrl(data.bibcode, el),\n            open: _.contains(property, parts[0] + '_OPENACCESS'),\n            // if the publisher field is present, use it as the shortName & name\n            shortName: data.publisher || linkInfo && linkInfo.shortName || el,\n            name: data.publisher || linkInfo && linkInfo.name || el,\n            type: linkInfo && linkInfo.type || 'HTML',\n            description: linkInfo && linkInfo.description,\n            rawType: el\n          });\n        } else {\n          fullTextSources.push({\n            url: createGatewayUrl(data.bibcode, el),\n            open: _.contains(property, parts[0] + '_OPENACCESS'),\n            shortName: linkInfo && linkInfo.shortName || el,\n            name: linkInfo && linkInfo.name || el,\n            type: linkInfo && linkInfo.type || 'HTML',\n            description: linkInfo && linkInfo.description,\n            rawType: el\n          });\n        } // if entry cannot be split, then it will not be open access\n\n      } else {\n        fullTextSources.push({\n          url: createGatewayUrl(data.bibcode, el),\n          open: false,\n          shortName: linkInfo && linkInfo.shortName || el,\n          name: linkInfo && linkInfo.name || el,\n          type: linkInfo && linkInfo.type || 'HTML',\n          description: linkInfo && linkInfo.description,\n          rawType: el\n        });\n      }\n    }); // if no preprint link is present, check links_data as well to make sure\n\n\n    var hasEprint = _.find(fullTextSources, {\n      name: LINK_TYPES.EPRINT_PDF.name\n    });\n\n    if (!hasEprint && _.isArray(data.links_data)) {\n      _.forEach(data.links_data, function (linkData) {\n        var link = JSON.parse(linkData);\n\n        if (/preprint/i.test(link.type)) {\n          var info = LINK_TYPES.EPRINT_PDF;\n          fullTextSources.push({\n            url: link.url,\n            open: true,\n            shortName: info && info.shortName || link.type,\n            name: info && info.name || link.type,\n            type: info && info.type || 'HTML',\n            description: info && info.description,\n            rawType: 'EPRINT_PDF'\n          });\n        }\n      });\n    } // check the data property\n\n\n    _.forEach(data.data, function (product) {\n      var parts = product.split(':');\n      var linkInfo = LINK_TYPES[parts[0]]; // are there any without a count? just make them 1\n\n      if (parts.length > 1) {\n        dataProducts.push({\n          url: createGatewayUrl(data.bibcode, parts[0]),\n          count: parts[1],\n          name: linkInfo ? linkInfo.shortName : parts[0],\n          description: linkInfo ? linkInfo.description : parts[0]\n        });\n      } else {\n        dataProducts.push({\n          url: createGatewayUrl(data.bibcode, product),\n          count: '1',\n          name: linkInfo ? linkInfo.shortName : product,\n          description: linkInfo ? linkInfo.description : product\n        });\n      }\n    }); // sort the data products by descending by count\n\n\n    dataProducts = _.sortBy(dataProducts, 'count').reverse();\n    return {\n      fullTextSources: sortByDefaultOrdering(fullTextSources),\n      dataProducts: dataProducts\n    };\n  };\n  /**\n   * Parse a data object to pull out the references/citations and table of contents\n   * it will also return a copy of the data object with a links property added\n   * @param {object} _data - the data object to parse\n   * @returns {object} - copy of the data object with links prop added\n   */\n\n\n  var _parseLinksDataForModel = function _parseLinksDataForModel(_data, linksData) {\n    var links = {\n      list: [],\n      data: [],\n      text: []\n    };\n\n    var data = _.extend({}, _data, {\n      links: links\n    }); // map linksData to links object\n\n\n    if (_.isPlainObject(linksData)) {\n      links = _.assign(links, {\n        data: links.data.concat(linksData.dataProducts || []),\n        text: links.text.concat(linksData.fullTextSources || [])\n      });\n    }\n\n    if (_.isPlainObject(data)) {\n      // check for the citations property\n      if (_.isPlainObject(data['[citations]']) && _.isString(data.bibcode)) {\n        var citations = data['[citations]']; // push it onto the links if the citation count is higher than 0\n\n        if (_.isNumber(citations.num_citations) && citations.num_citations > 0) {\n          links.list.push({\n            letter: 'C',\n            name: 'Citations (' + citations.num_citations + ')',\n            url: '#abs/' + enc(data.bibcode) + '/citations'\n          });\n        } // push onto the links if the reference count is higher than 0\n\n\n        if (_.isNumber(citations.num_references) && citations.num_references > 0) {\n          links.list.push({\n            letter: 'R',\n            name: 'References (' + citations.num_references + ')',\n            url: '#abs/' + enc(data.bibcode) + '/references'\n          });\n        }\n      } // check that we have property and whether table of contents is found\n\n\n      if (_.isArray(data.property) && _.isString(data.bibcode)) {\n        if (_.contains(data.property, 'TOC')) {\n          links.list.push({\n            letter: 'T',\n            name: 'Table of Contents',\n            url: '#abs/' + enc(data.bibcode) + '/toc'\n          });\n        }\n      }\n    } else {\n      throw new Error('data must be a plain object');\n    }\n\n    return data;\n  };\n  /**\n   * Takes data--a json object from apiResponse--and augments it with a \"links\"\n   * object. This is used for item views in the results widget. This is to be called\n   * by the processData method of a widget.\n   *\n   */\n\n\n  var parseLinksData = function parseLinksData(data) {\n    var parseLinksDataForModel = _.bind(this._parseLinksDataForModel, this);\n\n    var parseResourcesData = _.bind(this.parseResourcesData, this);\n\n    if (_.isArray(data)) {\n      return _.map(data, function (d) {\n        try {\n          var linkData = parseResourcesData(d);\n          return parseLinksDataForModel(d, linkData);\n        } catch (e) {\n          return d;\n        }\n      });\n    }\n\n    return [];\n  };\n  /**\n   * Check that data is an object and that it has the correct properties\n   *\n   * @param {object} data - the data to parse\n   */\n\n\n  var parseResourcesData = function parseResourcesData(data) {\n    var processLinkData = _.bind(this._processLinkData, this); // data must have 'property' and sub-props\n\n\n    if (_.isPlainObject(data)) {\n      if (_.isArray(data.property) && _.isString(data.bibcode)) {\n        // make sure if property has a esource or data, we find it on data as well\n        if (_.contains(data.property, 'ESOURCE') && !_.has(data, 'esources')) {\n          throw new Error('if `property` property contains `ESOURCE`, then data must have `esources` field');\n        }\n\n        if (_.contains(data.property, 'DATA') && !_.has(data, 'data')) {\n          throw new Error('if `property` property contains `DATA`, then data must have `data` field');\n        }\n\n        return processLinkData(_.extend({}, data));\n      }\n\n      throw new Error('data must have `property` and `bibcode`');\n    } else {\n      throw new Error('data must be a plain object');\n    }\n  };\n  /**\n   * Takes in a type and an identifier and will generate a link\n   * @param {string} bibcode - the bibcode\n   * @param {string} type - the type of identifier\n   * @param {string|array} identifier - the identifier to use to build the url\n   * @returns {string}\n   */\n\n\n  var createUrlByType = function createUrlByType(bibcode, type, identifier) {\n    var id = identifier;\n\n    if (_.isArray(id)) {\n      id = id[0];\n    }\n\n    if (_.isString(bibcode) && _.isString(type) && _.isString(id)) {\n      return GATEWAY_BASE_URL + bibcode + '/' + type + ':' + id;\n    }\n\n    return '';\n  };\n\n  return {\n    LINK_TYPES: LINK_TYPES,\n    parseLinksData: parseLinksData,\n    parseResourcesData: parseResourcesData,\n    createUrlByType: createUrlByType,\n    _createGatewayUrl: _createGatewayUrl,\n    _processLinkData: _processLinkData,\n    _parseLinksDataForModel: _parseLinksDataForModel\n  };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/link_generator_mixin.js?");

/***/ }),

/***/ "./src/js/mixins/openurl_generator.js":
/*!********************************************!*\
  !*** ./src/js/mixins/openurl_generator.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_) {\n  /**\n   * @typedef Metadata\n   * @property {string[]} page\n   * @property {string[]} doi\n   * @property {string} doctype\n   * @property {string} bibcode\n   * @property {string} author\n   * @property {string} issue\n   * @property {string} volume\n   * @property {string} pub\n   * @property {string} year\n   * @property {string[]} title\n   * @property {string[]} issn\n   * @property {string[]} isbn\n   */\n\n  /**\n   * check if value is string\n   * @param {any} val value to test\n   * @returns {boolean}\n   */\n  var isString = function isString(val) {\n    return _.isString(val);\n  };\n  /**\n   * Check if value is an array\n   * @param {any} val value to test\n   * @returns {boolean}\n   */\n\n\n  var isArray = function isArray(val) {\n    return _.isArray(val);\n  };\n  /**\n   * ADS specific fields\n   */\n\n\n  var STATIC_FIELDS = {\n    url_ver: 'Z39.88-2004',\n    rft_val_fmt: 'info:ofi/fmt:kev:mtx:',\n    rfr_id: 'info:sid/ADS',\n    sid: 'ADS'\n  };\n  /**\n   * Generates an OpenUrl using metadata and a linkServer\n   * @param {object} options\n   * @param {Metadata} options.metadata field data from database\n   * @param {string} options.linkServer base url to use for generating link\n   * @returns {string} the openUrl url\n   */\n\n  var getOpenUrl = function getOpenUrl(options) {\n    var _ref = options || {},\n        metadata = _ref.metadata,\n        _ref$linkServer = _ref.linkServer,\n        linkServer = _ref$linkServer === void 0 ? '' : _ref$linkServer;\n\n    var _ref2 = metadata || {},\n        page = _ref2.page,\n        doi = _ref2.doi,\n        doctype = _ref2.doctype,\n        bibcode = _ref2.bibcode,\n        author = _ref2.author,\n        issue = _ref2.issue,\n        volume = _ref2.volume,\n        pub = _ref2.pub,\n        year = _ref2.year,\n        title = _ref2.title,\n        issn = _ref2.issn,\n        isbn = _ref2.isbn; // parse out degree based on bibcode\n\n\n    var degree = isString(bibcode) && (bibcode.includes('PhDT') ? 'PhD' : bibcode.includes('MsT') ? 'Masters' : false); // genre is \"disseration\" for phd thesis, otherwise use doctype/article\n\n    var genre = isString(doctype) && isString(bibcode) && bibcode.includes('PhDT') ? 'dissertation' : isString(doctype) ? doctype : 'article'; // parse various fields to create a context object\n\n    var parsed = _objectSpread({}, STATIC_FIELDS, {\n      'rft.spage': isArray(page) ? page[0].split('-')[0] : false,\n      id: isArray(doi) ? 'doi:' + doi[0] : false,\n      genre: genre,\n      rft_id: [isArray(doi) ? 'info:doi/' + doi[0] : false, isString(bibcode) ? 'info:bibcode/' + bibcode : false],\n      'rft.degree': degree,\n      'rft.aulast': isString(author) ? author.split(', ')[0] : false,\n      'rft.aufirst': isString(author) ? author.split(', ')[1] : false,\n      'rft.issue': isString(issue) ? issue : false,\n      'rft.volume': isString(volume) ? volume : false,\n      'rft.jtitle': isString(pub) ? pub : false,\n      'rft.date': isString(year) ? year : false,\n      'rft.atitle': isArray(title) ? title[0] : false,\n      'rft.issn': isArray(issn) ? issn[0] : false,\n      'rft.isbn': isArray(isbn) ? isbn[0] : false,\n      'rft.genre': genre,\n      rft_val_fmt: STATIC_FIELDS.rft_val_fmt + (isString(doctype) ? doctype : 'article')\n    }); // add extra fields to context object\n\n\n    var context = _objectSpread({}, parsed, {\n      spage: parsed['rft.spage'],\n      volume: parsed['rft.volume'],\n      title: parsed['rft.jtitle'],\n      atitle: parsed['rft.atitle'],\n      aulast: parsed['rft.aulast'],\n      aufirst: parsed['rft.aufirst'],\n      date: parsed['rft.date'],\n      isbn: parsed['rft.isbn'],\n      issn: parsed['rft.issn']\n    }); // if the linkServer has query string, just append to the end\n\n\n    var openUrl = linkServer.includes('?') ? linkServer + '&' : linkServer + '?'; // generate array of query params from the context object\n\n    var fields = Object.keys(context).filter(function (k) {\n      return context[k];\n    }).map(function (key) {\n      if (context[key]) {\n        if (isArray(context[key])) {\n          return context[key].filter(function (v) {\n            return v;\n          }).map(function (val) {\n            return \"\".concat(key, \"=\").concat(val);\n          }).join('&');\n        }\n\n        return \"\".concat(key, \"=\").concat(context[key]);\n      }\n    });\n    return encodeURI(openUrl + fields.join('&'));\n  };\n\n  return {\n    getOpenUrl: getOpenUrl\n  };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/openurl_generator.js?");

/***/ }),

/***/ "./src/js/mixins/widget_mixin_method.js":
/*!**********************************************!*\
  !*** ./src/js/mixins/widget_mixin_method.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! js/mixins/widget_utility */ \"./src/js/mixins/widget_utility.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Utils) {\n  var mixin = function mixin(from, methods) {\n    var to = this.prototype; // we add those methods which exists on `from` but not on `to` to the latter\n\n    _.extend(from, to); // … and we do the same for events\n\n\n    _.extend(from.events, to.events);\n\n    _.each(Array.prototype.slice.call(arguments, 1), function (m) {\n      Utils.extendMethod(to, from, m);\n    });\n  };\n\n  return mixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_mixin_method.js?");

/***/ }),

/***/ "./src/js/mixins/widget_state_manager.js":
/*!***********************************************!*\
  !*** ./src/js/mixins/widget_state_manager.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/components/api_feedback */ \"./src/js/components/api_feedback.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, ApiFeedback) {\n  /**\n   * Abstract error pubsub-like manager.  Allows for hooks to be applied that\n   * match API feedback codes\n   *\n   * @constructor\n   */\n  var ErrorHandlerManager = function ErrorHandlerManager() {\n    this.handlers = {};\n    /**\n     * Attach a new handler to an API feedback code\n     *\n     * @param {Number} code - feedback code\n     * @param {function} cb - callback function\n     */\n\n    this.on = function (code, cb) {\n      this.handlers[code].push(cb);\n    };\n    /**\n     * Remove handler by passing in the callback function\n     *\n     * @param {function} cb - callback function\n     */\n\n\n    this.off = function (cb) {\n      _.forEach(this.handlers, function (v, k) {\n        var idx = v.indexOf(cb);\n\n        if (idx > -1) {\n          v.splice(idx, 1);\n        }\n      });\n    };\n    /**\n     * Fire off the callbacks for a particular code\n     *\n     * @param {Number} code - feedback code\n     * @param {Array} args - arguments to pass to the callback\n     * @param {object} ctx - callback's `this` property\n     */\n\n\n    this.fire = function (code, args, ctx) {\n      _.forEach(this.handlers[code], function (cb) {\n        cb.apply(ctx, args);\n      });\n    };\n\n    _.reduce(ApiFeedback.CODES, function (res, code) {\n      res[code] = [];\n      return res;\n    }, this.handlers);\n  };\n  /*\n    Widget state manager mixin\n     This mixin will allow widgets to call lifecycle updates which can then have\n    handlers attached.  The mixin can also serve as a way for page managers to\n    react to widget status updates, since certain widgets should be\n    handled differently depending on their type and importance.\n     The typical way this is used is to call `activateWidget` during the activate\n    call on the widget itself.  Then call the various state updates when the widget\n    is performing actions.\n     The default states are: ready, loading, idle, errored\n     Widgets can attach handlers to the various status updates (i.e. onReady, onLoading, etc.)\n     note: during the activation, the widget's pubsubkey is captured and is used\n    to identify the appropriate feedback.  This way the handlers aren't called for\n    events the widget doesn't care about.\n   */\n\n\n  var WidgetStateManagerMixin = {\n    STATES: {\n      LOADING: 'loading',\n      ERRORED: 'errored',\n      IDLE: 'idle',\n      READY: 'ready'\n    },\n\n    /**\n     * Creates a new instance of the handlerManager and subscribes to the\n     * api feedback calls.  It also sets the first state update.\n     */\n    activateWidget: function activateWidget() {\n      this.__widgetHandlerManager = new ErrorHandlerManager();\n      var pubsub = this.getPubSub();\n      pubsub.subscribe(pubsub.FEEDBACK, _.bind(this.__handleFeedback, this));\n      this.updateState('ready');\n    },\n\n    /**\n     * Upon new feedback from the API, this function will grab the current\n     * pubSubKey Id for this widget and compare it to the one listed on the\n     * feedback object.  If they match, then the handlers are fired off for that\n     * code.\n     *\n     * @param {ApiFeedback} feedback\n     * @param {PubSubKey} pubSubKey\n     * @private\n     */\n    __handleFeedback: function __handleFeedback(feedback, pubSubKey) {\n      var id = this.getPubSub().getCurrentPubSubKey().getId();\n\n      if (id === pubSubKey.getId()) {\n        this.__widgetHandlerManager.fire(feedback.code, arguments, this);\n      }\n    },\n\n    /**\n     * Attaches a new handler onto an API code\n     *\n     * @param {Number} code - feedback code\n     * @param {function} handler - handler function\n     */\n    attachHandler: function attachHandler(code, handler) {\n      try {\n        this.__widgetHandlerManager.on(code, handler);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n\n    /**\n     * Attaches a general handler to all api feedback codes\n     *\n     * Includes the positive error codes and api request failures\n     *\n     * @param {function} handler - handler function\n     */\n    attachGeneralHandler: function attachGeneralHandler(handler) {\n      _.forEach(ApiFeedback.CODES, _.bind(function (code) {\n        if (code > 0 || code === ApiFeedback.CODES.API_REQUEST_ERROR) {\n          this.attachHandler(code, handler);\n        }\n      }, this));\n    },\n\n    /**\n     * Detaches a particular handler from all codes\n     *\n     * @param cb\n     */\n    detachHandler: function detachHandler(cb) {\n      this.__widgetHandlerManager.off(cb);\n    },\n\n    /**\n     * Called when the state changes to 'ready'\n     */\n    onReady: _.noop,\n\n    /**\n     * Called when the state changes to 'loading'\n     */\n    onLoading: _.noop,\n\n    /**\n     * Called when the state changes to 'idle'\n     */\n    onIdle: _.noop,\n\n    /**\n     * Called when the state changes to 'errored'\n     */\n    onErrored: _.noop,\n\n    /**\n     * Called on all state changes\n     */\n    onStateChange: _.noop,\n\n    /**\n     * Called by widgets to update their own state.  This will update the current\n     * state and also call any handlers.\n     *\n     * @param {string} state - the state to update to\n     */\n    updateState: function updateState(state) {\n      if (!state || !_.isString(state) || state === this.__state) {\n        // do nothing\n        return;\n      }\n\n      var prev = this.__state;\n      this.__state = state;\n\n      this.__fireStateHandler();\n\n      this.onStateChange.call(this, state, prev);\n    },\n\n    /**\n     * Get the current state value\n     */\n    getState: function getState() {\n      return this.__state;\n    },\n\n    /**\n     * This method looks at the current state and if a matching handler is\n     * provided, it will call it accordingly.\n     *\n     * @private\n     */\n    __fireStateHandler: function __fireStateHandler() {\n      var handlers = {};\n      handlers.ready = this.onReady;\n      handlers.loading = this.onLoading;\n      handlers.idle = this.onIdle;\n      handlers.errored = this.onErrored;\n      handlers[this.__state] && handlers[this.__state].call(this, this);\n    }\n  };\n  return WidgetStateManagerMixin;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_state_manager.js?");

/***/ }),

/***/ "./src/js/mixins/widget_utility.js":
/*!*****************************************!*\
  !*** ./src/js/mixins/widget_utility.js ***!
  \*****************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  var Utils = {}; // Helper method to extend an already existing method\n\n  Utils.extendMethod = function (to, from, methodName) {\n    // if the method is defined on from ...\n    if (!_.isUndefined(from[methodName])) {\n      var old = to[methodName]; // ... we create a new function on to\n\n      to[methodName] = function () {\n        // wherein we first call the method which exists on `to`\n        var oldReturn = old.apply(this, arguments); // and then call the method on `from`\n\n        from[methodName].apply(this, arguments); // and then return the expected result,\n        // i.e. what the method on `to` returns\n\n        return oldReturn;\n      };\n    }\n  };\n\n  return Utils;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/mixins/widget_utility.js?");

/***/ }),

/***/ "./src/js/widgets/base/base_widget.js":
/*!********************************************!*\
  !*** ./src/js/widgets/base/base_widget.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! marionette */ \"./src/libs/backbone.marionette.js\"), __webpack_require__(/*! js/components/api_query */ \"./src/js/components/api_query.js\"), __webpack_require__(/*! js/components/api_request */ \"./src/js/components/api_request.js\"), __webpack_require__(/*! js/mixins/widget_mixin_method */ \"./src/js/mixins/widget_mixin_method.js\"), __webpack_require__(/*! js/components/api_targets */ \"./src/js/components/api_targets.js\"), __webpack_require__(/*! js/mixins/dependon */ \"./src/js/mixins/dependon.js\"), __webpack_require__(/*! js/mixins/widget_state_manager */ \"./src/js/mixins/widget_state_manager.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, Marionette, ApiQuery, ApiRequest, WidgetMixin, ApiTargets, Dependon, WidgetStateManagerMixin) {\n  /**\n   * Default PubSub based widget; the main functionality is inside\n   *\n   *  dispa tchRequest()\n   *    - publishes ApiRequest object into PubSub (to initiate search)\n   *\n   *  processResponse()\n   *    - receives ApiResponse object as a direct reply for the previous\n   *      request\n   *\n   * You will want to override 'processResponse' method and possibly\n   * some of the other methods like this;\n   *\n   * var newWidgetClass = BaseWidget.extend({\n   *   composeRequest : function(){},\n   *   processRequest : function(){}\n   * });\n   *\n   * var newInstance = new newWidgetClass();\n   *\n   *\n   * If you need to provide your own views, do initalization etc., override\n   * initialize\n   *\n   * * var newWidgetClass = BaseWidget.extend({\n   *   initialize: function() {\n   *      // do something\n   *      BaseWidget.prototype.initialize.apply(this, arguments);\n   *   }\n   * });\n   *\n   *\n   * Some other options include:\n   *\n   *  defaultQueryArguments: this is a list of parameters added to each query\n   *\n   */\n  var BaseWidget = Marionette.Controller.extend({\n    initialize: function initialize(options) {\n      options = options || {}; // these methods are called by PubSub as handlers so we bind them to 'this' object\n      // and they will carry their own context 'this'\n\n      _.bindAll(this, 'dispatchRequest', 'processResponse');\n\n      this._currentQuery = new ApiQuery();\n      this.defaultQueryArguments = this.defaultQueryArguments || {};\n\n      if (options.defaultQueryArguments) {\n        this.defaultQueryArguments = _.extend(this.defaultQueryArguments, options.defaultQueryArguments);\n      }\n\n      if (options.view) {\n        this.view = options.view;\n        this.collection = options.view.collection;\n      } // our way of listening to views/models\n\n\n      if (this.view) Marionette.bindEntityEvents(this, this.view, Marionette.getOption(this, 'viewEvents'));\n      if (this.model) Marionette.bindEntityEvents(this, this.model, Marionette.getOption(this, 'modelEvents'));\n    },\n\n    /**\n     * Called by Bumblebee application when a widget is about to be registered\n     * it receives a BeeHive object, that contais methods/attributes that a\n     * widget needs to communicate with the app\n     *\n     * This is the place where you want to subscribe to events\n     *\n     * @param beehive\n     */\n    activate: function activate(beehive) {\n      this.setBeeHive(beehive);\n      var pubsub = beehive.getService('PubSub'); // custom dispatchRequest function goes here\n\n      pubsub.subscribe(pubsub.INVITING_REQUEST, _.bind(this.dispatchRequest, this)); // custom handleResponse function goes here\n\n      pubsub.subscribe(pubsub.DELIVERING_RESPONSE, _.bind(this.processResponse, this));\n    },\n\n    /**\n     * You should use this method when you want to initiaze global search action\n     * (ie. send a query to the pubsub)\n     *\n     * @param apiQuery\n     */\n    dispatchNewQuery: function dispatchNewQuery(apiQuery) {\n      // remove the arguments that are useful only to this widget\n      _.each(this.defaultQueryArguments, function (v, k) {\n        apiQuery.unset(k);\n      });\n\n      var pubsub = this.getPubSub();\n      pubsub.publish(pubsub.NAVIGATE, 'search-page', {\n        q: apiQuery\n      });\n    },\n\n    /**\n     * Default callback to be called by PubSub on 'INVITING_REQUEST'\n     */\n    dispatchRequest: function dispatchRequest(apiQuery) {\n      this._dispatchRequest(apiQuery);\n    },\n    _dispatchRequest: function _dispatchRequest(apiQuery) {\n      var q = this.customizeQuery(apiQuery);\n\n      if (q) {\n        var req = this.composeRequest(q);\n\n        if (req) {\n          var pubsub = this.getPubSub();\n          pubsub.publish(pubsub.DELIVERING_REQUEST, req);\n        }\n      }\n    },\n\n    /**\n     * Default action to modify ApiQuery (called from inside dispatchRequest)\n     *\n     * @param apiQuery\n     */\n    customizeQuery: function customizeQuery(apiQuery) {\n      var q = apiQuery.clone();\n      q.unlock();\n\n      if (this.defaultQueryArguments) {\n        q = this.composeQuery(this.defaultQueryArguments, q);\n      }\n\n      return q;\n    },\n\n    /**\n     * Default callback to be called by PubSub on 'DELIVERING_RESPONSE'\n     * @param apiResponse\n     */\n    processResponse: function processResponse(apiResponse) {\n      // in your widget, you should always set the current query like this\n      var q = apiResponse.getApiQuery();\n      this.setCurrentQuery(q);\n      throw new Error('you need to customize this function');\n    },\n\n    /**\n     * This function should return a request IFF we want to get some\n     * data - it is called from inside 'dispatchRequest' event handler\n     *\n     * @param object with params to add\n     * @returns {ApiRequest}\n     */\n    composeRequest: function composeRequest(apiQuery) {\n      return new ApiRequest({\n        target: ApiTargets.SEARCH,\n        query: apiQuery\n      });\n    },\n\n    /**\n     * Will save a clone of the apiQuery into the widget (for future use and\n     * reference)\n     *\n     * @param apiQuery\n     */\n    setCurrentQuery: function setCurrentQuery(apiQuery) {\n      this._currentQuery = apiQuery;\n    },\n\n    /**\n     * Returns the current ApiQuery\n     * if a query hasn't been set, it will check if there is one in storage,\n     * if not, it will return an empty query\n     *\n     * @returns {ApiQuery|*}\n     */\n    getCurrentQuery: function getCurrentQuery() {\n      var currQuery = new ApiQuery({});\n      var beehive;\n\n      try {\n        if (this._currentQuery instanceof ApiQuery) {\n          currQuery = this._currentQuery;\n        } else if (_.isFunction(this.getBeeHive)) {\n          beehive = this.getBeeHive();\n\n          if (beehive.hasObject('AppStorage')) {\n            var q = beehive.getObject('AppStorage').getCurrentQuery();\n\n            if (q instanceof ApiQuery) {\n              currQuery = q;\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e.message);\n      } finally {\n        return currQuery;\n      }\n    },\n\n    /**\n     * All purpose function for making a new query. It returns an apiQuery ready for\n     * newQuery event or for insertion into  apiRequest.\n     *\n     * @param queryParams\n     * @param apiQuery\n     * @returns {*}\n     */\n    composeQuery: function composeQuery(queryParams, apiQuery) {\n      var query;\n\n      if (!apiQuery) {\n        query = this.getCurrentQuery();\n        query = query.clone();\n      } else {\n        query = apiQuery;\n      }\n\n      if (queryParams) {\n        _.each(queryParams, function (v, k) {\n          if (!query.has(k)) query.set(k, v);\n        });\n      }\n\n      return query;\n    },\n    onDestroy: function onDestroy() {\n      this.view.destroy();\n    },\n\n    /**\n     * Convention inside Backbone and Marionette is to return 'this'\n     * - since 'this' usually refers to a 'View', we'll return the\n     * view's el here\n     * doesn't render unless it has to\n     *\n     * @returns {view.el}\n     */\n    getEl: function getEl() {\n      if (this.view.el && this.view.$el.children().length) {\n        return this.view.el;\n      }\n\n      return this.view.render().el;\n    },\n\n    /*\n     *\n     * convenience function for tests, always re-renders\n     *\n     * */\n    render: function render() {\n      return this.view.render();\n    },\n\n    /**\n     * Extracts identifier from a query object\n     *\n     * @param {ApiQuery} apiQuery\n     */\n    parseIdentifierFromQuery: function parseIdentifierFromQuery(apiQuery) {\n      if (!apiQuery.hasVal('q')) {\n        throw 'no query';\n      }\n\n      var q = apiQuery.get('q')[0];\n\n      try {\n        if (/^(?:identifier|bibcode):(.*)$/.test(q)) {\n          return q.split(':')[1];\n        }\n      } catch (e) {\n        throw 'unable to parse bibcode';\n      }\n\n      throw 'query must be in the format of identifer:foo or bibcode:foo';\n    }\n  }, {\n    mixin: WidgetMixin\n  });\n\n  _.extend(BaseWidget.prototype, Dependon.BeeHive, WidgetStateManagerMixin);\n\n  return BaseWidget;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/base/base_widget.js?");

/***/ }),

/***/ "./src/js/widgets/meta_tags/template/metatags.html":
/*!*********************************************************!*\
  !*** ./src/js/widgets/meta_tags/template/metatags.html ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../../../../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3=\"function\", alias4=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<meta name=\\\"og:description\\\" content=\\\"\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"abstract\") || (depth0 != null ? lookupProperty(depth0,\"abstract\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"abstract\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":16,\"column\":37},\"end\":{\"line\":16,\"column\":49}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n<meta name=\\\"twitter:description\\\" content=\\\"\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"abstract\") || (depth0 != null ? lookupProperty(depth0,\"abstract\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"abstract\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":17,\"column\":42},\"end\":{\"line\":17,\"column\":54}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\";\n},\"3\":function(container,depth0,helpers,partials,data) {\n    var alias1=container.lambda, alias2=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<meta name=\\\"citation_author\\\" content=\\\"\"\n    + alias2(alias1((depth0 != null ? lookupProperty(depth0,\"name\") : depth0), depth0))\n    + \"\\\" data-highwire=\\\"true\\\">\\n<meta xmlns=\\\"http://www.w3.org/1999/xhtml\\\" name=\\\"citation_author_institution\\\" content=\\\"\"\n    + alias2(alias1((depth0 != null ? lookupProperty(depth0,\"aff\") : depth0), depth0))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\";\n},\"5\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<meta name=\\\"citation_firstpage\\\" content=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"page\") || (depth0 != null ? lookupProperty(depth0,\"page\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"page\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":24,\"column\":41},\"end\":{\"line\":24,\"column\":49}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\";\n},\"7\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<meta name=\\\"citation_publication_date\\\" content=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"pubdate\") || (depth0 != null ? lookupProperty(depth0,\"pubdate\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"pubdate\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":27,\"column\":48},\"end\":{\"line\":27,\"column\":59}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\";\n},\"9\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<meta name=\\\"citation_journal_title\\\" content=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"pub_raw\") || (depth0 != null ? lookupProperty(depth0,\"pub_raw\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"pub_raw\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":30,\"column\":45},\"end\":{\"line\":30,\"column\":56}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\";\n},\"11\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<meta name=\\\"citation_volume\\\" content=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"volume\") || (depth0 != null ? lookupProperty(depth0,\"volume\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"volume\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":33,\"column\":38},\"end\":{\"line\":33,\"column\":48}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\";\n},\"13\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<meta name=\\\"citation_issue\\\" content=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"issue\") || (depth0 != null ? lookupProperty(depth0,\"issue\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"issue\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":36,\"column\":37},\"end\":{\"line\":36,\"column\":46}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\";\n},\"15\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<meta name=\\\"citation_doi\\\" content=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"doi\") || (depth0 != null ? lookupProperty(depth0,\"doi\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"doi\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":39,\"column\":35},\"end\":{\"line\":39,\"column\":42}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\";\n},\"17\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<meta name=\\\"citation_issn\\\" content=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"issn\") || (depth0 != null ? lookupProperty(depth0,\"issn\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"issn\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":42,\"column\":36},\"end\":{\"line\":42,\"column\":44}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\";\n},\"19\":function(container,depth0,helpers,partials,data) {\n    return \"<meta name=\\\"citation_keywords\\\" content=\\\"\"\n    + container.escapeExpression(container.lambda(depth0, depth0))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\";\n},\"21\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<meta name=\\\"citation_pdf_url\\\" content=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"pdfUrl\") || (depth0 != null ? lookupProperty(depth0,\"pdfUrl\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"pdfUrl\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":48,\"column\":39},\"end\":{\"line\":48,\"column\":49}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3=\"function\", alias4=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<meta name=\\\"og:type\\\" content=\\\"article\\\" data-highwire=\\\"true\\\">\\n<meta name=\\\"twitter:card\\\" content=\\\"summary\\\" data-highwire=\\\"true\\\">\\n\\n<meta name=\\\"citation_title\\\" content=\\\"\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"title\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":4,\"column\":37},\"end\":{\"line\":4,\"column\":46}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n<meta name=\\\"og:title\\\" content=\\\"\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"title\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":5,\"column\":31},\"end\":{\"line\":5,\"column\":40}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n<meta name=\\\"twitter:title\\\" content=\\\"\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"title\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":6,\"column\":36},\"end\":{\"line\":6,\"column\":45}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\\n<meta name=\\\"og:url\\\" content=\\\"\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"url\") || (depth0 != null ? lookupProperty(depth0,\"url\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"url\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":8,\"column\":29},\"end\":{\"line\":8,\"column\":36}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n<meta name=\\\"twitter:url\\\" content=\\\"\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"url\") || (depth0 != null ? lookupProperty(depth0,\"url\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"url\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":9,\"column\":34},\"end\":{\"line\":9,\"column\":41}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n<meta name=\\\"citation_abstract_html_url\\\" content=\\\"\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"url\") || (depth0 != null ? lookupProperty(depth0,\"url\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"url\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":10,\"column\":49},\"end\":{\"line\":10,\"column\":56}}}) : helper)))\n    + \"\\\" data-highwire=\\\"true\\\">\\n\\n<meta name=\\\"og:image\\\" content=\\\"https://ui.adsabs.harvard.edu/styles/img/transparent_logo.svg\\\" data-highwire=\\\"true\\\">\\n<meta name=\\\"twitter:image\\\" content=\\\"https://ui.adsabs.harvard.edu/styles/img/transparent_logo.svg\\\" data-highwire=\\\"true\\\">\\n\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"abstract\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":15,\"column\":0},\"end\":{\"line\":18,\"column\":7}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"each\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"author\") : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":container.program(3, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":19,\"column\":0},\"end\":{\"line\":22,\"column\":9}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"page\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(5, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":23,\"column\":0},\"end\":{\"line\":25,\"column\":7}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"pubdate\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(7, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":26,\"column\":0},\"end\":{\"line\":28,\"column\":7}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"pub\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(9, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":29,\"column\":0},\"end\":{\"line\":31,\"column\":7}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"volume\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(11, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":32,\"column\":0},\"end\":{\"line\":34,\"column\":7}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"issue\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(13, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":35,\"column\":0},\"end\":{\"line\":37,\"column\":7}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"doi\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(15, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":38,\"column\":0},\"end\":{\"line\":40,\"column\":7}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"issn\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(17, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":41,\"column\":0},\"end\":{\"line\":43,\"column\":7}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"each\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"keyword\") : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":container.program(19, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":44,\"column\":0},\"end\":{\"line\":46,\"column\":9}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"pdfUrl\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(21, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":47,\"column\":0},\"end\":{\"line\":49,\"column\":7}}})) != null ? stack1 : \"\");\n},\"useData\":true});\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/meta_tags/template/metatags.html?");

/***/ }),

/***/ "./src/js/widgets/meta_tags/widget.js":
/*!********************************************!*\
  !*** ./src/js/widgets/meta_tags/widget.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./src/libs/jquery.js\"), __webpack_require__(/*! backbone */ \"./src/libs/backbone.js\"), __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore-umd.js\"), __webpack_require__(/*! js/widgets/base/base_widget */ \"./src/js/widgets/base/base_widget.js\"), __webpack_require__(/*! hbs!js/widgets/meta_tags/template/metatags */ \"./src/js/widgets/meta_tags/template/metatags.html\"), __webpack_require__(/*! js/mixins/link_generator_mixin */ \"./src/js/mixins/link_generator_mixin.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Backbone, _, BaseWidget, metatagsTemplate, LinkGenerator) {\n  var View = Backbone.View.extend({\n    destroy: function destroy() {\n      this.remove();\n    }\n  });\n  var Widget = BaseWidget.extend({\n    initialize: function initialize(options) {\n      this.options = options || {};\n      this.view = new View();\n      this._bibcode = null;\n    },\n    activate: function activate(beehive) {\n      this.setBeeHive(beehive);\n      var pubsub = beehive.getService('PubSub');\n\n      _.bindAll(this, ['onDisplayDocuments', 'processResponse']);\n\n      pubsub.subscribe(pubsub.DELIVERING_RESPONSE, this.processResponse);\n      pubsub.subscribe(pubsub.DISPLAY_DOCUMENTS, this.onDisplayDocuments);\n    },\n    processResponse: function processResponse(apiResponse) {\n      var data = apiResponse.get('response.docs[0]', false, {});\n      this.updateMetaTags(data);\n    },\n    getCachedDoc: function getCachedDoc(bibcode) {\n      var fields = this.defaultQueryArguments.fl.split(','); // Attempt to shortcut the request by using stashed docs\n\n      var docs = this.getBeeHive().getObject('DocStashController').getDocs();\n      var found = docs.find(function (doc) {\n        return doc.bibcode === bibcode;\n      });\n\n      if (found) {\n        // Most will have DOIs, but account for other identifier formats\n        // These are optional\n        var finalDoc = _objectSpread({\n          issn: undefined,\n          isbn: undefined\n        }, found);\n\n        var keys = Object.keys(finalDoc);\n        var hasRequiredKeys = fields.every(function (f) {\n          return keys.includes(f);\n        });\n        return hasRequiredKeys ? finalDoc : null;\n      }\n\n      return null;\n    },\n    onDisplayDocuments: function onDisplayDocuments(apiQuery) {\n      var currentQuery = this.getCurrentQuery();\n\n      if (_.isEqual(currentQuery.toJSON(), apiQuery.toJSON())) {\n        return;\n      }\n\n      this.setCurrentQuery(apiQuery);\n      var bibcode = this.parseIdentifierFromQuery(apiQuery);\n\n      if (bibcode === 'null') {\n        return;\n      }\n\n      var doc = this.getCachedDoc(bibcode);\n\n      if (doc) {\n        this.updateMetaTags(doc);\n        return;\n      }\n\n      this.dispatchRequest(apiQuery.clone());\n    },\n    updateMetaTags: function updateMetaTags(data) {\n      data.url = Backbone.history.location.href;\n      var sources = {};\n\n      try {\n        sources = this.parseResourcesData(data);\n      } catch (e) {// do nothing\n      } // Look for `PDF` in title of the source\n\n\n      if (_.isArray(sources.fullTextSources) && sources.fullTextSources.length > 0) {\n        var found = _.find(sources.fullTextSources, function (source) {\n          return /PDF/.test(source.name);\n        });\n\n        if (found) {\n          data.pdfUrl = found.url;\n        }\n      }\n\n      if (_.isArray(data.doi) && data.doi.length > 0) {\n        data.doi = data.doi[0];\n      }\n\n      if (data.aff && data.author) {\n        data.author = _.map(data.author, function (author, n) {\n          return {\n            name: author,\n            aff: data.aff[n]\n          };\n        });\n      } // Update the <head> with the meta tags\n\n\n      $('head').append(function () {\n        return $(metatagsTemplate(data)).filter(function () {\n          var name = $(this).attr('name');\n\n          if (name) {\n            // check to see if the tag already exists\n            return !$('head>meta[name=\"' + name + '\"]').length;\n          }\n\n          return true;\n        });\n      }); // fire off dom events\n\n      this.emitDOMEvents();\n    },\n\n    /**\n     * Emit DOM events following render of metatags\n     * this helps third-party extensions/applications which rely on events for\n     * performing actions on the page\n     */\n    emitDOMEvents: function emitDOMEvents() {\n      _.forEach(['ZoteroItemUpdated', 'ADSPageLoaded'], function (ev) {\n        window.document.dispatchEvent(new Event(ev), {\n          bubbles: true,\n          cancelable: true\n        });\n      });\n    },\n    defaultQueryArguments: {\n      fl: 'links_data,[citations],keyword,property,first_author,year,issn,isbn,title,aff,abstract,bibcode,pub,pub_raw,volume,author,issue,pubdate,doi,page,esources,data',\n      rows: 1\n    }\n  });\n\n  _.extend(Widget.prototype, LinkGenerator);\n\n  return Widget;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://bumblebee/./src/js/widgets/meta_tags/widget.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd define */
/******/ 	!function() {
/******/ 		__webpack_require__.amdD = function () {
/******/ 			throw new Error('define cannot be used indirect');
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/amd options */
/******/ 	!function() {
/******/ 		__webpack_require__.amdO = {};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	!function() {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = function(result, chunkIds, fn, priority) {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var chunkIds = deferred[i][0];
/******/ 				var fn = deferred[i][1];
/******/ 				var priority = deferred[i][2];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.nmd = function(module) {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"MetaTagsWidget": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkbumblebee"] = self["webpackChunkbumblebee"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	!function() {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendor"], function() { return __webpack_require__("./src/js/widgets/meta_tags/widget.js"); })
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;